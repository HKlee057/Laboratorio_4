

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 12:22:18 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0000                     	;# 
   367  0001                     	;# 
   368  0002                     	;# 
   369  0003                     	;# 
   370  0004                     	;# 
   371  0005                     	;# 
   372  0006                     	;# 
   373  0007                     	;# 
   374  0008                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000D                     	;# 
   380  000E                     	;# 
   381  000E                     	;# 
   382  000F                     	;# 
   383  0010                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0013                     	;# 
   387  0014                     	;# 
   388  0015                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001D                     	;# 
   399  001E                     	;# 
   400  001F                     	;# 
   401  0081                     	;# 
   402  0085                     	;# 
   403  0086                     	;# 
   404  0087                     	;# 
   405  0088                     	;# 
   406  0089                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  008F                     	;# 
   411  0090                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  0105                     	;# 
   430  0107                     	;# 
   431  0108                     	;# 
   432  0109                     	;# 
   433  010C                     	;# 
   434  010C                     	;# 
   435  010D                     	;# 
   436  010E                     	;# 
   437  010F                     	;# 
   438  0185                     	;# 
   439  0187                     	;# 
   440  0188                     	;# 
   441  0189                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0013                     _SSPBUF	set	19
   445  0014                     _SSPCON	set	20
   446  0019                     _TXREG	set	25
   447  001A                     _RCREG	set	26
   448  000C                     _PIR1bits	set	12
   449  0018                     _RCSTAbits	set	24
   450  000B                     _INTCON	set	11
   451  0007                     _PORTCbits	set	7
   452  0008                     _PORTD	set	8
   453  0007                     _PORTC	set	7
   454  0006                     _PORTB	set	6
   455  0005                     _PORTA	set	5
   456  0094                     _SSPSTATbits	set	148
   457  0094                     _SSPSTAT	set	148
   458  008F                     _OSCCONbits	set	143
   459  0098                     _TXSTAbits	set	152
   460  0099                     _SPBRG	set	153
   461  0088                     _TRISD	set	136
   462  0087                     _TRISCbits	set	135
   463  0087                     _TRISC	set	135
   464  0086                     _TRISB	set	134
   465  0085                     _TRISA	set	133
   466  043B                     _TRISC3	set	1083
   467  043D                     _TRISC5	set	1085
   468  0189                     _ANSELH	set	393
   469  0188                     _ANSEL	set	392
   470                           
   471                           ; #config settings
   472  0000                     
   473                           	psect	cinit
   474  07FA                     start_initialization:	
   475  07FA                     __initialization:	
   476                           
   477                           ; Clear objects allocated to COMMON
   478  07FA  01FB               	clrf	__pbssCOMMON& (0+127)
   479  07FB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   480  07FC                     end_of_initialization:	
   481                           ;End of C runtime variable initialization code
   482                           
   483  07FC                     __end_of__initialization:	
   484  07FC  0183               	clrf	3
   485  07FD  120A  118A  2EE9   	ljmp	_main	;jump to C main() function
   486                           
   487                           	psect	bssCOMMON
   488  007B                     __pbssCOMMON:	
   489  007B                     _RecPOT2:	
   490  007B                     	ds	1
   491  007C                     _RecPOT1:	
   492  007C                     	ds	1
   493                           
   494                           	psect	cstackCOMMON
   495  0070                     __pcstackCOMMON:	
   496  0070                     ?_initOsc:	
   497  0070                     ??_initOsc:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_init:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_UART_Read:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ??_UART_Read:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_spiWrite:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ??_spiWrite:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_spiRead:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ??_spiRead:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_spiInit:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_main:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_spiReceiveWait:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_spiReceiveWait:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?___aldiv:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     spiInit@sDataSample:	
   537                           ; 4 bytes @ 0x0
   538                           
   539  0070                     spiWrite@dat:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ___aldiv@divisor:	
   543                           ; 1 bytes @ 0x0
   544                           
   545                           
   546                           ; 4 bytes @ 0x0
   547  0070                     	ds	1
   548  0071                     spiInit@sClockIdle:	
   549                           
   550                           ; 1 bytes @ 0x1
   551  0071                     	ds	1
   552  0072                     initOsc@frec:	
   553  0072                     spiInit@sTransmitEdge:	
   554                           ; 1 bytes @ 0x2
   555                           
   556                           
   557                           ; 1 bytes @ 0x2
   558  0072                     	ds	1
   559  0073                     ??_spiInit:	
   560  0073                     spiInit@sType:	
   561                           ; 1 bytes @ 0x3
   562                           
   563                           
   564                           ; 1 bytes @ 0x3
   565  0073                     	ds	1
   566  0074                     ??_init:	
   567  0074                     ___aldiv@dividend:	
   568                           ; 1 bytes @ 0x4
   569                           
   570                           
   571                           ; 4 bytes @ 0x4
   572  0074                     	ds	4
   573  0078                     ??___aldiv:	
   574                           
   575                           ; 1 bytes @ 0x8
   576  0078                     	ds	1
   577  0079                     ??_main:	
   578                           
   579                           ; 1 bytes @ 0x9
   580  0079                     	ds	2
   581                           
   582                           	psect	cstackBANK0
   583  0020                     __pcstackBANK0:	
   584  0020                     ___aldiv@counter:	
   585                           
   586                           ; 1 bytes @ 0x0
   587  0020                     	ds	1
   588  0021                     ___aldiv@sign:	
   589                           
   590                           ; 1 bytes @ 0x1
   591  0021                     	ds	1
   592  0022                     ___aldiv@quotient:	
   593                           
   594                           ; 4 bytes @ 0x2
   595  0022                     	ds	4
   596  0026                     ?_UART_Init:	
   597  0026                     UART_Init@baudrate:	
   598                           ; 1 bytes @ 0x6
   599                           
   600                           
   601                           ; 4 bytes @ 0x6
   602  0026                     	ds	4
   603  002A                     ??_UART_Init:	
   604                           
   605                           ; 1 bytes @ 0xA
   606  002A                     	ds	12
   607                           
   608                           	psect	maintext
   609  06E9                     __pmaintext:	
   610 ;;
   611 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   612 ;;
   613 ;; *************** function _main *****************
   614 ;; Defined at:
   615 ;;		line 50 in file "Master_Lab_4.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : B00/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0
   631 ;;      Temps:          2       0       0       0       0
   632 ;;      Totals:         2       0       0       0       0
   633 ;;Total ram usage:        2 bytes
   634 ;; Hardware stack levels required when called:    2
   635 ;; This function calls:
   636 ;;		_UART_Init
   637 ;;		_UART_Read
   638 ;;		_init
   639 ;;		_initOsc
   640 ;;		_spiRead
   641 ;;		_spiWrite
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function _main
   649  06E9                     _main:	
   650  06E9                     l972:	
   651                           ;incstack = 0
   652                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   653                           
   654                           
   655                           ;Master_Lab_4.c: 51:     initOsc(7);
   656  06E9  3007               	movlw	7
   657  06EA  120A  118A  2626  120A  118A  	fcall	_initOsc
   658  06EF                     l974:	
   659                           
   660                           ;Master_Lab_4.c: 52:     init();
   661  06EF  120A  118A  260E  120A  118A  	fcall	_init
   662  06F4                     l976:	
   663                           
   664                           ;Master_Lab_4.c: 53:     UART_Init(9600);
   665  06F4  3000               	movlw	0
   666  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   667  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   668  06F7  00A9               	movwf	UART_Init@baudrate+3
   669  06F8  3000               	movlw	0
   670  06F9  00A8               	movwf	UART_Init@baudrate+2
   671  06FA  3025               	movlw	37
   672  06FB  00A7               	movwf	UART_Init@baudrate+1
   673  06FC  3080               	movlw	128
   674  06FD  00A6               	movwf	UART_Init@baudrate
   675  06FE  120A  118A  2682  120A  118A  	fcall	_UART_Init
   676  0703                     l978:	
   677                           
   678                           ;Master_Lab_4.c: 55:     PORTA = 0;
   679  0703  1283               	bcf	3,5	;RP0=0, select bank0
   680  0704  1303               	bcf	3,6	;RP1=0, select bank0
   681  0705  0185               	clrf	5	;volatile
   682  0706                     l980:	
   683                           
   684                           ;Master_Lab_4.c: 56:     PORTB = 0;
   685  0706  0186               	clrf	6	;volatile
   686  0707                     l982:	
   687                           
   688                           ;Master_Lab_4.c: 57:     PORTC = 0;
   689  0707  0187               	clrf	7	;volatile
   690  0708                     l984:	
   691                           
   692                           ;Master_Lab_4.c: 58:     PORTD = 0;
   693  0708  0188               	clrf	8	;volatile
   694  0709                     l986:	
   695                           
   696                           ;Master_Lab_4.c: 61:         PORTB = UART_Read();
   697  0709  120A  118A  25E7  120A  118A  	fcall	_UART_Read
   698  070E  1283               	bcf	3,5	;RP0=0, select bank0
   699  070F  1303               	bcf	3,6	;RP1=0, select bank0
   700  0710  0086               	movwf	6	;volatile
   701  0711                     l988:	
   702                           
   703                           ;Master_Lab_4.c: 63:         PORTCbits.RC2 = 0;
   704  0711  1107               	bcf	7,2	;volatile
   705  0712                     l990:	
   706                           
   707                           ;Master_Lab_4.c: 64:         _delay((unsigned long)((1)*(8000000/4000.0)));
   708  0712  3003               	movlw	3
   709  0713  00FA               	movwf	??_main+1
   710  0714  3097               	movlw	151
   711  0715  00F9               	movwf	??_main
   712  0716                     u327:	
   713  0716  0BF9               	decfsz	??_main,f
   714  0717  2F16               	goto	u327
   715  0718  0BFA               	decfsz	??_main+1,f
   716  0719  2F16               	goto	u327
   717  071A  2F1B               	nop2
   718  071B                     l992:	
   719                           
   720                           ;Master_Lab_4.c: 65:         spiWrite(1);
   721  071B  3001               	movlw	1
   722  071C  120A  118A  25DA  120A  118A  	fcall	_spiWrite
   723  0721                     l994:	
   724                           
   725                           ;Master_Lab_4.c: 66:         RecPOT1 = spiRead();
   726  0721  120A  118A  25EF  120A  118A  	fcall	_spiRead
   727  0726  00F9               	movwf	??_main
   728  0727  0879               	movf	??_main,w
   729  0728  00FC               	movwf	_RecPOT1
   730  0729                     l996:	
   731                           
   732                           ;Master_Lab_4.c: 67:         _delay((unsigned long)((1)*(8000000/4000.0)));
   733  0729  3003               	movlw	3
   734  072A  00FA               	movwf	??_main+1
   735  072B  3097               	movlw	151
   736  072C  00F9               	movwf	??_main
   737  072D                     u337:	
   738  072D  0BF9               	decfsz	??_main,f
   739  072E  2F2D               	goto	u337
   740  072F  0BFA               	decfsz	??_main+1,f
   741  0730  2F2D               	goto	u337
   742  0731  2F32               	nop2
   743  0732                     l998:	
   744                           
   745                           ;Master_Lab_4.c: 68:         PORTCbits.RC2 = 1;
   746  0732  1283               	bcf	3,5	;RP0=0, select bank0
   747  0733  1303               	bcf	3,6	;RP1=0, select bank0
   748  0734  1507               	bsf	7,2	;volatile
   749  0735                     l1000:	
   750                           
   751                           ;Master_Lab_4.c: 70:         PORTCbits.RC2 = 0;
   752  0735  1107               	bcf	7,2	;volatile
   753  0736                     l1002:	
   754                           
   755                           ;Master_Lab_4.c: 71:         _delay((unsigned long)((1)*(8000000/4000.0)));
   756  0736  3003               	movlw	3
   757  0737  00FA               	movwf	??_main+1
   758  0738  3097               	movlw	151
   759  0739  00F9               	movwf	??_main
   760  073A                     u347:	
   761  073A  0BF9               	decfsz	??_main,f
   762  073B  2F3A               	goto	u347
   763  073C  0BFA               	decfsz	??_main+1,f
   764  073D  2F3A               	goto	u347
   765  073E  2F3F               	nop2
   766  073F                     l1004:	
   767                           
   768                           ;Master_Lab_4.c: 72:         spiWrite(2);
   769  073F  3002               	movlw	2
   770  0740  120A  118A  25DA  120A  118A  	fcall	_spiWrite
   771  0745                     l1006:	
   772                           
   773                           ;Master_Lab_4.c: 73:         RecPOT2= spiRead();
   774  0745  120A  118A  25EF  120A  118A  	fcall	_spiRead
   775  074A  00F9               	movwf	??_main
   776  074B  0879               	movf	??_main,w
   777  074C  00FB               	movwf	_RecPOT2
   778  074D                     l1008:	
   779                           
   780                           ;Master_Lab_4.c: 74:         _delay((unsigned long)((1)*(8000000/4000.0)));
   781  074D  3003               	movlw	3
   782  074E  00FA               	movwf	??_main+1
   783  074F  3097               	movlw	151
   784  0750  00F9               	movwf	??_main
   785  0751                     u357:	
   786  0751  0BF9               	decfsz	??_main,f
   787  0752  2F51               	goto	u357
   788  0753  0BFA               	decfsz	??_main+1,f
   789  0754  2F51               	goto	u357
   790  0755  2F56               	nop2
   791  0756                     l1010:	
   792                           
   793                           ;Master_Lab_4.c: 75:         PORTCbits.RC2 = 1;
   794  0756  1283               	bcf	3,5	;RP0=0, select bank0
   795  0757  1303               	bcf	3,6	;RP1=0, select bank0
   796  0758  1507               	bsf	7,2	;volatile
   797  0759  2F09               	goto	l986
   798  075A  120A  118A  2800   	ljmp	start
   799  075D                     __end_of_main:	
   800                           
   801                           	psect	text1
   802  05DA                     __ptext1:	
   803 ;; *************** function _spiWrite *****************
   804 ;; Defined at:
   805 ;;		line 32 in file "SPI.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  dat             1    wreg     unsigned char 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  dat             1    0[COMMON] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;                  1    wreg      void 
   812 ;; Registers used:
   813 ;;		wreg
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         0       0       0       0       0
   820 ;;      Locals:         1       0       0       0       0
   821 ;;      Temps:          0       0       0       0       0
   822 ;;      Totals:         1       0       0       0       0
   823 ;;Total ram usage:        1 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _spiWrite
   834  05DA                     _spiWrite:	
   835                           
   836                           ;incstack = 0
   837                           ; Regs used in _spiWrite: [wreg]
   838                           ;spiWrite@dat stored from wreg
   839  05DA  00F0               	movwf	spiWrite@dat
   840  05DB                     l818:	
   841                           
   842                           ;SPI.c: 32: void spiWrite(char dat);SPI.c: 33: {;SPI.c: 34:     SSPBUF = dat;
   843  05DB  0870               	movf	spiWrite@dat,w
   844  05DC  1283               	bcf	3,5	;RP0=0, select bank0
   845  05DD  1303               	bcf	3,6	;RP1=0, select bank0
   846  05DE  0093               	movwf	19	;volatile
   847  05DF                     l124:	
   848  05DF  0008               	return
   849  05E0                     __end_of_spiWrite:	
   850                           
   851                           	psect	text2
   852  05EF                     __ptext2:	
   853 ;; *************** function _spiRead *****************
   854 ;; Defined at:
   855 ;;		line 45 in file "SPI.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      unsigned char 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0, pclath, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0
   872 ;;      Totals:         0       0       0       0       0
   873 ;;Total ram usage:        0 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    1
   876 ;; This function calls:
   877 ;;		_spiReceiveWait
   878 ;; This function is called by:
   879 ;;		_main
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _spiRead
   885  05EF                     _spiRead:	
   886  05EF                     l820:	
   887                           ;incstack = 0
   888                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   889                           
   890                           
   891                           ;SPI.c: 47:     spiReceiveWait();
   892  05EF  120A  118A  25E0  120A  118A  	fcall	_spiReceiveWait
   893  05F4                     l822:	
   894                           
   895                           ;SPI.c: 48:     return(SSPBUF);
   896  05F4  1283               	bcf	3,5	;RP0=0, select bank0
   897  05F5  1303               	bcf	3,6	;RP1=0, select bank0
   898  05F6  0813               	movf	19,w	;volatile
   899  05F7                     l132:	
   900  05F7  0008               	return
   901  05F8                     __end_of_spiRead:	
   902                           
   903                           	psect	text3
   904  05E0                     __ptext3:	
   905 ;; *************** function _spiReceiveWait *****************
   906 ;; Defined at:
   907 ;;		line 27 in file "SPI.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;		None
   910 ;; Auto vars:     Size  Location     Type
   911 ;;		None
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		None
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         0       0       0       0       0
   922 ;;      Locals:         0       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0
   924 ;;      Totals:         0       0       0       0       0
   925 ;;Total ram usage:        0 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_spiRead
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _spiReceiveWait
   936  05E0                     _spiReceiveWait:	
   937  05E0                     l734:	
   938                           ;incstack = 0
   939                           ; Regs used in _spiReceiveWait: []
   940                           
   941  05E0                     l118:	
   942                           ;SPI.c: 29:     while ( !SSPSTATbits.BF );
   943                           
   944  05E0  1683               	bsf	3,5	;RP0=1, select bank1
   945  05E1  1303               	bcf	3,6	;RP1=0, select bank1
   946  05E2  1C14               	btfss	20,0	;volatile
   947  05E3  2DE5               	goto	u21
   948  05E4  2DE6               	goto	u20
   949  05E5                     u21:	
   950  05E5  2DE0               	goto	l118
   951  05E6                     u20:	
   952  05E6                     l121:	
   953  05E6  0008               	return
   954  05E7                     __end_of_spiReceiveWait:	
   955                           
   956                           	psect	text4
   957  0626                     __ptext4:	
   958 ;; *************** function _initOsc *****************
   959 ;; Defined at:
   960 ;;		line 8 in file "Oscilador.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  frec            1    wreg     unsigned char 
   963 ;; Auto vars:     Size  Location     Type
   964 ;;  frec            1    2[COMMON] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         1       0       0       0       0
   976 ;;      Temps:          2       0       0       0       0
   977 ;;      Totals:         3       0       0       0       0
   978 ;;Total ram usage:        3 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           
   988                           ;psect for function _initOsc
   989  0626                     _initOsc:	
   990                           
   991                           ;incstack = 0
   992                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   993                           ;initOsc@frec stored from wreg
   994  0626  00F2               	movwf	initOsc@frec
   995  0627                     l776:	
   996                           
   997                           ;Oscilador.c: 9:     switch(frec){
   998  0627  2E5E               	goto	l780
   999  0628                     l88:	
  1000                           ;Oscilador.c: 10:         case 0:
  1001                           
  1002                           
  1003                           ;Oscilador.c: 11:             OSCCONbits.IRCF0 = 0;
  1004  0628  1683               	bsf	3,5	;RP0=1, select bank1
  1005  0629  1303               	bcf	3,6	;RP1=0, select bank1
  1006  062A  120F               	bcf	15,4	;volatile
  1007                           
  1008                           ;Oscilador.c: 12:             OSCCONbits.IRCF1 = 0;
  1009  062B  128F               	bcf	15,5	;volatile
  1010                           
  1011                           ;Oscilador.c: 13:             OSCCONbits.IRCF2 = 0;
  1012  062C  130F               	bcf	15,6	;volatile
  1013                           
  1014                           ;Oscilador.c: 14:             break;
  1015  062D  2E80               	goto	l89
  1016  062E                     l90:	
  1017                           ;Oscilador.c: 15:         case 1:
  1018                           
  1019                           
  1020                           ;Oscilador.c: 16:             OSCCONbits.IRCF0 = 1;
  1021  062E  1683               	bsf	3,5	;RP0=1, select bank1
  1022  062F  1303               	bcf	3,6	;RP1=0, select bank1
  1023  0630  160F               	bsf	15,4	;volatile
  1024                           
  1025                           ;Oscilador.c: 17:             OSCCONbits.IRCF1 = 0;
  1026  0631  128F               	bcf	15,5	;volatile
  1027                           
  1028                           ;Oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
  1029  0632  130F               	bcf	15,6	;volatile
  1030                           
  1031                           ;Oscilador.c: 19:             break;
  1032  0633  2E80               	goto	l89
  1033  0634                     l91:	
  1034                           ;Oscilador.c: 20:         case 2:
  1035                           
  1036                           
  1037                           ;Oscilador.c: 21:             OSCCONbits.IRCF0 = 0;
  1038  0634  1683               	bsf	3,5	;RP0=1, select bank1
  1039  0635  1303               	bcf	3,6	;RP1=0, select bank1
  1040  0636  120F               	bcf	15,4	;volatile
  1041                           
  1042                           ;Oscilador.c: 22:             OSCCONbits.IRCF1 = 1;
  1043  0637  168F               	bsf	15,5	;volatile
  1044                           
  1045                           ;Oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
  1046  0638  130F               	bcf	15,6	;volatile
  1047                           
  1048                           ;Oscilador.c: 24:             break;
  1049  0639  2E80               	goto	l89
  1050  063A                     l92:	
  1051                           ;Oscilador.c: 25:         case 3:
  1052                           
  1053                           
  1054                           ;Oscilador.c: 26:             OSCCONbits.IRCF0 = 1;
  1055  063A  1683               	bsf	3,5	;RP0=1, select bank1
  1056  063B  1303               	bcf	3,6	;RP1=0, select bank1
  1057  063C  160F               	bsf	15,4	;volatile
  1058                           
  1059                           ;Oscilador.c: 27:             OSCCONbits.IRCF1 = 1;
  1060  063D  168F               	bsf	15,5	;volatile
  1061                           
  1062                           ;Oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
  1063  063E  130F               	bcf	15,6	;volatile
  1064                           
  1065                           ;Oscilador.c: 29:             break;
  1066  063F  2E80               	goto	l89
  1067  0640                     l93:	
  1068                           ;Oscilador.c: 30:         case 4:
  1069                           
  1070                           
  1071                           ;Oscilador.c: 31:             OSCCONbits.IRCF0 = 0;
  1072  0640  1683               	bsf	3,5	;RP0=1, select bank1
  1073  0641  1303               	bcf	3,6	;RP1=0, select bank1
  1074  0642  120F               	bcf	15,4	;volatile
  1075                           
  1076                           ;Oscilador.c: 32:             OSCCONbits.IRCF1 = 0;
  1077  0643  128F               	bcf	15,5	;volatile
  1078                           
  1079                           ;Oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
  1080  0644  170F               	bsf	15,6	;volatile
  1081                           
  1082                           ;Oscilador.c: 34:             break;
  1083  0645  2E80               	goto	l89
  1084  0646                     l94:	
  1085                           ;Oscilador.c: 35:         case 5:
  1086                           
  1087                           
  1088                           ;Oscilador.c: 36:             OSCCONbits.IRCF0 = 1;
  1089  0646  1683               	bsf	3,5	;RP0=1, select bank1
  1090  0647  1303               	bcf	3,6	;RP1=0, select bank1
  1091  0648  160F               	bsf	15,4	;volatile
  1092                           
  1093                           ;Oscilador.c: 37:             OSCCONbits.IRCF1 = 0;
  1094  0649  128F               	bcf	15,5	;volatile
  1095                           
  1096                           ;Oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
  1097  064A  170F               	bsf	15,6	;volatile
  1098                           
  1099                           ;Oscilador.c: 39:             break;
  1100  064B  2E80               	goto	l89
  1101  064C                     l95:	
  1102                           ;Oscilador.c: 40:         case 6:
  1103                           
  1104                           
  1105                           ;Oscilador.c: 41:             OSCCONbits.IRCF0 = 0;
  1106  064C  1683               	bsf	3,5	;RP0=1, select bank1
  1107  064D  1303               	bcf	3,6	;RP1=0, select bank1
  1108  064E  120F               	bcf	15,4	;volatile
  1109                           
  1110                           ;Oscilador.c: 42:             OSCCONbits.IRCF1 = 1;
  1111  064F  168F               	bsf	15,5	;volatile
  1112                           
  1113                           ;Oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
  1114  0650  170F               	bsf	15,6	;volatile
  1115                           
  1116                           ;Oscilador.c: 44:             break;
  1117  0651  2E80               	goto	l89
  1118  0652                     l96:	
  1119                           ;Oscilador.c: 45:         case 7:
  1120                           
  1121                           
  1122                           ;Oscilador.c: 46:             OSCCONbits.IRCF0 = 1;
  1123  0652  1683               	bsf	3,5	;RP0=1, select bank1
  1124  0653  1303               	bcf	3,6	;RP1=0, select bank1
  1125  0654  160F               	bsf	15,4	;volatile
  1126                           
  1127                           ;Oscilador.c: 47:             OSCCONbits.IRCF1 = 1;
  1128  0655  168F               	bsf	15,5	;volatile
  1129                           
  1130                           ;Oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
  1131  0656  170F               	bsf	15,6	;volatile
  1132                           
  1133                           ;Oscilador.c: 49:             break;
  1134  0657  2E80               	goto	l89
  1135  0658                     l97:	
  1136                           ;Oscilador.c: 50:         default:
  1137                           
  1138                           
  1139                           ;Oscilador.c: 51:             OSCCONbits.IRCF0 = 0;
  1140  0658  1683               	bsf	3,5	;RP0=1, select bank1
  1141  0659  1303               	bcf	3,6	;RP1=0, select bank1
  1142  065A  120F               	bcf	15,4	;volatile
  1143                           
  1144                           ;Oscilador.c: 52:             OSCCONbits.IRCF1 = 1;
  1145  065B  168F               	bsf	15,5	;volatile
  1146                           
  1147                           ;Oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
  1148  065C  170F               	bsf	15,6	;volatile
  1149                           
  1150                           ;Oscilador.c: 54:             break;
  1151  065D  2E80               	goto	l89
  1152  065E                     l780:	
  1153  065E  0872               	movf	initOsc@frec,w
  1154  065F  00F0               	movwf	??_initOsc
  1155  0660  01F1               	clrf	??_initOsc+1
  1156                           
  1157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1158                           ; Switch size 1, requested type "simple"
  1159                           ; Number of cases is 1, Range of values is 0 to 0
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte            4     3 (average)
  1163                           ; direct_byte           11     8 (fixed)
  1164                           ; jumptable            260     6 (fixed)
  1165                           ;	Chosen strategy is simple_byte
  1166  0661  0871               	movf	??_initOsc+1,w
  1167  0662  3A00               	xorlw	0	; case 0
  1168  0663  1903               	skipnz
  1169  0664  2E66               	goto	l1032
  1170  0665  2E58               	goto	l97
  1171  0666                     l1032:	
  1172                           
  1173                           ; Switch size 1, requested type "simple"
  1174                           ; Number of cases is 8, Range of values is 0 to 7
  1175                           ; switch strategies available:
  1176                           ; Name         Instructions Cycles
  1177                           ; simple_byte           25    13 (average)
  1178                           ; direct_byte           32     8 (fixed)
  1179                           ; jumptable            260     6 (fixed)
  1180                           ;	Chosen strategy is simple_byte
  1181  0666  0870               	movf	??_initOsc,w
  1182  0667  3A00               	xorlw	0	; case 0
  1183  0668  1903               	skipnz
  1184  0669  2E28               	goto	l88
  1185  066A  3A01               	xorlw	1	; case 1
  1186  066B  1903               	skipnz
  1187  066C  2E2E               	goto	l90
  1188  066D  3A03               	xorlw	3	; case 2
  1189  066E  1903               	skipnz
  1190  066F  2E34               	goto	l91
  1191  0670  3A01               	xorlw	1	; case 3
  1192  0671  1903               	skipnz
  1193  0672  2E3A               	goto	l92
  1194  0673  3A07               	xorlw	7	; case 4
  1195  0674  1903               	skipnz
  1196  0675  2E40               	goto	l93
  1197  0676  3A01               	xorlw	1	; case 5
  1198  0677  1903               	skipnz
  1199  0678  2E46               	goto	l94
  1200  0679  3A03               	xorlw	3	; case 6
  1201  067A  1903               	skipnz
  1202  067B  2E4C               	goto	l95
  1203  067C  3A01               	xorlw	1	; case 7
  1204  067D  1903               	skipnz
  1205  067E  2E52               	goto	l96
  1206  067F  2E58               	goto	l97
  1207  0680                     l89:	
  1208                           
  1209                           ;Oscilador.c: 57:     OSCCONbits.SCS = 1;
  1210  0680  140F               	bsf	15,0	;volatile
  1211  0681                     l98:	
  1212  0681  0008               	return
  1213  0682                     __end_of_initOsc:	
  1214                           
  1215                           	psect	text5
  1216  060E                     __ptext5:	
  1217 ;; *************** function _init *****************
  1218 ;; Defined at:
  1219 ;;		line 87 in file "Master_Lab_4.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0, pclath, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1233 ;;      Params:         0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0
  1236 ;;      Totals:         0       0       0       0       0
  1237 ;;Total ram usage:        0 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    1
  1240 ;; This function calls:
  1241 ;;		_spiInit
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           
  1248                           ;psect for function _init
  1249  060E                     _init:	
  1250  060E                     l946:	
  1251                           ;incstack = 0
  1252                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1253                           
  1254                           
  1255                           ;Master_Lab_4.c: 88:     TRISA = 0;
  1256  060E  1683               	bsf	3,5	;RP0=1, select bank1
  1257  060F  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0610  0185               	clrf	5	;volatile
  1259                           
  1260                           ;Master_Lab_4.c: 89:     TRISB = 0;
  1261  0611  0186               	clrf	6	;volatile
  1262                           
  1263                           ;Master_Lab_4.c: 90:     TRISC = 0;
  1264  0612  0187               	clrf	7	;volatile
  1265  0613                     l948:	
  1266                           
  1267                           ;Master_Lab_4.c: 91:     TRISCbits.TRISC7 = 1;
  1268  0613  1787               	bsf	7,7	;volatile
  1269  0614                     l950:	
  1270                           
  1271                           ;Master_Lab_4.c: 92:     TRISCbits.TRISC4 = 1;
  1272  0614  1607               	bsf	7,4	;volatile
  1273                           
  1274                           ;Master_Lab_4.c: 93:     TRISD = 0;
  1275  0615  0188               	clrf	8	;volatile
  1276                           
  1277                           ;Master_Lab_4.c: 94:     ANSEL = 0;
  1278  0616  1683               	bsf	3,5	;RP0=1, select bank3
  1279  0617  1703               	bsf	3,6	;RP1=1, select bank3
  1280  0618  0188               	clrf	8	;volatile
  1281                           
  1282                           ;Master_Lab_4.c: 95:     ANSELH = 0b00000000;
  1283  0619  0189               	clrf	9	;volatile
  1284  061A                     l952:	
  1285                           
  1286                           ;Master_Lab_4.c: 96:     INTCON = 0b11100000;
  1287  061A  30E0               	movlw	224
  1288  061B  008B               	movwf	11	;volatile
  1289  061C                     l954:	
  1290                           
  1291                           ;Master_Lab_4.c: 98:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1292  061C  01F0               	clrf	spiInit@sDataSample
  1293  061D  01F1               	clrf	spiInit@sClockIdle
  1294  061E  01F2               	clrf	spiInit@sTransmitEdge
  1295  061F  3020               	movlw	32
  1296  0620  120A  118A  25F8  120A  118A  	fcall	_spiInit
  1297  0625                     l57:	
  1298  0625  0008               	return
  1299  0626                     __end_of_init:	
  1300                           
  1301                           	psect	text6
  1302  05F8                     __ptext6:	
  1303 ;; *************** function _spiInit *****************
  1304 ;; Defined at:
  1305 ;;		line 10 in file "SPI.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  sType           1    wreg     enum E1264
  1308 ;;  sDataSample     1    0[COMMON] enum E1272
  1309 ;;  sClockIdle      1    1[COMMON] enum E1276
  1310 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;  sType           1    3[COMMON] enum E1264
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         3       0       0       0       0
  1323 ;;      Locals:         1       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0
  1325 ;;      Totals:         4       0       0       0       0
  1326 ;;Total ram usage:        4 bytes
  1327 ;; Hardware stack levels used:    1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_init
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           
  1336                           ;psect for function _spiInit
  1337  05F8                     _spiInit:	
  1338                           
  1339                           ;incstack = 0
  1340                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1341                           ;spiInit@sType stored from wreg
  1342  05F8  00F3               	movwf	spiInit@sType
  1343  05F9                     l896:	
  1344                           
  1345                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
  1346  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  1347  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  1348  05FB  1287               	bcf	7,5	;volatile
  1349                           
  1350                           ;SPI.c: 13:     if(sType & 0b00000100)
  1351  05FC  1D73               	btfss	spiInit@sType,2
  1352  05FD  2DFF               	goto	u181
  1353  05FE  2E00               	goto	u180
  1354  05FF                     u181:	
  1355  05FF  2E04               	goto	l902
  1356  0600                     u180:	
  1357  0600                     l898:	
  1358                           
  1359                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1360  0600  0872               	movf	spiInit@sTransmitEdge,w
  1361  0601  0094               	movwf	20	;volatile
  1362  0602                     l900:	
  1363                           
  1364                           ;SPI.c: 16:         TRISC3 = 1;
  1365  0602  1587               	bsf	7,3	;volatile
  1366                           
  1367                           ;SPI.c: 17:     }
  1368  0603  2E08               	goto	l114
  1369  0604                     l902:	
  1370                           
  1371                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1372  0604  0870               	movf	spiInit@sDataSample,w
  1373  0605  0472               	iorwf	spiInit@sTransmitEdge,w
  1374  0606  0094               	movwf	20	;volatile
  1375  0607                     l904:	
  1376                           
  1377                           ;SPI.c: 21:         TRISC3 = 0;
  1378  0607  1187               	bcf	7,3	;volatile
  1379  0608                     l114:	
  1380                           ;SPI.c: 22:     }
  1381                           
  1382                           
  1383                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
  1384  0608  0873               	movf	spiInit@sType,w
  1385  0609  0471               	iorwf	spiInit@sClockIdle,w
  1386  060A  1283               	bcf	3,5	;RP0=0, select bank0
  1387  060B  1303               	bcf	3,6	;RP1=0, select bank0
  1388  060C  0094               	movwf	20	;volatile
  1389  060D                     l115:	
  1390  060D  0008               	return
  1391  060E                     __end_of_spiInit:	
  1392                           
  1393                           	psect	text7
  1394  05E7                     __ptext7:	
  1395 ;; *************** function _UART_Read *****************
  1396 ;; Defined at:
  1397 ;;		line 34 in file "UART.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  1    wreg      unsigned char 
  1404 ;; Registers used:
  1405 ;;		wreg
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1411 ;;      Params:         0       0       0       0       0
  1412 ;;      Locals:         0       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0
  1414 ;;      Totals:         0       0       0       0       0
  1415 ;;Total ram usage:        0 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           
  1425                           ;psect for function _UART_Read
  1426  05E7                     _UART_Read:	
  1427  05E7                     l812:	
  1428                           ;incstack = 0
  1429                           ; Regs used in _UART_Read: [wreg]
  1430                           
  1431                           
  1432                           ;UART.c: 35:     if(PIR1bits.RCIF==1){
  1433  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  1434  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  1435  05E9  1E8C               	btfss	12,5	;volatile
  1436  05EA  2DEC               	goto	u161
  1437  05EB  2DED               	goto	u160
  1438  05EC                     u161:	
  1439  05EC  2DEE               	goto	l76
  1440  05ED                     u160:	
  1441  05ED                     l814:	
  1442                           
  1443                           ;UART.c: 36:         return RCREG;
  1444  05ED  081A               	movf	26,w	;volatile
  1445  05EE                     l76:	
  1446  05EE  0008               	return
  1447  05EF                     __end_of_UART_Read:	
  1448                           
  1449                           	psect	text8
  1450  0682                     __ptext8:	
  1451 ;; *************** function _UART_Init *****************
  1452 ;; Defined at:
  1453 ;;		line 18 in file "UART.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  baudrate        4    6[BANK0 ] const long 
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      unsigned char 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0, pclath, cstack
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         0       4       0       0       0
  1468 ;;      Locals:         0       0       0       0       0
  1469 ;;      Temps:          0      12       0       0       0
  1470 ;;      Totals:         0      16       0       0       0
  1471 ;;Total ram usage:       16 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    1
  1474 ;; This function calls:
  1475 ;;		___aldiv
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           
  1482                           ;psect for function _UART_Init
  1483  0682                     _UART_Init:	
  1484  0682                     l956:	
  1485                           ;incstack = 0
  1486                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1487                           
  1488                           
  1489                           ;UART.c: 19:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1490  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0684  0826               	movf	UART_Init@baudrate,w
  1493  0685  00AA               	movwf	??_UART_Init
  1494  0686  0827               	movf	UART_Init@baudrate+1,w
  1495  0687  00AB               	movwf	??_UART_Init+1
  1496  0688  0828               	movf	UART_Init@baudrate+2,w
  1497  0689  00AC               	movwf	??_UART_Init+2
  1498  068A  0829               	movf	UART_Init@baudrate+3,w
  1499  068B  00AD               	movwf	??_UART_Init+3
  1500  068C  3004               	movlw	4
  1501  068D                     u295:	
  1502  068D  1003               	clrc
  1503  068E  0DAA               	rlf	??_UART_Init,f
  1504  068F  0DAB               	rlf	??_UART_Init+1,f
  1505  0690  0DAC               	rlf	??_UART_Init+2,f
  1506  0691  0DAD               	rlf	??_UART_Init+3,f
  1507  0692                     u290:	
  1508  0692  3EFF               	addlw	-1
  1509  0693  1D03               	skipz
  1510  0694  2E8D               	goto	u295
  1511  0695  082D               	movf	??_UART_Init+3,w
  1512  0696  00F3               	movwf	___aldiv@divisor+3
  1513  0697  082C               	movf	??_UART_Init+2,w
  1514  0698  00F2               	movwf	___aldiv@divisor+2
  1515  0699  082B               	movf	??_UART_Init+1,w
  1516  069A  00F1               	movwf	___aldiv@divisor+1
  1517  069B  082A               	movf	??_UART_Init,w
  1518  069C  00F0               	movwf	___aldiv@divisor
  1519  069D  0826               	movf	UART_Init@baudrate,w
  1520  069E  00AE               	movwf	??_UART_Init+4
  1521  069F  0827               	movf	UART_Init@baudrate+1,w
  1522  06A0  00AF               	movwf	??_UART_Init+5
  1523  06A1  0828               	movf	UART_Init@baudrate+2,w
  1524  06A2  00B0               	movwf	??_UART_Init+6
  1525  06A3  0829               	movf	UART_Init@baudrate+3,w
  1526  06A4  00B1               	movwf	??_UART_Init+7
  1527  06A5  3004               	movlw	4
  1528  06A6                     u305:	
  1529  06A6  1003               	clrc
  1530  06A7  0DAE               	rlf	??_UART_Init+4,f
  1531  06A8  0DAF               	rlf	??_UART_Init+5,f
  1532  06A9  0DB0               	rlf	??_UART_Init+6,f
  1533  06AA  0DB1               	rlf	??_UART_Init+7,f
  1534  06AB                     u300:	
  1535  06AB  3EFF               	addlw	-1
  1536  06AC  1D03               	skipz
  1537  06AD  2EA6               	goto	u305
  1538  06AE  3000               	movlw	0
  1539  06AF  00B2               	movwf	??_UART_Init+8
  1540  06B0  3012               	movlw	18
  1541  06B1  00B3               	movwf	??_UART_Init+9
  1542  06B2  307A               	movlw	122
  1543  06B3  00B4               	movwf	??_UART_Init+10
  1544  06B4  3000               	movlw	0
  1545  06B5  00B5               	movwf	??_UART_Init+11
  1546  06B6  082E               	movf	??_UART_Init+4,w
  1547  06B7  02B2               	subwf	??_UART_Init+8,f
  1548  06B8  082F               	movf	??_UART_Init+5,w
  1549  06B9  1C03               	skipc
  1550  06BA  0F2F               	incfsz	??_UART_Init+5,w
  1551  06BB  2EBD               	goto	u311
  1552  06BC  2EBE               	goto	u312
  1553  06BD                     u311:	
  1554  06BD  02B3               	subwf	??_UART_Init+9,f
  1555  06BE                     u312:	
  1556  06BE  0830               	movf	??_UART_Init+6,w
  1557  06BF  1C03               	skipc
  1558  06C0  0F30               	incfsz	??_UART_Init+6,w
  1559  06C1  2EC3               	goto	u313
  1560  06C2  2EC4               	goto	u314
  1561  06C3                     u313:	
  1562  06C3  02B4               	subwf	??_UART_Init+10,f
  1563  06C4                     u314:	
  1564  06C4  0831               	movf	??_UART_Init+7,w
  1565  06C5  1C03               	skipc
  1566  06C6  0F31               	incfsz	??_UART_Init+7,w
  1567  06C7  2EC9               	goto	u315
  1568  06C8  2ECA               	goto	u316
  1569  06C9                     u315:	
  1570  06C9  02B5               	subwf	??_UART_Init+11,f
  1571  06CA                     u316:	
  1572  06CA  0835               	movf	??_UART_Init+11,w
  1573  06CB  00F7               	movwf	___aldiv@dividend+3
  1574  06CC  0834               	movf	??_UART_Init+10,w
  1575  06CD  00F6               	movwf	___aldiv@dividend+2
  1576  06CE  0833               	movf	??_UART_Init+9,w
  1577  06CF  00F5               	movwf	___aldiv@dividend+1
  1578  06D0  0832               	movf	??_UART_Init+8,w
  1579  06D1  00F4               	movwf	___aldiv@dividend
  1580  06D2  120A  118A  275D  120A  118A  	fcall	___aldiv
  1581  06D7  0870               	movf	?___aldiv,w
  1582  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  1583  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  1584  06DA  0099               	movwf	25	;volatile
  1585  06DB                     l958:	
  1586                           
  1587                           ;UART.c: 20:     TXSTAbits.BRGH = 1;
  1588  06DB  1518               	bsf	24,2	;volatile
  1589  06DC                     l960:	
  1590                           
  1591                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  1592  06DC  1218               	bcf	24,4	;volatile
  1593  06DD                     l962:	
  1594                           
  1595                           ;UART.c: 22:     RCSTAbits.SPEN = 1;
  1596  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1597  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1598  06DF  1798               	bsf	24,7	;volatile
  1599  06E0                     l964:	
  1600                           
  1601                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  1602  06E0  1618               	bsf	24,4	;volatile
  1603  06E1                     l966:	
  1604                           
  1605                           ;UART.c: 24:     TXSTAbits.TXEN = 1;
  1606  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  1607  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  1608  06E3  1698               	bsf	24,5	;volatile
  1609  06E4                     l968:	
  1610                           
  1611                           ;UART.c: 25:     TXSTAbits.TX9 = 0;
  1612  06E4  1318               	bcf	24,6	;volatile
  1613  06E5                     l970:	
  1614                           
  1615                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  1616  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1617  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1618  06E7  1318               	bcf	24,6	;volatile
  1619  06E8                     l72:	
  1620  06E8  0008               	return
  1621  06E9                     __end_of_UART_Init:	
  1622                           
  1623                           	psect	text9
  1624  075D                     __ptext9:	
  1625 ;; *************** function ___aldiv *****************
  1626 ;; Defined at:
  1627 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  divisor         4    0[COMMON] long 
  1630 ;;  dividend        4    4[COMMON] long 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  quotient        4    2[BANK0 ] long 
  1633 ;;  sign            1    1[BANK0 ] unsigned char 
  1634 ;;  counter         1    0[BANK0 ] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  4    0[COMMON] long 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         8       0       0       0       0
  1645 ;;      Locals:         0       6       0       0       0
  1646 ;;      Temps:          1       0       0       0       0
  1647 ;;      Totals:         9       6       0       0       0
  1648 ;;Total ram usage:       15 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_UART_Init
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           
  1658                           ;psect for function ___aldiv
  1659  075D                     ___aldiv:	
  1660  075D                     l906:	
  1661                           ;incstack = 0
  1662                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1663                           
  1664  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1665  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1666  075F  01A1               	clrf	___aldiv@sign
  1667  0760                     l908:	
  1668  0760  1FF3               	btfss	___aldiv@divisor+3,7
  1669  0761  2F63               	goto	u191
  1670  0762  2F64               	goto	u190
  1671  0763                     u191:	
  1672  0763  2F71               	goto	l283
  1673  0764                     u190:	
  1674  0764                     l910:	
  1675  0764  09F0               	comf	___aldiv@divisor,f
  1676  0765  09F1               	comf	___aldiv@divisor+1,f
  1677  0766  09F2               	comf	___aldiv@divisor+2,f
  1678  0767  09F3               	comf	___aldiv@divisor+3,f
  1679  0768  0AF0               	incf	___aldiv@divisor,f
  1680  0769  1903               	skipnz
  1681  076A  0AF1               	incf	___aldiv@divisor+1,f
  1682  076B  1903               	skipnz
  1683  076C  0AF2               	incf	___aldiv@divisor+2,f
  1684  076D  1903               	skipnz
  1685  076E  0AF3               	incf	___aldiv@divisor+3,f
  1686  076F  01A1               	clrf	___aldiv@sign
  1687  0770  0AA1               	incf	___aldiv@sign,f
  1688  0771                     l283:	
  1689  0771  1FF7               	btfss	___aldiv@dividend+3,7
  1690  0772  2F74               	goto	u201
  1691  0773  2F75               	goto	u200
  1692  0774                     u201:	
  1693  0774  2F84               	goto	l916
  1694  0775                     u200:	
  1695  0775                     l912:	
  1696  0775  09F4               	comf	___aldiv@dividend,f
  1697  0776  09F5               	comf	___aldiv@dividend+1,f
  1698  0777  09F6               	comf	___aldiv@dividend+2,f
  1699  0778  09F7               	comf	___aldiv@dividend+3,f
  1700  0779  0AF4               	incf	___aldiv@dividend,f
  1701  077A  1903               	skipnz
  1702  077B  0AF5               	incf	___aldiv@dividend+1,f
  1703  077C  1903               	skipnz
  1704  077D  0AF6               	incf	___aldiv@dividend+2,f
  1705  077E  1903               	skipnz
  1706  077F  0AF7               	incf	___aldiv@dividend+3,f
  1707  0780                     l914:	
  1708  0780  3001               	movlw	1
  1709  0781  00F8               	movwf	??___aldiv
  1710  0782  0878               	movf	??___aldiv,w
  1711  0783  06A1               	xorwf	___aldiv@sign,f
  1712  0784                     l916:	
  1713  0784  3000               	movlw	0
  1714  0785  00A5               	movwf	___aldiv@quotient+3
  1715  0786  3000               	movlw	0
  1716  0787  00A4               	movwf	___aldiv@quotient+2
  1717  0788  3000               	movlw	0
  1718  0789  00A3               	movwf	___aldiv@quotient+1
  1719  078A  3000               	movlw	0
  1720  078B  00A2               	movwf	___aldiv@quotient
  1721  078C                     l918:	
  1722  078C  0873               	movf	___aldiv@divisor+3,w
  1723  078D  0472               	iorwf	___aldiv@divisor+2,w
  1724  078E  0471               	iorwf	___aldiv@divisor+1,w
  1725  078F  0470               	iorwf	___aldiv@divisor,w
  1726  0790  1903               	skipnz
  1727  0791  2F93               	goto	u211
  1728  0792  2F94               	goto	u210
  1729  0793                     u211:	
  1730  0793  2FE1               	goto	l938
  1731  0794                     u210:	
  1732  0794                     l920:	
  1733  0794  01A0               	clrf	___aldiv@counter
  1734  0795  0AA0               	incf	___aldiv@counter,f
  1735  0796  2FA4               	goto	l924
  1736  0797                     l922:	
  1737  0797  3001               	movlw	1
  1738  0798  00F8               	movwf	??___aldiv
  1739  0799                     u225:	
  1740  0799  1003               	clrc
  1741  079A  0DF0               	rlf	___aldiv@divisor,f
  1742  079B  0DF1               	rlf	___aldiv@divisor+1,f
  1743  079C  0DF2               	rlf	___aldiv@divisor+2,f
  1744  079D  0DF3               	rlf	___aldiv@divisor+3,f
  1745  079E  0BF8               	decfsz	??___aldiv,f
  1746  079F  2F99               	goto	u225
  1747  07A0  3001               	movlw	1
  1748  07A1  00F8               	movwf	??___aldiv
  1749  07A2  0878               	movf	??___aldiv,w
  1750  07A3  07A0               	addwf	___aldiv@counter,f
  1751  07A4                     l924:	
  1752  07A4  1FF3               	btfss	___aldiv@divisor+3,7
  1753  07A5  2FA7               	goto	u231
  1754  07A6  2FA8               	goto	u230
  1755  07A7                     u231:	
  1756  07A7  2F97               	goto	l922
  1757  07A8                     u230:	
  1758  07A8                     l926:	
  1759  07A8  3001               	movlw	1
  1760  07A9  00F8               	movwf	??___aldiv
  1761  07AA                     u245:	
  1762  07AA  1003               	clrc
  1763  07AB  0DA2               	rlf	___aldiv@quotient,f
  1764  07AC  0DA3               	rlf	___aldiv@quotient+1,f
  1765  07AD  0DA4               	rlf	___aldiv@quotient+2,f
  1766  07AE  0DA5               	rlf	___aldiv@quotient+3,f
  1767  07AF  0BF8               	decfsz	??___aldiv,f
  1768  07B0  2FAA               	goto	u245
  1769  07B1                     l928:	
  1770  07B1  0873               	movf	___aldiv@divisor+3,w
  1771  07B2  0277               	subwf	___aldiv@dividend+3,w
  1772  07B3  1D03               	skipz
  1773  07B4  2FBF               	goto	u255
  1774  07B5  0872               	movf	___aldiv@divisor+2,w
  1775  07B6  0276               	subwf	___aldiv@dividend+2,w
  1776  07B7  1D03               	skipz
  1777  07B8  2FBF               	goto	u255
  1778  07B9  0871               	movf	___aldiv@divisor+1,w
  1779  07BA  0275               	subwf	___aldiv@dividend+1,w
  1780  07BB  1D03               	skipz
  1781  07BC  2FBF               	goto	u255
  1782  07BD  0870               	movf	___aldiv@divisor,w
  1783  07BE  0274               	subwf	___aldiv@dividend,w
  1784  07BF                     u255:	
  1785  07BF  1C03               	skipc
  1786  07C0  2FC2               	goto	u251
  1787  07C1  2FC3               	goto	u250
  1788  07C2                     u251:	
  1789  07C2  2FD2               	goto	l934
  1790  07C3                     u250:	
  1791  07C3                     l930:	
  1792  07C3  0870               	movf	___aldiv@divisor,w
  1793  07C4  02F4               	subwf	___aldiv@dividend,f
  1794  07C5  0871               	movf	___aldiv@divisor+1,w
  1795  07C6  1C03               	skipc
  1796  07C7  0F71               	incfsz	___aldiv@divisor+1,w
  1797  07C8  02F5               	subwf	___aldiv@dividend+1,f
  1798  07C9  0872               	movf	___aldiv@divisor+2,w
  1799  07CA  1C03               	skipc
  1800  07CB  0F72               	incfsz	___aldiv@divisor+2,w
  1801  07CC  02F6               	subwf	___aldiv@dividend+2,f
  1802  07CD  0873               	movf	___aldiv@divisor+3,w
  1803  07CE  1C03               	skipc
  1804  07CF  0F73               	incfsz	___aldiv@divisor+3,w
  1805  07D0  02F7               	subwf	___aldiv@dividend+3,f
  1806  07D1                     l932:	
  1807  07D1  1422               	bsf	___aldiv@quotient,0
  1808  07D2                     l934:	
  1809  07D2  3001               	movlw	1
  1810  07D3                     u265:	
  1811  07D3  1003               	clrc
  1812  07D4  0CF3               	rrf	___aldiv@divisor+3,f
  1813  07D5  0CF2               	rrf	___aldiv@divisor+2,f
  1814  07D6  0CF1               	rrf	___aldiv@divisor+1,f
  1815  07D7  0CF0               	rrf	___aldiv@divisor,f
  1816  07D8  3EFF               	addlw	-1
  1817  07D9  1D03               	skipz
  1818  07DA  2FD3               	goto	u265
  1819  07DB                     l936:	
  1820  07DB  3001               	movlw	1
  1821  07DC  02A0               	subwf	___aldiv@counter,f
  1822  07DD  1D03               	btfss	3,2
  1823  07DE  2FE0               	goto	u271
  1824  07DF  2FE1               	goto	u270
  1825  07E0                     u271:	
  1826  07E0  2FA8               	goto	l926
  1827  07E1                     u270:	
  1828  07E1                     l938:	
  1829  07E1  0821               	movf	___aldiv@sign,w
  1830  07E2  1903               	btfsc	3,2
  1831  07E3  2FE5               	goto	u281
  1832  07E4  2FE6               	goto	u280
  1833  07E5                     u281:	
  1834  07E5  2FF1               	goto	l942
  1835  07E6                     u280:	
  1836  07E6                     l940:	
  1837  07E6  09A2               	comf	___aldiv@quotient,f
  1838  07E7  09A3               	comf	___aldiv@quotient+1,f
  1839  07E8  09A4               	comf	___aldiv@quotient+2,f
  1840  07E9  09A5               	comf	___aldiv@quotient+3,f
  1841  07EA  0AA2               	incf	___aldiv@quotient,f
  1842  07EB  1903               	skipnz
  1843  07EC  0AA3               	incf	___aldiv@quotient+1,f
  1844  07ED  1903               	skipnz
  1845  07EE  0AA4               	incf	___aldiv@quotient+2,f
  1846  07EF  1903               	skipnz
  1847  07F0  0AA5               	incf	___aldiv@quotient+3,f
  1848  07F1                     l942:	
  1849  07F1  0825               	movf	___aldiv@quotient+3,w
  1850  07F2  00F3               	movwf	?___aldiv+3
  1851  07F3  0824               	movf	___aldiv@quotient+2,w
  1852  07F4  00F2               	movwf	?___aldiv+2
  1853  07F5  0823               	movf	___aldiv@quotient+1,w
  1854  07F6  00F1               	movwf	?___aldiv+1
  1855  07F7  0822               	movf	___aldiv@quotient,w
  1856  07F8  00F0               	movwf	?___aldiv
  1857  07F9                     l293:	
  1858  07F9  0008               	return
  1859  07FA                     __end_of___aldiv:	
  1860  007E                     btemp	set	126	;btemp
  1861  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     22      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _init->_spiInit
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     962
                                              9 COMMON     2     2      0
                          _UART_Init
                          _UART_Read
                               _init
                            _initOsc
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Read
   _init
     _spiInit
   _initOsc
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 12:22:18 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l72 06E8  
                      l57 0625                        l90 062E                        l91 0634  
                      l76 05EE                        l92 063A                        l93 0640  
                      l94 0646                        l95 064C                        l96 0652  
                      l88 0628                        l97 0658                        l89 0680  
                      l98 0681                        u20 05E6                        u21 05E5  
                     l121 05E6                       l114 0608                       l115 060D  
                     l132 05F7                       l124 05DF                       l118 05E0  
                     l283 0771                       l293 07F9                       l812 05E7  
                     l900 0602                       l820 05EF                       l910 0764  
                     l814 05ED                       l902 0604                       l734 05E0  
                     l822 05F4                       l920 0794                       l912 0775  
                     l904 0607                       l930 07C3                       l922 0797  
                     l914 0780                       l906 075D                       l818 05DB  
                     l940 07E6                       l932 07D1                       l924 07A4  
                     l916 0784                       l908 0760                       l780 065E  
                     l942 07F1                       l934 07D2                       l926 07A8  
                     l918 078C                       l950 0614                       l936 07DB  
                     l928 07B1                       l960 06DC                       l952 061A  
                     l776 0627                       l938 07E1                       l970 06E5  
                     l962 06DD                       l954 061C                       l946 060E  
                     l964 06E0                       l956 0682                       l948 0613  
                     l980 0706                       l972 06E9                       l966 06E1  
                     l958 06DB                       l990 0712                       l982 0707  
                     l974 06EF                       l968 06E4                       l896 05F9  
                     l992 071B                       l984 0708                       l976 06F4  
                     l898 0600                       l994 0721                       l986 0709  
                     l978 0703                       l996 0729                       l988 0711  
                     l998 0732                       u200 0775                       u201 0774  
                     u210 0794                       u211 0793                       u300 06AB  
                     u230 07A8                       u231 07A7                       u311 06BD  
                     u312 06BE                       u160 05ED                       u225 0799  
                     u313 06C3                       u305 06A6                       u161 05EC  
                     u250 07C3                       u314 06C4                       u251 07C2  
                     u315 06C9                       u316 06CA                       u180 0600  
                     u245 07AA                       u181 05FF                       u270 07E1  
                     u190 0764                       u271 07E0                       u255 07BF  
                     u191 0763                       u327 0716                       u280 07E6  
                     u281 07E5                       u265 07D3                       u337 072D  
                     u290 0692              __CFG_CPD$OFF 0000                       u347 073A  
                     u357 0751                       u295 068D              __CFG_LVP$OFF 0000  
                    l1000 0735                      l1010 0756                      l1002 0736  
                    l1004 073F                      l1006 0745                      l1032 0666  
                    l1008 074D              __CFG_WRT$OFF 0000                      _main 06E9  
                    _init 060E                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000           __end_of___aldiv 07FA                     ?_main 0070  
                   ?_init 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
      __size_of_UART_Init 0067        __size_of_UART_Read 0008           __end_of_initOsc 0682  
          __CFG_BOREN$OFF 0000           __end_of_spiInit 060E           __end_of_spiRead 05F8  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07FA              __end_of_main 075D              __end_of_init 0626  
                  ??_main 0079                    ??_init 0074                    _ANSELH 0189  
                  _INTCON 000B               initOsc@frec 0072                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000         __end_of_UART_Init 06E9         __end_of_UART_Read 05EF  
               ??___aldiv 0078                 ??_initOsc 0070          __end_of_spiWrite 05E0  
               ??_spiInit 0073                 ??_spiRead 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070                __pmaintext 06E9   __size_of_spiReceiveWait 0007  
                 _SSPSTAT 0094                   _RecPOT1 007C                   _RecPOT2 007B  
               ?_spiWrite 0070                   ___aldiv 075D                   __ptext1 05DA  
                 __ptext2 05EF                   __ptext3 05E0                   __ptext4 0626  
                 __ptext5 060E                   __ptext6 05F8                   __ptext7 05E7  
                 __ptext8 0682                   __ptext9 075D                   _initOsc 0626  
        ___aldiv@dividend 0074                   _spiInit 05F8                   _spiRead 05EF  
    end_of_initialization 07FC                 _RCSTAbits 0018          ___aldiv@quotient 0022  
              ??_spiWrite 0070                 _UART_Init 0682                 _UART_Read 05E7  
               _PORTCbits 0007                 _TRISCbits 0087               spiWrite@dat 0070  
               _TXSTAbits 0098            _spiReceiveWait 05E0                ?_UART_Init 0026  
              ?_UART_Read 0070       start_initialization 07FA  __CFG_FOSC$INTRC_NOCLKOUT 0000  
  __end_of_spiReceiveWait 05E7               __pbssCOMMON 007B                 ___latbits 0002  
           __pcstackBANK0 0020           ?_spiReceiveWait 0070                  ?___aldiv 0070  
             ??_UART_Init 002A               ??_UART_Read 0070         __size_of_spiWrite 0006  
                ?_initOsc 0070                  ?_spiInit 0070                  ?_spiRead 0070  
         ___aldiv@divisor 0070      spiInit@sTransmitEdge 0072           ___aldiv@counter 0020  
      spiInit@sDataSample 0070                  _PIR1bits 000C         UART_Init@baudrate 0026  
        __size_of___aldiv 009D          __size_of_initOsc 005C          __size_of_spiInit 0016  
        __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000             __size_of_main 0074  
           __size_of_init 0018                  _spiWrite 05DA              spiInit@sType 0073  
       spiInit@sClockIdle 0071          ??_spiReceiveWait 0070                _OSCCONbits 008F  
            ___aldiv@sign 0021  
