

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 16 22:57:55 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0013                     _SSPBUF	set	19
   446  0014                     _SSPCON	set	20
   447  0019                     _TXREG	set	25
   448  001A                     _RCREG	set	26
   449  000C                     _PIR1bits	set	12
   450  0018                     _RCSTAbits	set	24
   451  000B                     _INTCON	set	11
   452  0005                     _PORTAbits	set	5
   453  0008                     _PORTD	set	8
   454  0007                     _PORTC	set	7
   455  0006                     _PORTB	set	6
   456  0005                     _PORTA	set	5
   457  0094                     _SSPSTATbits	set	148
   458  0094                     _SSPSTAT	set	148
   459  008F                     _OSCCONbits	set	143
   460  0098                     _TXSTAbits	set	152
   461  0099                     _SPBRG	set	153
   462  0088                     _TRISD	set	136
   463  0087                     _TRISCbits	set	135
   464  0087                     _TRISC	set	135
   465  0086                     _TRISB	set	134
   466  0085                     _TRISA	set	133
   467  043B                     _TRISC3	set	1083
   468  043D                     _TRISC5	set	1085
   469  0189                     _ANSELH	set	393
   470  0188                     _ANSEL	set	392
   471                           
   472                           ; #config settings
   473  0000                     
   474                           	psect	cinit
   475  07FA                     start_initialization:	
   476  07FA                     __initialization:	
   477                           
   478                           ; Clear objects allocated to COMMON
   479  07FA  01FB               	clrf	__pbssCOMMON& (0+127)
   480  07FB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   481  07FC                     end_of_initialization:	
   482                           ;End of C runtime variable initialization code
   483                           
   484  07FC                     __end_of__initialization:	
   485  07FC  0183               	clrf	3
   486  07FD  120A  118A  2E9A   	ljmp	_main	;jump to C main() function
   487                           
   488                           	psect	bssCOMMON
   489  007B                     __pbssCOMMON:	
   490  007B                     _RecPOTS:	
   491  007B                     	ds	1
   492  007C                     _Cont_COM:	
   493  007C                     	ds	1
   494                           
   495                           	psect	cstackCOMMON
   496  0070                     __pcstackCOMMON:	
   497  0070                     ?_initOsc:	
   498  0070                     ??_initOsc:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_init:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_UART_Read:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ??_UART_Read:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_spiDataReady:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_spiRead:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ??_spiRead:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_UART_Write:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_UART_Write:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_spiInit:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_main:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_spiReceiveWait:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ??_spiReceiveWait:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_spiDataReady:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?___aldiv:	
   541                           ; 2 bytes @ 0x0
   542                           
   543  0070                     UART_Write@data:	
   544                           ; 4 bytes @ 0x0
   545                           
   546  0070                     spiInit@sDataSample:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ___aldiv@divisor:	
   550                           ; 1 bytes @ 0x0
   551                           
   552                           
   553                           ; 4 bytes @ 0x0
   554  0070                     	ds	1
   555  0071                     spiInit@sClockIdle:	
   556                           
   557                           ; 1 bytes @ 0x1
   558  0071                     	ds	1
   559  0072                     initOsc@frec:	
   560  0072                     spiInit@sTransmitEdge:	
   561                           ; 1 bytes @ 0x2
   562                           
   563                           
   564                           ; 1 bytes @ 0x2
   565  0072                     	ds	1
   566  0073                     ??_spiInit:	
   567  0073                     spiInit@sType:	
   568                           ; 1 bytes @ 0x3
   569                           
   570                           
   571                           ; 1 bytes @ 0x3
   572  0073                     	ds	1
   573  0074                     ??_init:	
   574  0074                     ___aldiv@dividend:	
   575                           ; 1 bytes @ 0x4
   576                           
   577                           
   578                           ; 4 bytes @ 0x4
   579  0074                     	ds	4
   580  0078                     ??___aldiv:	
   581                           
   582                           ; 1 bytes @ 0x8
   583  0078                     	ds	1
   584  0079                     ??_main:	
   585                           
   586                           ; 1 bytes @ 0x9
   587  0079                     	ds	2
   588                           
   589                           	psect	cstackBANK0
   590  0020                     __pcstackBANK0:	
   591  0020                     ___aldiv@counter:	
   592                           
   593                           ; 1 bytes @ 0x0
   594  0020                     	ds	1
   595  0021                     ___aldiv@sign:	
   596                           
   597                           ; 1 bytes @ 0x1
   598  0021                     	ds	1
   599  0022                     ___aldiv@quotient:	
   600                           
   601                           ; 4 bytes @ 0x2
   602  0022                     	ds	4
   603  0026                     ?_UART_Init:	
   604  0026                     UART_Init@baudrate:	
   605                           ; 1 bytes @ 0x6
   606                           
   607                           
   608                           ; 4 bytes @ 0x6
   609  0026                     	ds	4
   610  002A                     ??_UART_Init:	
   611                           
   612                           ; 1 bytes @ 0xA
   613  002A                     	ds	12
   614                           
   615                           	psect	maintext
   616  069A                     __pmaintext:	
   617 ;;
   618 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   619 ;;
   620 ;; *************** function _main *****************
   621 ;; Defined at:
   622 ;;		line 40 in file "Master_Lab_4.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : B00/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0
   638 ;;      Temps:          2       0       0       0       0
   639 ;;      Totals:         2       0       0       0       0
   640 ;;Total ram usage:        2 bytes
   641 ;; Hardware stack levels required when called:    2
   642 ;; This function calls:
   643 ;;		_UART_Init
   644 ;;		_UART_Read
   645 ;;		_UART_Write
   646 ;;		_init
   647 ;;		_initOsc
   648 ;;		_spiDataReady
   649 ;;		_spiRead
   650 ;; This function is called by:
   651 ;;		Startup code after reset
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function _main
   657  069A                     _main:	
   658  069A                     l962:	
   659                           ;incstack = 0
   660                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   661                           
   662                           
   663                           ;Master_Lab_4.c: 41:     initOsc(7);
   664  069A  3007               	movlw	7
   665  069B  120A  118A  263E  120A  118A  	fcall	_initOsc
   666  06A0                     l964:	
   667                           
   668                           ;Master_Lab_4.c: 42:     init();
   669  06A0  120A  118A  2627  120A  118A  	fcall	_init
   670  06A5                     l966:	
   671                           
   672                           ;Master_Lab_4.c: 43:     UART_Init(9600);
   673  06A5  3000               	movlw	0
   674  06A6  1283               	bcf	3,5	;RP0=0, select bank0
   675  06A7  1303               	bcf	3,6	;RP1=0, select bank0
   676  06A8  00A9               	movwf	UART_Init@baudrate+3
   677  06A9  3000               	movlw	0
   678  06AA  00A8               	movwf	UART_Init@baudrate+2
   679  06AB  3025               	movlw	37
   680  06AC  00A7               	movwf	UART_Init@baudrate+1
   681  06AD  3080               	movlw	128
   682  06AE  00A6               	movwf	UART_Init@baudrate
   683  06AF  120A  118A  26F6  120A  118A  	fcall	_UART_Init
   684  06B4                     l968:	
   685                           
   686                           ;Master_Lab_4.c: 45:     PORTA = 0;
   687  06B4  1283               	bcf	3,5	;RP0=0, select bank0
   688  06B5  1303               	bcf	3,6	;RP1=0, select bank0
   689  06B6  0185               	clrf	5	;volatile
   690  06B7                     l970:	
   691                           
   692                           ;Master_Lab_4.c: 46:     PORTB = 0;
   693  06B7  0186               	clrf	6	;volatile
   694  06B8                     l972:	
   695                           
   696                           ;Master_Lab_4.c: 47:     PORTC = 0;
   697  06B8  0187               	clrf	7	;volatile
   698  06B9                     l974:	
   699                           
   700                           ;Master_Lab_4.c: 48:     PORTD = 0;
   701  06B9  0188               	clrf	8	;volatile
   702  06BA                     l976:	
   703                           
   704                           ;Master_Lab_4.c: 51:         Cont_COM = UART_Read();
   705  06BA  120A  118A  25F4  120A  118A  	fcall	_UART_Read
   706  06BF  00F9               	movwf	??_main
   707  06C0  0879               	movf	??_main,w
   708  06C1  00FC               	movwf	_Cont_COM
   709  06C2                     l978:	
   710                           
   711                           ;Master_Lab_4.c: 52:         PORTB = Cont_COM;
   712  06C2  087C               	movf	_Cont_COM,w
   713  06C3  1283               	bcf	3,5	;RP0=0, select bank0
   714  06C4  1303               	bcf	3,6	;RP1=0, select bank0
   715  06C5  0086               	movwf	6	;volatile
   716  06C6                     l980:	
   717                           
   718                           ;Master_Lab_4.c: 54:         PORTAbits.RA5 = 0;
   719  06C6  1285               	bcf	5,5	;volatile
   720  06C7                     l982:	
   721                           
   722                           ;Master_Lab_4.c: 55:         _delay((unsigned long)((1)*(8000000/4000.0)));
   723  06C7  3003               	movlw	3
   724  06C8  00FA               	movwf	??_main+1
   725  06C9  3097               	movlw	151
   726  06CA  00F9               	movwf	??_main
   727  06CB                     u327:	
   728  06CB  0BF9               	decfsz	??_main,f
   729  06CC  2ECB               	goto	u327
   730  06CD  0BFA               	decfsz	??_main+1,f
   731  06CE  2ECB               	goto	u327
   732  06CF  2ED0               	nop2
   733  06D0                     l984:	
   734                           
   735                           ;Master_Lab_4.c: 56:         spiDataReady();
   736  06D0  120A  118A  25E9  120A  118A  	fcall	_spiDataReady
   737  06D5                     l986:	
   738                           
   739                           ;Master_Lab_4.c: 57:         RecPOTS = spiRead();
   740  06D5  120A  118A  25FC  120A  118A  	fcall	_spiRead
   741  06DA  00F9               	movwf	??_main
   742  06DB  0879               	movf	??_main,w
   743  06DC  00FB               	movwf	_RecPOTS
   744  06DD                     l988:	
   745                           
   746                           ;Master_Lab_4.c: 59:         UART_Write(RecPOTS);
   747  06DD  087B               	movf	_RecPOTS,w
   748  06DE  120A  118A  2605  120A  118A  	fcall	_UART_Write
   749  06E3                     l990:	
   750                           
   751                           ;Master_Lab_4.c: 60:         _delay((unsigned long)((5)*(8000000/4000.0)));
   752  06E3  300D               	movlw	13
   753  06E4  00FA               	movwf	??_main+1
   754  06E5  30FB               	movlw	251
   755  06E6  00F9               	movwf	??_main
   756  06E7                     u337:	
   757  06E7  0BF9               	decfsz	??_main,f
   758  06E8  2EE7               	goto	u337
   759  06E9  0BFA               	decfsz	??_main+1,f
   760  06EA  2EE7               	goto	u337
   761  06EB  2EEC               	nop2
   762  06EC                     l992:	
   763                           
   764                           ;Master_Lab_4.c: 61:         UART_Write(RecPOTS);
   765  06EC  087B               	movf	_RecPOTS,w
   766  06ED  120A  118A  2605  120A  118A  	fcall	_UART_Write
   767  06F2  2EBA               	goto	l976
   768  06F3  120A  118A  2800   	ljmp	start
   769  06F6                     __end_of_main:	
   770                           
   771                           	psect	text1
   772  05FC                     __ptext1:	
   773 ;; *************** function _spiRead *****************
   774 ;; Defined at:
   775 ;;		line 45 in file "SPI.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      unsigned char 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0, pclath, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   789 ;;      Params:         0       0       0       0       0
   790 ;;      Locals:         0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0
   792 ;;      Totals:         0       0       0       0       0
   793 ;;Total ram usage:        0 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    1
   796 ;; This function calls:
   797 ;;		_spiReceiveWait
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           
   804                           ;psect for function _spiRead
   805  05FC                     _spiRead:	
   806  05FC                     l824:	
   807                           ;incstack = 0
   808                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   809                           
   810                           
   811                           ;SPI.c: 47:     spiReceiveWait();
   812  05FC  120A  118A  25ED  120A  118A  	fcall	_spiReceiveWait
   813  0601                     l826:	
   814                           
   815                           ;SPI.c: 48:     return(SSPBUF);
   816  0601  1283               	bcf	3,5	;RP0=0, select bank0
   817  0602  1303               	bcf	3,6	;RP1=0, select bank0
   818  0603  0813               	movf	19,w	;volatile
   819  0604                     l134:	
   820  0604  0008               	return
   821  0605                     __end_of_spiRead:	
   822                           
   823                           	psect	text2
   824  05ED                     __ptext2:	
   825 ;; *************** function _spiReceiveWait *****************
   826 ;; Defined at:
   827 ;;		line 27 in file "SPI.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		None
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         0       0       0       0       0
   845 ;;Total ram usage:        0 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_spiRead
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _spiReceiveWait
   856  05ED                     _spiReceiveWait:	
   857  05ED                     l736:	
   858                           ;incstack = 0
   859                           ; Regs used in _spiReceiveWait: []
   860                           
   861  05ED                     l120:	
   862                           ;SPI.c: 29:     while ( !SSPSTATbits.BF );
   863                           
   864  05ED  1683               	bsf	3,5	;RP0=1, select bank1
   865  05EE  1303               	bcf	3,6	;RP1=0, select bank1
   866  05EF  1C14               	btfss	20,0	;volatile
   867  05F0  2DF2               	goto	u21
   868  05F1  2DF3               	goto	u20
   869  05F2                     u21:	
   870  05F2  2DED               	goto	l120
   871  05F3                     u20:	
   872  05F3                     l123:	
   873  05F3  0008               	return
   874  05F4                     __end_of_spiReceiveWait:	
   875                           
   876                           	psect	text3
   877  05E9                     __ptext3:	
   878 ;; *************** function _spiDataReady *****************
   879 ;; Defined at:
   880 ;;		line 37 in file "SPI.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  2   22[None  ] unsigned int 
   887 ;; Registers used:
   888 ;;		wreg
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0
   897 ;;      Totals:         0       0       0       0       0
   898 ;;Total ram usage:        0 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _spiDataReady
   909  05E9                     _spiDataReady:	
   910  05E9                     l818:	
   911                           ;incstack = 0
   912                           ; Regs used in _spiDataReady: [wreg]
   913                           
   914                           
   915                           ;SPI.c: 39:     if(SSPSTATbits.BF)
   916  05E9  1683               	bsf	3,5	;RP0=1, select bank1
   917  05EA  1303               	bcf	3,6	;RP1=0, select bank1
   918  05EB  0814               	movf	20,w	;volatile
   919  05EC                     l130:	
   920  05EC  0008               	return
   921  05ED                     __end_of_spiDataReady:	
   922                           
   923                           	psect	text4
   924  063E                     __ptext4:	
   925 ;; *************** function _initOsc *****************
   926 ;; Defined at:
   927 ;;		line 8 in file "Oscilador.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  frec            1    wreg     unsigned char 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  frec            1    2[COMMON] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         1       0       0       0       0
   943 ;;      Temps:          2       0       0       0       0
   944 ;;      Totals:         3       0       0       0       0
   945 ;;Total ram usage:        3 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           
   955                           ;psect for function _initOsc
   956  063E                     _initOsc:	
   957                           
   958                           ;incstack = 0
   959                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   960                           ;initOsc@frec stored from wreg
   961  063E  00F2               	movwf	initOsc@frec
   962  063F                     l778:	
   963                           
   964                           ;Oscilador.c: 9:     switch(frec){
   965  063F  2E76               	goto	l782
   966  0640                     l90:	
   967                           ;Oscilador.c: 10:         case 0:
   968                           
   969                           
   970                           ;Oscilador.c: 11:             OSCCONbits.IRCF0 = 0;
   971  0640  1683               	bsf	3,5	;RP0=1, select bank1
   972  0641  1303               	bcf	3,6	;RP1=0, select bank1
   973  0642  120F               	bcf	15,4	;volatile
   974                           
   975                           ;Oscilador.c: 12:             OSCCONbits.IRCF1 = 0;
   976  0643  128F               	bcf	15,5	;volatile
   977                           
   978                           ;Oscilador.c: 13:             OSCCONbits.IRCF2 = 0;
   979  0644  130F               	bcf	15,6	;volatile
   980                           
   981                           ;Oscilador.c: 14:             break;
   982  0645  2E98               	goto	l91
   983  0646                     l92:	
   984                           ;Oscilador.c: 15:         case 1:
   985                           
   986                           
   987                           ;Oscilador.c: 16:             OSCCONbits.IRCF0 = 1;
   988  0646  1683               	bsf	3,5	;RP0=1, select bank1
   989  0647  1303               	bcf	3,6	;RP1=0, select bank1
   990  0648  160F               	bsf	15,4	;volatile
   991                           
   992                           ;Oscilador.c: 17:             OSCCONbits.IRCF1 = 0;
   993  0649  128F               	bcf	15,5	;volatile
   994                           
   995                           ;Oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   996  064A  130F               	bcf	15,6	;volatile
   997                           
   998                           ;Oscilador.c: 19:             break;
   999  064B  2E98               	goto	l91
  1000  064C                     l93:	
  1001                           ;Oscilador.c: 20:         case 2:
  1002                           
  1003                           
  1004                           ;Oscilador.c: 21:             OSCCONbits.IRCF0 = 0;
  1005  064C  1683               	bsf	3,5	;RP0=1, select bank1
  1006  064D  1303               	bcf	3,6	;RP1=0, select bank1
  1007  064E  120F               	bcf	15,4	;volatile
  1008                           
  1009                           ;Oscilador.c: 22:             OSCCONbits.IRCF1 = 1;
  1010  064F  168F               	bsf	15,5	;volatile
  1011                           
  1012                           ;Oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
  1013  0650  130F               	bcf	15,6	;volatile
  1014                           
  1015                           ;Oscilador.c: 24:             break;
  1016  0651  2E98               	goto	l91
  1017  0652                     l94:	
  1018                           ;Oscilador.c: 25:         case 3:
  1019                           
  1020                           
  1021                           ;Oscilador.c: 26:             OSCCONbits.IRCF0 = 1;
  1022  0652  1683               	bsf	3,5	;RP0=1, select bank1
  1023  0653  1303               	bcf	3,6	;RP1=0, select bank1
  1024  0654  160F               	bsf	15,4	;volatile
  1025                           
  1026                           ;Oscilador.c: 27:             OSCCONbits.IRCF1 = 1;
  1027  0655  168F               	bsf	15,5	;volatile
  1028                           
  1029                           ;Oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
  1030  0656  130F               	bcf	15,6	;volatile
  1031                           
  1032                           ;Oscilador.c: 29:             break;
  1033  0657  2E98               	goto	l91
  1034  0658                     l95:	
  1035                           ;Oscilador.c: 30:         case 4:
  1036                           
  1037                           
  1038                           ;Oscilador.c: 31:             OSCCONbits.IRCF0 = 0;
  1039  0658  1683               	bsf	3,5	;RP0=1, select bank1
  1040  0659  1303               	bcf	3,6	;RP1=0, select bank1
  1041  065A  120F               	bcf	15,4	;volatile
  1042                           
  1043                           ;Oscilador.c: 32:             OSCCONbits.IRCF1 = 0;
  1044  065B  128F               	bcf	15,5	;volatile
  1045                           
  1046                           ;Oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
  1047  065C  170F               	bsf	15,6	;volatile
  1048                           
  1049                           ;Oscilador.c: 34:             break;
  1050  065D  2E98               	goto	l91
  1051  065E                     l96:	
  1052                           ;Oscilador.c: 35:         case 5:
  1053                           
  1054                           
  1055                           ;Oscilador.c: 36:             OSCCONbits.IRCF0 = 1;
  1056  065E  1683               	bsf	3,5	;RP0=1, select bank1
  1057  065F  1303               	bcf	3,6	;RP1=0, select bank1
  1058  0660  160F               	bsf	15,4	;volatile
  1059                           
  1060                           ;Oscilador.c: 37:             OSCCONbits.IRCF1 = 0;
  1061  0661  128F               	bcf	15,5	;volatile
  1062                           
  1063                           ;Oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
  1064  0662  170F               	bsf	15,6	;volatile
  1065                           
  1066                           ;Oscilador.c: 39:             break;
  1067  0663  2E98               	goto	l91
  1068  0664                     l97:	
  1069                           ;Oscilador.c: 40:         case 6:
  1070                           
  1071                           
  1072                           ;Oscilador.c: 41:             OSCCONbits.IRCF0 = 0;
  1073  0664  1683               	bsf	3,5	;RP0=1, select bank1
  1074  0665  1303               	bcf	3,6	;RP1=0, select bank1
  1075  0666  120F               	bcf	15,4	;volatile
  1076                           
  1077                           ;Oscilador.c: 42:             OSCCONbits.IRCF1 = 1;
  1078  0667  168F               	bsf	15,5	;volatile
  1079                           
  1080                           ;Oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
  1081  0668  170F               	bsf	15,6	;volatile
  1082                           
  1083                           ;Oscilador.c: 44:             break;
  1084  0669  2E98               	goto	l91
  1085  066A                     l98:	
  1086                           ;Oscilador.c: 45:         case 7:
  1087                           
  1088                           
  1089                           ;Oscilador.c: 46:             OSCCONbits.IRCF0 = 1;
  1090  066A  1683               	bsf	3,5	;RP0=1, select bank1
  1091  066B  1303               	bcf	3,6	;RP1=0, select bank1
  1092  066C  160F               	bsf	15,4	;volatile
  1093                           
  1094                           ;Oscilador.c: 47:             OSCCONbits.IRCF1 = 1;
  1095  066D  168F               	bsf	15,5	;volatile
  1096                           
  1097                           ;Oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
  1098  066E  170F               	bsf	15,6	;volatile
  1099                           
  1100                           ;Oscilador.c: 49:             break;
  1101  066F  2E98               	goto	l91
  1102  0670                     l99:	
  1103                           ;Oscilador.c: 50:         default:
  1104                           
  1105                           
  1106                           ;Oscilador.c: 51:             OSCCONbits.IRCF0 = 0;
  1107  0670  1683               	bsf	3,5	;RP0=1, select bank1
  1108  0671  1303               	bcf	3,6	;RP1=0, select bank1
  1109  0672  120F               	bcf	15,4	;volatile
  1110                           
  1111                           ;Oscilador.c: 52:             OSCCONbits.IRCF1 = 1;
  1112  0673  168F               	bsf	15,5	;volatile
  1113                           
  1114                           ;Oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
  1115  0674  170F               	bsf	15,6	;volatile
  1116                           
  1117                           ;Oscilador.c: 54:             break;
  1118  0675  2E98               	goto	l91
  1119  0676                     l782:	
  1120  0676  0872               	movf	initOsc@frec,w
  1121  0677  00F0               	movwf	??_initOsc
  1122  0678  01F1               	clrf	??_initOsc+1
  1123                           
  1124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1125                           ; Switch size 1, requested type "simple"
  1126                           ; Number of cases is 1, Range of values is 0 to 0
  1127                           ; switch strategies available:
  1128                           ; Name         Instructions Cycles
  1129                           ; simple_byte            4     3 (average)
  1130                           ; direct_byte           11     8 (fixed)
  1131                           ; jumptable            260     6 (fixed)
  1132                           ;	Chosen strategy is simple_byte
  1133  0679  0871               	movf	??_initOsc+1,w
  1134  067A  3A00               	xorlw	0	; case 0
  1135  067B  1903               	skipnz
  1136  067C  2E7E               	goto	l1014
  1137  067D  2E70               	goto	l99
  1138  067E                     l1014:	
  1139                           
  1140                           ; Switch size 1, requested type "simple"
  1141                           ; Number of cases is 8, Range of values is 0 to 7
  1142                           ; switch strategies available:
  1143                           ; Name         Instructions Cycles
  1144                           ; simple_byte           25    13 (average)
  1145                           ; direct_byte           32     8 (fixed)
  1146                           ; jumptable            260     6 (fixed)
  1147                           ;	Chosen strategy is simple_byte
  1148  067E  0870               	movf	??_initOsc,w
  1149  067F  3A00               	xorlw	0	; case 0
  1150  0680  1903               	skipnz
  1151  0681  2E40               	goto	l90
  1152  0682  3A01               	xorlw	1	; case 1
  1153  0683  1903               	skipnz
  1154  0684  2E46               	goto	l92
  1155  0685  3A03               	xorlw	3	; case 2
  1156  0686  1903               	skipnz
  1157  0687  2E4C               	goto	l93
  1158  0688  3A01               	xorlw	1	; case 3
  1159  0689  1903               	skipnz
  1160  068A  2E52               	goto	l94
  1161  068B  3A07               	xorlw	7	; case 4
  1162  068C  1903               	skipnz
  1163  068D  2E58               	goto	l95
  1164  068E  3A01               	xorlw	1	; case 5
  1165  068F  1903               	skipnz
  1166  0690  2E5E               	goto	l96
  1167  0691  3A03               	xorlw	3	; case 6
  1168  0692  1903               	skipnz
  1169  0693  2E64               	goto	l97
  1170  0694  3A01               	xorlw	1	; case 7
  1171  0695  1903               	skipnz
  1172  0696  2E6A               	goto	l98
  1173  0697  2E70               	goto	l99
  1174  0698                     l91:	
  1175                           
  1176                           ;Oscilador.c: 57:     OSCCONbits.SCS = 1;
  1177  0698  140F               	bsf	15,0	;volatile
  1178  0699                     l100:	
  1179  0699  0008               	return
  1180  069A                     __end_of_initOsc:	
  1181                           
  1182                           	psect	text5
  1183  0627                     __ptext5:	
  1184 ;; *************** function _init *****************
  1185 ;; Defined at:
  1186 ;;		line 69 in file "Master_Lab_4.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;		None
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, status,2, status,0, pclath, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1200 ;;      Params:         0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0
  1203 ;;      Totals:         0       0       0       0       0
  1204 ;;Total ram usage:        0 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    1
  1207 ;; This function calls:
  1208 ;;		_spiInit
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           
  1215                           ;psect for function _init
  1216  0627                     _init:	
  1217  0627                     l938:	
  1218                           ;incstack = 0
  1219                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1220                           
  1221                           
  1222                           ;Master_Lab_4.c: 70:     TRISA = 0;
  1223  0627  1683               	bsf	3,5	;RP0=1, select bank1
  1224  0628  1303               	bcf	3,6	;RP1=0, select bank1
  1225  0629  0185               	clrf	5	;volatile
  1226                           
  1227                           ;Master_Lab_4.c: 71:     TRISB = 0;
  1228  062A  0186               	clrf	6	;volatile
  1229                           
  1230                           ;Master_Lab_4.c: 72:     TRISC = 0;
  1231  062B  0187               	clrf	7	;volatile
  1232  062C                     l940:	
  1233                           
  1234                           ;Master_Lab_4.c: 73:     TRISCbits.TRISC7 = 1;
  1235  062C  1787               	bsf	7,7	;volatile
  1236                           
  1237                           ;Master_Lab_4.c: 74:     TRISD = 0;
  1238  062D  0188               	clrf	8	;volatile
  1239                           
  1240                           ;Master_Lab_4.c: 75:     ANSEL = 0;
  1241  062E  1683               	bsf	3,5	;RP0=1, select bank3
  1242  062F  1703               	bsf	3,6	;RP1=1, select bank3
  1243  0630  0188               	clrf	8	;volatile
  1244                           
  1245                           ;Master_Lab_4.c: 76:     ANSELH = 0b00000000;
  1246  0631  0189               	clrf	9	;volatile
  1247  0632                     l942:	
  1248                           
  1249                           ;Master_Lab_4.c: 77:     INTCON = 0b11100000;
  1250  0632  30E0               	movlw	224
  1251  0633  008B               	movwf	11	;volatile
  1252  0634                     l944:	
  1253                           
  1254                           ;Master_Lab_4.c: 78:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1255  0634  01F0               	clrf	spiInit@sDataSample
  1256  0635  01F1               	clrf	spiInit@sClockIdle
  1257  0636  01F2               	clrf	spiInit@sTransmitEdge
  1258  0637  3020               	movlw	32
  1259  0638  120A  118A  2611  120A  118A  	fcall	_spiInit
  1260  063D                     l59:	
  1261  063D  0008               	return
  1262  063E                     __end_of_init:	
  1263                           
  1264                           	psect	text6
  1265  0611                     __ptext6:	
  1266 ;; *************** function _spiInit *****************
  1267 ;; Defined at:
  1268 ;;		line 10 in file "SPI.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  sType           1    wreg     enum E1264
  1271 ;;  sDataSample     1    0[COMMON] enum E1272
  1272 ;;  sClockIdle      1    1[COMMON] enum E1276
  1273 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  sType           1    3[COMMON] enum E1264
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1285 ;;      Params:         3       0       0       0       0
  1286 ;;      Locals:         1       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0
  1288 ;;      Totals:         4       0       0       0       0
  1289 ;;Total ram usage:        4 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; This function calls:
  1292 ;;		Nothing
  1293 ;; This function is called by:
  1294 ;;		_init
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           
  1299                           ;psect for function _spiInit
  1300  0611                     _spiInit:	
  1301                           
  1302                           ;incstack = 0
  1303                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1304                           ;spiInit@sType stored from wreg
  1305  0611  00F3               	movwf	spiInit@sType
  1306  0612                     l888:	
  1307                           
  1308                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
  1309  0612  1683               	bsf	3,5	;RP0=1, select bank1
  1310  0613  1303               	bcf	3,6	;RP1=0, select bank1
  1311  0614  1287               	bcf	7,5	;volatile
  1312                           
  1313                           ;SPI.c: 13:     if(sType & 0b00000100)
  1314  0615  1D73               	btfss	spiInit@sType,2
  1315  0616  2E18               	goto	u181
  1316  0617  2E19               	goto	u180
  1317  0618                     u181:	
  1318  0618  2E1D               	goto	l894
  1319  0619                     u180:	
  1320  0619                     l890:	
  1321                           
  1322                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1323  0619  0872               	movf	spiInit@sTransmitEdge,w
  1324  061A  0094               	movwf	20	;volatile
  1325  061B                     l892:	
  1326                           
  1327                           ;SPI.c: 16:         TRISC3 = 1;
  1328  061B  1587               	bsf	7,3	;volatile
  1329                           
  1330                           ;SPI.c: 17:     }
  1331  061C  2E21               	goto	l116
  1332  061D                     l894:	
  1333                           
  1334                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1335  061D  0870               	movf	spiInit@sDataSample,w
  1336  061E  0472               	iorwf	spiInit@sTransmitEdge,w
  1337  061F  0094               	movwf	20	;volatile
  1338  0620                     l896:	
  1339                           
  1340                           ;SPI.c: 21:         TRISC3 = 0;
  1341  0620  1187               	bcf	7,3	;volatile
  1342  0621                     l116:	
  1343                           ;SPI.c: 22:     }
  1344                           
  1345                           
  1346                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
  1347  0621  0873               	movf	spiInit@sType,w
  1348  0622  0471               	iorwf	spiInit@sClockIdle,w
  1349  0623  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0624  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0625  0094               	movwf	20	;volatile
  1352  0626                     l117:	
  1353  0626  0008               	return
  1354  0627                     __end_of_spiInit:	
  1355                           
  1356                           	psect	text7
  1357  0605                     __ptext7:	
  1358 ;; *************** function _UART_Write *****************
  1359 ;; Defined at:
  1360 ;;		line 42 in file "UART.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  data            1    wreg     unsigned char 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  data            1    0[COMMON] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         1       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0
  1377 ;;      Totals:         1       0       0       0       0
  1378 ;;Total ram usage:        1 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           
  1388                           ;psect for function _UART_Write
  1389  0605                     _UART_Write:	
  1390                           
  1391                           ;incstack = 0
  1392                           ; Regs used in _UART_Write: [wreg]
  1393                           ;UART_Write@data stored from wreg
  1394  0605  00F0               	movwf	UART_Write@data
  1395  0606                     l830:	
  1396  0606                     l81:	
  1397                           ;UART.c: 43:   while(!TXSTAbits.TRMT);
  1398                           
  1399  0606  1683               	bsf	3,5	;RP0=1, select bank1
  1400  0607  1303               	bcf	3,6	;RP1=0, select bank1
  1401  0608  1C98               	btfss	24,1	;volatile
  1402  0609  2E0B               	goto	u171
  1403  060A  2E0C               	goto	u170
  1404  060B                     u171:	
  1405  060B  2E06               	goto	l81
  1406  060C                     u170:	
  1407  060C                     l832:	
  1408                           
  1409                           ;UART.c: 44:   TXREG = data;
  1410  060C  0870               	movf	UART_Write@data,w
  1411  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1412  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1413  060F  0099               	movwf	25	;volatile
  1414  0610                     l84:	
  1415  0610  0008               	return
  1416  0611                     __end_of_UART_Write:	
  1417                           
  1418                           	psect	text8
  1419  05F4                     __ptext8:	
  1420 ;; *************** function _UART_Read *****************
  1421 ;; Defined at:
  1422 ;;		line 34 in file "UART.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      unsigned char 
  1429 ;; Registers used:
  1430 ;;		wreg
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0
  1439 ;;      Totals:         0       0       0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_main
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           
  1450                           ;psect for function _UART_Read
  1451  05F4                     _UART_Read:	
  1452  05F4                     l812:	
  1453                           ;incstack = 0
  1454                           ; Regs used in _UART_Read: [wreg]
  1455                           
  1456                           
  1457                           ;UART.c: 35:     if(PIR1bits.RCIF==1){
  1458  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  1459  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  1460  05F6  1E8C               	btfss	12,5	;volatile
  1461  05F7  2DF9               	goto	u161
  1462  05F8  2DFA               	goto	u160
  1463  05F9                     u161:	
  1464  05F9  2DFB               	goto	l78
  1465  05FA                     u160:	
  1466  05FA                     l814:	
  1467                           
  1468                           ;UART.c: 36:         return RCREG;
  1469  05FA  081A               	movf	26,w	;volatile
  1470  05FB                     l78:	
  1471  05FB  0008               	return
  1472  05FC                     __end_of_UART_Read:	
  1473                           
  1474                           	psect	text9
  1475  06F6                     __ptext9:	
  1476 ;; *************** function _UART_Init *****************
  1477 ;; Defined at:
  1478 ;;		line 18 in file "UART.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  baudrate        4    6[BANK0 ] const long 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      unsigned char 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0, pclath, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       4       0       0       0
  1493 ;;      Locals:         0       0       0       0       0
  1494 ;;      Temps:          0      12       0       0       0
  1495 ;;      Totals:         0      16       0       0       0
  1496 ;;Total ram usage:       16 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    1
  1499 ;; This function calls:
  1500 ;;		___aldiv
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function _UART_Init
  1508  06F6                     _UART_Init:	
  1509  06F6                     l946:	
  1510                           ;incstack = 0
  1511                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1512                           
  1513                           
  1514                           ;UART.c: 19:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1515  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  1516  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  1517  06F8  0826               	movf	UART_Init@baudrate,w
  1518  06F9  00AA               	movwf	??_UART_Init
  1519  06FA  0827               	movf	UART_Init@baudrate+1,w
  1520  06FB  00AB               	movwf	??_UART_Init+1
  1521  06FC  0828               	movf	UART_Init@baudrate+2,w
  1522  06FD  00AC               	movwf	??_UART_Init+2
  1523  06FE  0829               	movf	UART_Init@baudrate+3,w
  1524  06FF  00AD               	movwf	??_UART_Init+3
  1525  0700  3004               	movlw	4
  1526  0701                     u295:	
  1527  0701  1003               	clrc
  1528  0702  0DAA               	rlf	??_UART_Init,f
  1529  0703  0DAB               	rlf	??_UART_Init+1,f
  1530  0704  0DAC               	rlf	??_UART_Init+2,f
  1531  0705  0DAD               	rlf	??_UART_Init+3,f
  1532  0706                     u290:	
  1533  0706  3EFF               	addlw	-1
  1534  0707  1D03               	skipz
  1535  0708  2F01               	goto	u295
  1536  0709  082D               	movf	??_UART_Init+3,w
  1537  070A  00F3               	movwf	___aldiv@divisor+3
  1538  070B  082C               	movf	??_UART_Init+2,w
  1539  070C  00F2               	movwf	___aldiv@divisor+2
  1540  070D  082B               	movf	??_UART_Init+1,w
  1541  070E  00F1               	movwf	___aldiv@divisor+1
  1542  070F  082A               	movf	??_UART_Init,w
  1543  0710  00F0               	movwf	___aldiv@divisor
  1544  0711  0826               	movf	UART_Init@baudrate,w
  1545  0712  00AE               	movwf	??_UART_Init+4
  1546  0713  0827               	movf	UART_Init@baudrate+1,w
  1547  0714  00AF               	movwf	??_UART_Init+5
  1548  0715  0828               	movf	UART_Init@baudrate+2,w
  1549  0716  00B0               	movwf	??_UART_Init+6
  1550  0717  0829               	movf	UART_Init@baudrate+3,w
  1551  0718  00B1               	movwf	??_UART_Init+7
  1552  0719  3004               	movlw	4
  1553  071A                     u305:	
  1554  071A  1003               	clrc
  1555  071B  0DAE               	rlf	??_UART_Init+4,f
  1556  071C  0DAF               	rlf	??_UART_Init+5,f
  1557  071D  0DB0               	rlf	??_UART_Init+6,f
  1558  071E  0DB1               	rlf	??_UART_Init+7,f
  1559  071F                     u300:	
  1560  071F  3EFF               	addlw	-1
  1561  0720  1D03               	skipz
  1562  0721  2F1A               	goto	u305
  1563  0722  3000               	movlw	0
  1564  0723  00B2               	movwf	??_UART_Init+8
  1565  0724  3012               	movlw	18
  1566  0725  00B3               	movwf	??_UART_Init+9
  1567  0726  307A               	movlw	122
  1568  0727  00B4               	movwf	??_UART_Init+10
  1569  0728  3000               	movlw	0
  1570  0729  00B5               	movwf	??_UART_Init+11
  1571  072A  082E               	movf	??_UART_Init+4,w
  1572  072B  02B2               	subwf	??_UART_Init+8,f
  1573  072C  082F               	movf	??_UART_Init+5,w
  1574  072D  1C03               	skipc
  1575  072E  0F2F               	incfsz	??_UART_Init+5,w
  1576  072F  2F31               	goto	u311
  1577  0730  2F32               	goto	u312
  1578  0731                     u311:	
  1579  0731  02B3               	subwf	??_UART_Init+9,f
  1580  0732                     u312:	
  1581  0732  0830               	movf	??_UART_Init+6,w
  1582  0733  1C03               	skipc
  1583  0734  0F30               	incfsz	??_UART_Init+6,w
  1584  0735  2F37               	goto	u313
  1585  0736  2F38               	goto	u314
  1586  0737                     u313:	
  1587  0737  02B4               	subwf	??_UART_Init+10,f
  1588  0738                     u314:	
  1589  0738  0831               	movf	??_UART_Init+7,w
  1590  0739  1C03               	skipc
  1591  073A  0F31               	incfsz	??_UART_Init+7,w
  1592  073B  2F3D               	goto	u315
  1593  073C  2F3E               	goto	u316
  1594  073D                     u315:	
  1595  073D  02B5               	subwf	??_UART_Init+11,f
  1596  073E                     u316:	
  1597  073E  0835               	movf	??_UART_Init+11,w
  1598  073F  00F7               	movwf	___aldiv@dividend+3
  1599  0740  0834               	movf	??_UART_Init+10,w
  1600  0741  00F6               	movwf	___aldiv@dividend+2
  1601  0742  0833               	movf	??_UART_Init+9,w
  1602  0743  00F5               	movwf	___aldiv@dividend+1
  1603  0744  0832               	movf	??_UART_Init+8,w
  1604  0745  00F4               	movwf	___aldiv@dividend
  1605  0746  120A  118A  275D  120A  118A  	fcall	___aldiv
  1606  074B  0870               	movf	?___aldiv,w
  1607  074C  1683               	bsf	3,5	;RP0=1, select bank1
  1608  074D  1303               	bcf	3,6	;RP1=0, select bank1
  1609  074E  0099               	movwf	25	;volatile
  1610  074F                     l948:	
  1611                           
  1612                           ;UART.c: 20:     TXSTAbits.BRGH = 1;
  1613  074F  1518               	bsf	24,2	;volatile
  1614  0750                     l950:	
  1615                           
  1616                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  1617  0750  1218               	bcf	24,4	;volatile
  1618  0751                     l952:	
  1619                           
  1620                           ;UART.c: 22:     RCSTAbits.SPEN = 1;
  1621  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0753  1798               	bsf	24,7	;volatile
  1624  0754                     l954:	
  1625                           
  1626                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  1627  0754  1618               	bsf	24,4	;volatile
  1628  0755                     l956:	
  1629                           
  1630                           ;UART.c: 24:     TXSTAbits.TXEN = 1;
  1631  0755  1683               	bsf	3,5	;RP0=1, select bank1
  1632  0756  1303               	bcf	3,6	;RP1=0, select bank1
  1633  0757  1698               	bsf	24,5	;volatile
  1634  0758                     l958:	
  1635                           
  1636                           ;UART.c: 25:     TXSTAbits.TX9 = 0;
  1637  0758  1318               	bcf	24,6	;volatile
  1638  0759                     l960:	
  1639                           
  1640                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  1641  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1642  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1643  075B  1318               	bcf	24,6	;volatile
  1644  075C                     l74:	
  1645  075C  0008               	return
  1646  075D                     __end_of_UART_Init:	
  1647                           
  1648                           	psect	text10
  1649  075D                     __ptext10:	
  1650 ;; *************** function ___aldiv *****************
  1651 ;; Defined at:
  1652 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  divisor         4    0[COMMON] long 
  1655 ;;  dividend        4    4[COMMON] long 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;  quotient        4    2[BANK0 ] long 
  1658 ;;  sign            1    1[BANK0 ] unsigned char 
  1659 ;;  counter         1    0[BANK0 ] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  4    0[COMMON] long 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1669 ;;      Params:         8       0       0       0       0
  1670 ;;      Locals:         0       6       0       0       0
  1671 ;;      Temps:          1       0       0       0       0
  1672 ;;      Totals:         9       6       0       0       0
  1673 ;;Total ram usage:       15 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_UART_Init
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           
  1683                           ;psect for function ___aldiv
  1684  075D                     ___aldiv:	
  1685  075D                     l898:	
  1686                           ;incstack = 0
  1687                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1688                           
  1689  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1690  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1691  075F  01A1               	clrf	___aldiv@sign
  1692  0760                     l900:	
  1693  0760  1FF3               	btfss	___aldiv@divisor+3,7
  1694  0761  2F63               	goto	u191
  1695  0762  2F64               	goto	u190
  1696  0763                     u191:	
  1697  0763  2F71               	goto	l285
  1698  0764                     u190:	
  1699  0764                     l902:	
  1700  0764  09F0               	comf	___aldiv@divisor,f
  1701  0765  09F1               	comf	___aldiv@divisor+1,f
  1702  0766  09F2               	comf	___aldiv@divisor+2,f
  1703  0767  09F3               	comf	___aldiv@divisor+3,f
  1704  0768  0AF0               	incf	___aldiv@divisor,f
  1705  0769  1903               	skipnz
  1706  076A  0AF1               	incf	___aldiv@divisor+1,f
  1707  076B  1903               	skipnz
  1708  076C  0AF2               	incf	___aldiv@divisor+2,f
  1709  076D  1903               	skipnz
  1710  076E  0AF3               	incf	___aldiv@divisor+3,f
  1711  076F  01A1               	clrf	___aldiv@sign
  1712  0770  0AA1               	incf	___aldiv@sign,f
  1713  0771                     l285:	
  1714  0771  1FF7               	btfss	___aldiv@dividend+3,7
  1715  0772  2F74               	goto	u201
  1716  0773  2F75               	goto	u200
  1717  0774                     u201:	
  1718  0774  2F84               	goto	l908
  1719  0775                     u200:	
  1720  0775                     l904:	
  1721  0775  09F4               	comf	___aldiv@dividend,f
  1722  0776  09F5               	comf	___aldiv@dividend+1,f
  1723  0777  09F6               	comf	___aldiv@dividend+2,f
  1724  0778  09F7               	comf	___aldiv@dividend+3,f
  1725  0779  0AF4               	incf	___aldiv@dividend,f
  1726  077A  1903               	skipnz
  1727  077B  0AF5               	incf	___aldiv@dividend+1,f
  1728  077C  1903               	skipnz
  1729  077D  0AF6               	incf	___aldiv@dividend+2,f
  1730  077E  1903               	skipnz
  1731  077F  0AF7               	incf	___aldiv@dividend+3,f
  1732  0780                     l906:	
  1733  0780  3001               	movlw	1
  1734  0781  00F8               	movwf	??___aldiv
  1735  0782  0878               	movf	??___aldiv,w
  1736  0783  06A1               	xorwf	___aldiv@sign,f
  1737  0784                     l908:	
  1738  0784  3000               	movlw	0
  1739  0785  00A5               	movwf	___aldiv@quotient+3
  1740  0786  3000               	movlw	0
  1741  0787  00A4               	movwf	___aldiv@quotient+2
  1742  0788  3000               	movlw	0
  1743  0789  00A3               	movwf	___aldiv@quotient+1
  1744  078A  3000               	movlw	0
  1745  078B  00A2               	movwf	___aldiv@quotient
  1746  078C                     l910:	
  1747  078C  0873               	movf	___aldiv@divisor+3,w
  1748  078D  0472               	iorwf	___aldiv@divisor+2,w
  1749  078E  0471               	iorwf	___aldiv@divisor+1,w
  1750  078F  0470               	iorwf	___aldiv@divisor,w
  1751  0790  1903               	skipnz
  1752  0791  2F93               	goto	u211
  1753  0792  2F94               	goto	u210
  1754  0793                     u211:	
  1755  0793  2FE1               	goto	l930
  1756  0794                     u210:	
  1757  0794                     l912:	
  1758  0794  01A0               	clrf	___aldiv@counter
  1759  0795  0AA0               	incf	___aldiv@counter,f
  1760  0796  2FA4               	goto	l916
  1761  0797                     l914:	
  1762  0797  3001               	movlw	1
  1763  0798  00F8               	movwf	??___aldiv
  1764  0799                     u225:	
  1765  0799  1003               	clrc
  1766  079A  0DF0               	rlf	___aldiv@divisor,f
  1767  079B  0DF1               	rlf	___aldiv@divisor+1,f
  1768  079C  0DF2               	rlf	___aldiv@divisor+2,f
  1769  079D  0DF3               	rlf	___aldiv@divisor+3,f
  1770  079E  0BF8               	decfsz	??___aldiv,f
  1771  079F  2F99               	goto	u225
  1772  07A0  3001               	movlw	1
  1773  07A1  00F8               	movwf	??___aldiv
  1774  07A2  0878               	movf	??___aldiv,w
  1775  07A3  07A0               	addwf	___aldiv@counter,f
  1776  07A4                     l916:	
  1777  07A4  1FF3               	btfss	___aldiv@divisor+3,7
  1778  07A5  2FA7               	goto	u231
  1779  07A6  2FA8               	goto	u230
  1780  07A7                     u231:	
  1781  07A7  2F97               	goto	l914
  1782  07A8                     u230:	
  1783  07A8                     l918:	
  1784  07A8  3001               	movlw	1
  1785  07A9  00F8               	movwf	??___aldiv
  1786  07AA                     u245:	
  1787  07AA  1003               	clrc
  1788  07AB  0DA2               	rlf	___aldiv@quotient,f
  1789  07AC  0DA3               	rlf	___aldiv@quotient+1,f
  1790  07AD  0DA4               	rlf	___aldiv@quotient+2,f
  1791  07AE  0DA5               	rlf	___aldiv@quotient+3,f
  1792  07AF  0BF8               	decfsz	??___aldiv,f
  1793  07B0  2FAA               	goto	u245
  1794  07B1                     l920:	
  1795  07B1  0873               	movf	___aldiv@divisor+3,w
  1796  07B2  0277               	subwf	___aldiv@dividend+3,w
  1797  07B3  1D03               	skipz
  1798  07B4  2FBF               	goto	u255
  1799  07B5  0872               	movf	___aldiv@divisor+2,w
  1800  07B6  0276               	subwf	___aldiv@dividend+2,w
  1801  07B7  1D03               	skipz
  1802  07B8  2FBF               	goto	u255
  1803  07B9  0871               	movf	___aldiv@divisor+1,w
  1804  07BA  0275               	subwf	___aldiv@dividend+1,w
  1805  07BB  1D03               	skipz
  1806  07BC  2FBF               	goto	u255
  1807  07BD  0870               	movf	___aldiv@divisor,w
  1808  07BE  0274               	subwf	___aldiv@dividend,w
  1809  07BF                     u255:	
  1810  07BF  1C03               	skipc
  1811  07C0  2FC2               	goto	u251
  1812  07C1  2FC3               	goto	u250
  1813  07C2                     u251:	
  1814  07C2  2FD2               	goto	l926
  1815  07C3                     u250:	
  1816  07C3                     l922:	
  1817  07C3  0870               	movf	___aldiv@divisor,w
  1818  07C4  02F4               	subwf	___aldiv@dividend,f
  1819  07C5  0871               	movf	___aldiv@divisor+1,w
  1820  07C6  1C03               	skipc
  1821  07C7  0F71               	incfsz	___aldiv@divisor+1,w
  1822  07C8  02F5               	subwf	___aldiv@dividend+1,f
  1823  07C9  0872               	movf	___aldiv@divisor+2,w
  1824  07CA  1C03               	skipc
  1825  07CB  0F72               	incfsz	___aldiv@divisor+2,w
  1826  07CC  02F6               	subwf	___aldiv@dividend+2,f
  1827  07CD  0873               	movf	___aldiv@divisor+3,w
  1828  07CE  1C03               	skipc
  1829  07CF  0F73               	incfsz	___aldiv@divisor+3,w
  1830  07D0  02F7               	subwf	___aldiv@dividend+3,f
  1831  07D1                     l924:	
  1832  07D1  1422               	bsf	___aldiv@quotient,0
  1833  07D2                     l926:	
  1834  07D2  3001               	movlw	1
  1835  07D3                     u265:	
  1836  07D3  1003               	clrc
  1837  07D4  0CF3               	rrf	___aldiv@divisor+3,f
  1838  07D5  0CF2               	rrf	___aldiv@divisor+2,f
  1839  07D6  0CF1               	rrf	___aldiv@divisor+1,f
  1840  07D7  0CF0               	rrf	___aldiv@divisor,f
  1841  07D8  3EFF               	addlw	-1
  1842  07D9  1D03               	skipz
  1843  07DA  2FD3               	goto	u265
  1844  07DB                     l928:	
  1845  07DB  3001               	movlw	1
  1846  07DC  02A0               	subwf	___aldiv@counter,f
  1847  07DD  1D03               	btfss	3,2
  1848  07DE  2FE0               	goto	u271
  1849  07DF  2FE1               	goto	u270
  1850  07E0                     u271:	
  1851  07E0  2FA8               	goto	l918
  1852  07E1                     u270:	
  1853  07E1                     l930:	
  1854  07E1  0821               	movf	___aldiv@sign,w
  1855  07E2  1903               	btfsc	3,2
  1856  07E3  2FE5               	goto	u281
  1857  07E4  2FE6               	goto	u280
  1858  07E5                     u281:	
  1859  07E5  2FF1               	goto	l934
  1860  07E6                     u280:	
  1861  07E6                     l932:	
  1862  07E6  09A2               	comf	___aldiv@quotient,f
  1863  07E7  09A3               	comf	___aldiv@quotient+1,f
  1864  07E8  09A4               	comf	___aldiv@quotient+2,f
  1865  07E9  09A5               	comf	___aldiv@quotient+3,f
  1866  07EA  0AA2               	incf	___aldiv@quotient,f
  1867  07EB  1903               	skipnz
  1868  07EC  0AA3               	incf	___aldiv@quotient+1,f
  1869  07ED  1903               	skipnz
  1870  07EE  0AA4               	incf	___aldiv@quotient+2,f
  1871  07EF  1903               	skipnz
  1872  07F0  0AA5               	incf	___aldiv@quotient+3,f
  1873  07F1                     l934:	
  1874  07F1  0825               	movf	___aldiv@quotient+3,w
  1875  07F2  00F3               	movwf	?___aldiv+3
  1876  07F3  0824               	movf	___aldiv@quotient+2,w
  1877  07F4  00F2               	movwf	?___aldiv+2
  1878  07F5  0823               	movf	___aldiv@quotient+1,w
  1879  07F6  00F1               	movwf	?___aldiv+1
  1880  07F7  0822               	movf	___aldiv@quotient,w
  1881  07F8  00F0               	movwf	?___aldiv
  1882  07F9                     l295:	
  1883  07F9  0008               	return
  1884  07FA                     __end_of___aldiv:	
  1885  007E                     btemp	set	126	;btemp
  1886  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     22      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _init->_spiInit
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     962
                                              9 COMMON     2     2      0
                          _UART_Init
                          _UART_Read
                         _UART_Write
                               _init
                            _initOsc
                       _spiDataReady
                            _spiRead
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiDataReady                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Read
   _UART_Write
   _init
     _spiInit
   _initOsc
   _spiDataReady
   _spiRead
     _spiReceiveWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      23       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      23      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 16 22:57:55 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l81 0606  
                      l74 075C                        l90 0640                        l59 063D  
                      l91 0698                        l84 0610                        l92 0646  
                      l93 064C                        l78 05FB                        l94 0652  
                      l95 0658                        l96 065E                        l97 0664  
                      l98 066A                        l99 0670                        u20 05F3  
                      u21 05F2                       l100 0699                       l120 05ED  
                     l130 05EC                       l123 05F3                       l116 0621  
                     l117 0626                       l134 0604                       l285 0771  
                     l295 07F9                       l900 0760                       l812 05F4  
                     l910 078C                       l902 0764                       l814 05FA  
                     l830 0606                       l920 07B1                       l912 0794  
                     l904 0775                       l832 060C                       l736 05ED  
                     l824 05FC                       l922 07C3                       l914 0797  
                     l930 07E1                       l906 0780                       l818 05E9  
                     l826 0601                       l932 07E6                       l924 07D1  
                     l916 07A4                       l908 0784                       l940 062C  
                     l934 07F1                       l926 07D2                       l918 07A8  
                     l950 0750                       l942 0632                       l782 0676  
                     l928 07DB                       l960 0759                       l952 0751  
                     l944 0634                       l954 0754                       l946 06F6  
                     l890 0619                       l938 0627                       l778 063F  
                     l970 06B7                       l962 069A                       l956 0755  
                     l948 074F                       l892 061B                       l980 06C6  
                     l972 06B8                       l964 06A0                       l958 0758  
                     l894 061D                       l990 06E3                       l982 06C7  
                     l974 06B9                       l966 06A5                       l896 0620  
                     l888 0612                       l992 06EC                       l984 06D0  
                     l976 06BA                       l968 06B4                       l898 075D  
                     l986 06D5                       l978 06C2                       l988 06DD  
                     u200 0775                       u201 0774                       u210 0794  
                     u211 0793                       u300 071F                       u230 07A8  
                     u231 07A7                       u311 0731                       u312 0732  
                     u160 05FA                       u225 0799                       u313 0737  
                     u305 071A                       u161 05F9                       u250 07C3  
                     u314 0738                       u170 060C                       u251 07C2  
                     u315 073D                       u171 060B                       u316 073E  
                     u180 0619                       u245 07AA                       u181 0618  
                     u270 07E1                       u190 0764                       u271 07E0  
                     u255 07BF                       u191 0763                       u327 06CB  
                     u280 07E6                       u281 07E5                       u265 07D3  
                     u337 06E7                       u290 0706              __CFG_CPD$OFF 0000  
                     u295 0701              __CFG_LVP$OFF 0000                      l1014 067E  
            __CFG_WRT$OFF 0000                      _main 069A                      _init 0627  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
         __end_of___aldiv 07FA                     ?_main 0070                     ?_init 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _RCREG 001A  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TXREG 0019            __CFG_FCMEN$OFF 0000               ?_UART_Write 0070  
      __size_of_UART_Init 0067        __size_of_UART_Read 0008           __end_of_initOsc 069A  
          __CFG_BOREN$OFF 0000           __end_of_spiInit 0627           __end_of_spiRead 0605  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07FA              __end_of_main 06F6              __end_of_init 063E  
                  ??_main 0079                    ??_init 0074                    _ANSELH 0189  
                  _INTCON 000B               initOsc@frec 0072                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000         __end_of_UART_Init 075D         __end_of_UART_Read 05FC  
     __size_of_UART_Write 000C                 ??___aldiv 0078                 ??_initOsc 0070  
               ??_spiInit 0073                 ??_spiRead 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070                __pmaintext 069A   __size_of_spiReceiveWait 0007  
           ?_spiDataReady 0070              ??_UART_Write 0070                   _SSPSTAT 0094  
                 _RecPOTS 007B                   ___aldiv 075D        __end_of_UART_Write 0611  
                 __ptext1 05FC                   __ptext2 05ED                   __ptext3 05E9  
                 __ptext4 063E                   __ptext5 0627                   __ptext6 0611  
                 __ptext7 0605                   __ptext8 05F4                   __ptext9 06F6  
          ??_spiDataReady 0070                   _initOsc 063E          ___aldiv@dividend 0074  
                 _spiInit 0611                   _spiRead 05FC      end_of_initialization 07FC  
               _RCSTAbits 0018          ___aldiv@quotient 0022                 _UART_Init 06F6  
               _UART_Read 05F4                 _PORTAbits 0005            UART_Write@data 0070  
               _TRISCbits 0087                 _TXSTAbits 0098            _spiReceiveWait 05ED  
              ?_UART_Init 0026                ?_UART_Read 0070       start_initialization 07FA  
    __end_of_spiDataReady 05ED  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 05F4  
             __pbssCOMMON 007B                 ___latbits 0002             __pcstackBANK0 0020  
         ?_spiReceiveWait 0070                  ?___aldiv 0070               ??_UART_Init 002A  
             ??_UART_Read 0070                  ?_initOsc 0070                  ?_spiInit 0070  
                ?_spiRead 0070           ___aldiv@divisor 0070      spiInit@sTransmitEdge 0072  
         ___aldiv@counter 0020        spiInit@sDataSample 0070                  _PIR1bits 000C  
       UART_Init@baudrate 0026                  _Cont_COM 007C     __size_of_spiDataReady 0004  
        __size_of___aldiv 009D              _spiDataReady 05E9          __size_of_initOsc 005C  
                __ptext10 075D          __size_of_spiInit 0016          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 005C             __size_of_init 0017  
            spiInit@sType 0073         spiInit@sClockIdle 0071          ??_spiReceiveWait 0070  
              _OSCCONbits 008F              ___aldiv@sign 0021                _UART_Write 0605  
