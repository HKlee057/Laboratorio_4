

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 16 21:54:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  008F                     	;# 
   412  0090                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0095                     	;# 
   420  0096                     	;# 
   421  0097                     	;# 
   422  0098                     	;# 
   423  0099                     	;# 
   424  009A                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0105                     	;# 
   431  0107                     	;# 
   432  0108                     	;# 
   433  0109                     	;# 
   434  010C                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  0185                     	;# 
   440  0187                     	;# 
   441  0188                     	;# 
   442  0189                     	;# 
   443  018C                     	;# 
   444  018D                     	;# 
   445  0000                     	;# 
   446  0001                     	;# 
   447  0002                     	;# 
   448  0003                     	;# 
   449  0004                     	;# 
   450  0005                     	;# 
   451  0006                     	;# 
   452  0007                     	;# 
   453  0008                     	;# 
   454  0009                     	;# 
   455  000A                     	;# 
   456  000B                     	;# 
   457  000C                     	;# 
   458  000D                     	;# 
   459  000E                     	;# 
   460  000E                     	;# 
   461  000F                     	;# 
   462  0010                     	;# 
   463  0011                     	;# 
   464  0012                     	;# 
   465  0013                     	;# 
   466  0014                     	;# 
   467  0015                     	;# 
   468  0015                     	;# 
   469  0016                     	;# 
   470  0017                     	;# 
   471  0018                     	;# 
   472  0019                     	;# 
   473  001A                     	;# 
   474  001B                     	;# 
   475  001B                     	;# 
   476  001C                     	;# 
   477  001D                     	;# 
   478  001E                     	;# 
   479  001F                     	;# 
   480  0081                     	;# 
   481  0085                     	;# 
   482  0086                     	;# 
   483  0087                     	;# 
   484  0088                     	;# 
   485  0089                     	;# 
   486  008C                     	;# 
   487  008D                     	;# 
   488  008E                     	;# 
   489  008F                     	;# 
   490  0090                     	;# 
   491  0091                     	;# 
   492  0092                     	;# 
   493  0093                     	;# 
   494  0093                     	;# 
   495  0093                     	;# 
   496  0094                     	;# 
   497  0095                     	;# 
   498  0096                     	;# 
   499  0097                     	;# 
   500  0098                     	;# 
   501  0099                     	;# 
   502  009A                     	;# 
   503  009B                     	;# 
   504  009C                     	;# 
   505  009D                     	;# 
   506  009E                     	;# 
   507  009F                     	;# 
   508  0105                     	;# 
   509  0107                     	;# 
   510  0108                     	;# 
   511  0109                     	;# 
   512  010C                     	;# 
   513  010C                     	;# 
   514  010D                     	;# 
   515  010E                     	;# 
   516  010F                     	;# 
   517  0185                     	;# 
   518  0187                     	;# 
   519  0188                     	;# 
   520  0189                     	;# 
   521  018C                     	;# 
   522  018D                     	;# 
   523  0000                     	;# 
   524  0001                     	;# 
   525  0002                     	;# 
   526  0003                     	;# 
   527  0004                     	;# 
   528  0005                     	;# 
   529  0006                     	;# 
   530  0007                     	;# 
   531  0008                     	;# 
   532  0009                     	;# 
   533  000A                     	;# 
   534  000B                     	;# 
   535  000C                     	;# 
   536  000D                     	;# 
   537  000E                     	;# 
   538  000E                     	;# 
   539  000F                     	;# 
   540  0010                     	;# 
   541  0011                     	;# 
   542  0012                     	;# 
   543  0013                     	;# 
   544  0014                     	;# 
   545  0015                     	;# 
   546  0015                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  001D                     	;# 
   556  001E                     	;# 
   557  001F                     	;# 
   558  0081                     	;# 
   559  0085                     	;# 
   560  0086                     	;# 
   561  0087                     	;# 
   562  0088                     	;# 
   563  0089                     	;# 
   564  008C                     	;# 
   565  008D                     	;# 
   566  008E                     	;# 
   567  008F                     	;# 
   568  0090                     	;# 
   569  0091                     	;# 
   570  0092                     	;# 
   571  0093                     	;# 
   572  0093                     	;# 
   573  0093                     	;# 
   574  0094                     	;# 
   575  0095                     	;# 
   576  0096                     	;# 
   577  0097                     	;# 
   578  0098                     	;# 
   579  0099                     	;# 
   580  009A                     	;# 
   581  009B                     	;# 
   582  009C                     	;# 
   583  009D                     	;# 
   584  009E                     	;# 
   585  009F                     	;# 
   586  0105                     	;# 
   587  0107                     	;# 
   588  0108                     	;# 
   589  0109                     	;# 
   590  010C                     	;# 
   591  010C                     	;# 
   592  010D                     	;# 
   593  010E                     	;# 
   594  010F                     	;# 
   595  0185                     	;# 
   596  0187                     	;# 
   597  0188                     	;# 
   598  0189                     	;# 
   599  018C                     	;# 
   600  018D                     	;# 
   601  001F                     _ADCON0bits	set	31
   602  0001                     _TMR0	set	1
   603  001E                     _ADRESH	set	30
   604  0013                     _SSPBUF	set	19
   605  0014                     _SSPCON	set	20
   606  0019                     _TXREG	set	25
   607  001A                     _RCREG	set	26
   608  000C                     _PIR1bits	set	12
   609  0018                     _RCSTAbits	set	24
   610  000B                     _INTCON	set	11
   611  0008                     _PORTD	set	8
   612  0007                     _PORTC	set	7
   613  0006                     _PORTB	set	6
   614  0005                     _PORTA	set	5
   615  005A                     _TMR0IF	set	90
   616  0066                     _ADIF	set	102
   617  009F                     _ADCON1bits	set	159
   618  0081                     _OPTION_REG	set	129
   619  0094                     _SSPSTATbits	set	148
   620  0094                     _SSPSTAT	set	148
   621  008F                     _OSCCONbits	set	143
   622  0098                     _TXSTAbits	set	152
   623  0099                     _SPBRG	set	153
   624  0088                     _TRISD	set	136
   625  0087                     _TRISCbits	set	135
   626  0087                     _TRISC	set	135
   627  0086                     _TRISB	set	134
   628  0085                     _TRISA	set	133
   629  043B                     _TRISC3	set	1083
   630  043D                     _TRISC5	set	1085
   631  0189                     _ANSELH	set	393
   632  0188                     _ANSEL	set	392
   633                           
   634                           ; #config settings
   635  0000                     
   636                           	psect	cinit
   637  0011                     start_initialization:	
   638  0011                     __initialization:	
   639                           
   640                           ; Clear objects allocated to COMMON
   641  0011  01F7               	clrf	__pbssCOMMON& (0+127)
   642  0012  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   643  0013  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   644                           
   645                           ; Clear objects allocated to BANK0
   646  0014  1283               	bcf	3,5	;RP0=0, select bank0
   647  0015  1303               	bcf	3,6	;RP1=0, select bank0
   648  0016  01C0               	clrf	__pbssBANK0& (0+127)
   649  0017                     end_of_initialization:	
   650                           ;End of C runtime variable initialization code
   651                           
   652  0017                     __end_of__initialization:	
   653  0017  0183               	clrf	3
   654  0018  120A  118A  29C3   	ljmp	_main	;jump to C main() function
   655                           
   656                           	psect	bssCOMMON
   657  0077                     __pbssCOMMON:	
   658  0077                     _CONT:	
   659  0077                     	ds	1
   660  0078                     _ADC_CH2_BIN:	
   661  0078                     	ds	1
   662  0079                     _ADC_CH1_BIN:	
   663  0079                     	ds	1
   664                           
   665                           	psect	bssBANK0
   666  0040                     __pbssBANK0:	
   667  0040                     _Cont_COM:	
   668  0040                     	ds	1
   669                           
   670                           	psect	cstackCOMMON
   671  0070                     __pcstackCOMMON:	
   672  0070                     ?_initOsc:	
   673  0070                     ?_init:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_UART_Read:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_channel:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ??_channel:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_main:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_isr:	
   689                           ; 1 bytes @ 0x0
   690                           
   691                           
   692                           ; 1 bytes @ 0x0
   693  0070                     	ds	2
   694  0072                     channel@ch:	
   695                           
   696                           ; 1 bytes @ 0x2
   697  0072                     	ds	1
   698  0073                     ??_isr:	
   699                           
   700                           ; 1 bytes @ 0x3
   701  0073                     	ds	4
   702                           
   703                           	psect	cstackBANK0
   704  0020                     __pcstackBANK0:	
   705  0020                     ??_initOsc:	
   706  0020                     ??_UART_Read:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0020                     ?_spiInit:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0020                     ?___aldiv:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0020                     spiInit@sDataSample:	
   716                           ; 4 bytes @ 0x0
   717                           
   718  0020                     ___aldiv@divisor:	
   719                           ; 1 bytes @ 0x0
   720                           
   721                           
   722                           ; 4 bytes @ 0x0
   723  0020                     	ds	1
   724  0021                     spiInit@sClockIdle:	
   725                           
   726                           ; 1 bytes @ 0x1
   727  0021                     	ds	1
   728  0022                     initOsc@frec:	
   729  0022                     spiInit@sTransmitEdge:	
   730                           ; 1 bytes @ 0x2
   731                           
   732                           
   733                           ; 1 bytes @ 0x2
   734  0022                     	ds	1
   735  0023                     ??_spiInit:	
   736  0023                     spiInit@sType:	
   737                           ; 1 bytes @ 0x3
   738                           
   739                           
   740                           ; 1 bytes @ 0x3
   741  0023                     	ds	1
   742  0024                     ??_init:	
   743  0024                     ___aldiv@dividend:	
   744                           ; 1 bytes @ 0x4
   745                           
   746                           
   747                           ; 4 bytes @ 0x4
   748  0024                     	ds	4
   749  0028                     ??___aldiv:	
   750                           
   751                           ; 1 bytes @ 0x8
   752  0028                     	ds	1
   753  0029                     ___aldiv@counter:	
   754                           
   755                           ; 1 bytes @ 0x9
   756  0029                     	ds	1
   757  002A                     ___aldiv@sign:	
   758                           
   759                           ; 1 bytes @ 0xA
   760  002A                     	ds	1
   761  002B                     ___aldiv@quotient:	
   762                           
   763                           ; 4 bytes @ 0xB
   764  002B                     	ds	4
   765  002F                     ?_UART_Init:	
   766  002F                     UART_Init@baudrate:	
   767                           ; 1 bytes @ 0xF
   768                           
   769                           
   770                           ; 4 bytes @ 0xF
   771  002F                     	ds	4
   772  0033                     ??_UART_Init:	
   773                           
   774                           ; 1 bytes @ 0x13
   775  0033                     	ds	12
   776  003F                     ??_main:	
   777                           
   778                           ; 1 bytes @ 0x1F
   779  003F                     	ds	1
   780                           
   781                           	psect	maintext
   782  01C3                     __pmaintext:	
   783 ;;
   784 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   785 ;;
   786 ;; *************** function _main *****************
   787 ;; Defined at:
   788 ;;		line 39 in file "Master_Lab_4.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : B00/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   802 ;;      Params:         0       0       0       0       0
   803 ;;      Locals:         0       0       0       0       0
   804 ;;      Temps:          0       1       0       0       0
   805 ;;      Totals:         0       1       0       0       0
   806 ;;Total ram usage:        1 bytes
   807 ;; Hardware stack levels required when called:    4
   808 ;; This function calls:
   809 ;;		_UART_Init
   810 ;;		_UART_Read
   811 ;;		_init
   812 ;;		_initOsc
   813 ;; This function is called by:
   814 ;;		Startup code after reset
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _main
   820  01C3                     _main:	
   821  01C3                     l1237:	
   822                           ;incstack = 0
   823                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   824                           
   825                           
   826                           ;Master_Lab_4.c: 40:     initOsc(7);
   827  01C3  3007               	movlw	7
   828  01C4  120A  118A  2121  120A  118A  	fcall	_initOsc
   829  01C9                     l1239:	
   830                           
   831                           ;Master_Lab_4.c: 41:     init();
   832  01C9  120A  118A  2232  120A  118A  	fcall	_init
   833  01CE                     l1241:	
   834                           
   835                           ;Master_Lab_4.c: 42:     UART_Init(9600);
   836  01CE  3000               	movlw	0
   837  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   838  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   839  01D1  00B2               	movwf	UART_Init@baudrate+3
   840  01D2  3000               	movlw	0
   841  01D3  00B1               	movwf	UART_Init@baudrate+2
   842  01D4  3025               	movlw	37
   843  01D5  00B0               	movwf	UART_Init@baudrate+1
   844  01D6  3080               	movlw	128
   845  01D7  00AF               	movwf	UART_Init@baudrate
   846  01D8  120A  118A  20B8  120A  118A  	fcall	_UART_Init
   847  01DD                     l1243:	
   848                           
   849                           ;Master_Lab_4.c: 44:     PORTA = 0;
   850  01DD  1283               	bcf	3,5	;RP0=0, select bank0
   851  01DE  1303               	bcf	3,6	;RP1=0, select bank0
   852  01DF  0185               	clrf	5	;volatile
   853  01E0                     l1245:	
   854                           
   855                           ;Master_Lab_4.c: 45:     PORTB = 0;
   856  01E0  0186               	clrf	6	;volatile
   857  01E1                     l1247:	
   858                           
   859                           ;Master_Lab_4.c: 46:     PORTC = 0;
   860  01E1  0187               	clrf	7	;volatile
   861  01E2                     l1249:	
   862                           
   863                           ;Master_Lab_4.c: 47:     PORTD = 0;
   864  01E2  0188               	clrf	8	;volatile
   865  01E3                     l1251:	
   866                           
   867                           ;Master_Lab_4.c: 50:         Cont_COM = UART_Read();
   868  01E3  120A  118A  224B  120A  118A  	fcall	_UART_Read
   869  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   870  01E9  1303               	bcf	3,6	;RP1=0, select bank0
   871  01EA  00BF               	movwf	??_main
   872  01EB  083F               	movf	??_main,w
   873  01EC  00C0               	movwf	_Cont_COM
   874  01ED                     l1253:	
   875                           
   876                           ;Master_Lab_4.c: 51:         PORTB = Cont_COM;
   877  01ED  0840               	movf	_Cont_COM,w
   878  01EE  0086               	movwf	6	;volatile
   879  01EF  29E3               	goto	l1251
   880  01F0  120A  118A  280E   	ljmp	start
   881  01F3                     __end_of_main:	
   882                           
   883                           	psect	text1
   884  0121                     __ptext1:	
   885 ;; *************** function _initOsc *****************
   886 ;; Defined at:
   887 ;;		line 8 in file "Oscilador.c"
   888 ;; Parameters:    Size  Location     Type
   889 ;;  frec            1    wreg     unsigned char 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  frec            1    2[BANK0 ] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       0       0       0       0
   902 ;;      Locals:         0       1       0       0       0
   903 ;;      Temps:          0       2       0       0       0
   904 ;;      Totals:         0       3       0       0       0
   905 ;;Total ram usage:        3 bytes
   906 ;; Hardware stack levels used:    1
   907 ;; Hardware stack levels required when called:    2
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_main
   912 ;;		_mainSlave
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function _initOsc
   918  0121                     _initOsc:	
   919                           
   920                           ;incstack = 0
   921                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   922                           ;initOsc@frec stored from wreg
   923  0121  1283               	bcf	3,5	;RP0=0, select bank0
   924  0122  1303               	bcf	3,6	;RP1=0, select bank0
   925  0123  00A2               	movwf	initOsc@frec
   926  0124                     l1085:	
   927                           
   928                           ;Oscilador.c: 9:     switch(frec){
   929  0124  295B               	goto	l1089
   930  0125                     l78:	
   931                           ;Oscilador.c: 10:         case 0:
   932                           
   933                           
   934                           ;Oscilador.c: 11:             OSCCONbits.IRCF0 = 0;
   935  0125  1683               	bsf	3,5	;RP0=1, select bank1
   936  0126  1303               	bcf	3,6	;RP1=0, select bank1
   937  0127  120F               	bcf	15,4	;volatile
   938                           
   939                           ;Oscilador.c: 12:             OSCCONbits.IRCF1 = 0;
   940  0128  128F               	bcf	15,5	;volatile
   941                           
   942                           ;Oscilador.c: 13:             OSCCONbits.IRCF2 = 0;
   943  0129  130F               	bcf	15,6	;volatile
   944                           
   945                           ;Oscilador.c: 14:             break;
   946  012A  297D               	goto	l79
   947  012B                     l80:	
   948                           ;Oscilador.c: 15:         case 1:
   949                           
   950                           
   951                           ;Oscilador.c: 16:             OSCCONbits.IRCF0 = 1;
   952  012B  1683               	bsf	3,5	;RP0=1, select bank1
   953  012C  1303               	bcf	3,6	;RP1=0, select bank1
   954  012D  160F               	bsf	15,4	;volatile
   955                           
   956                           ;Oscilador.c: 17:             OSCCONbits.IRCF1 = 0;
   957  012E  128F               	bcf	15,5	;volatile
   958                           
   959                           ;Oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   960  012F  130F               	bcf	15,6	;volatile
   961                           
   962                           ;Oscilador.c: 19:             break;
   963  0130  297D               	goto	l79
   964  0131                     l81:	
   965                           ;Oscilador.c: 20:         case 2:
   966                           
   967                           
   968                           ;Oscilador.c: 21:             OSCCONbits.IRCF0 = 0;
   969  0131  1683               	bsf	3,5	;RP0=1, select bank1
   970  0132  1303               	bcf	3,6	;RP1=0, select bank1
   971  0133  120F               	bcf	15,4	;volatile
   972                           
   973                           ;Oscilador.c: 22:             OSCCONbits.IRCF1 = 1;
   974  0134  168F               	bsf	15,5	;volatile
   975                           
   976                           ;Oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
   977  0135  130F               	bcf	15,6	;volatile
   978                           
   979                           ;Oscilador.c: 24:             break;
   980  0136  297D               	goto	l79
   981  0137                     l82:	
   982                           ;Oscilador.c: 25:         case 3:
   983                           
   984                           
   985                           ;Oscilador.c: 26:             OSCCONbits.IRCF0 = 1;
   986  0137  1683               	bsf	3,5	;RP0=1, select bank1
   987  0138  1303               	bcf	3,6	;RP1=0, select bank1
   988  0139  160F               	bsf	15,4	;volatile
   989                           
   990                           ;Oscilador.c: 27:             OSCCONbits.IRCF1 = 1;
   991  013A  168F               	bsf	15,5	;volatile
   992                           
   993                           ;Oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
   994  013B  130F               	bcf	15,6	;volatile
   995                           
   996                           ;Oscilador.c: 29:             break;
   997  013C  297D               	goto	l79
   998  013D                     l83:	
   999                           ;Oscilador.c: 30:         case 4:
  1000                           
  1001                           
  1002                           ;Oscilador.c: 31:             OSCCONbits.IRCF0 = 0;
  1003  013D  1683               	bsf	3,5	;RP0=1, select bank1
  1004  013E  1303               	bcf	3,6	;RP1=0, select bank1
  1005  013F  120F               	bcf	15,4	;volatile
  1006                           
  1007                           ;Oscilador.c: 32:             OSCCONbits.IRCF1 = 0;
  1008  0140  128F               	bcf	15,5	;volatile
  1009                           
  1010                           ;Oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
  1011  0141  170F               	bsf	15,6	;volatile
  1012                           
  1013                           ;Oscilador.c: 34:             break;
  1014  0142  297D               	goto	l79
  1015  0143                     l84:	
  1016                           ;Oscilador.c: 35:         case 5:
  1017                           
  1018                           
  1019                           ;Oscilador.c: 36:             OSCCONbits.IRCF0 = 1;
  1020  0143  1683               	bsf	3,5	;RP0=1, select bank1
  1021  0144  1303               	bcf	3,6	;RP1=0, select bank1
  1022  0145  160F               	bsf	15,4	;volatile
  1023                           
  1024                           ;Oscilador.c: 37:             OSCCONbits.IRCF1 = 0;
  1025  0146  128F               	bcf	15,5	;volatile
  1026                           
  1027                           ;Oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
  1028  0147  170F               	bsf	15,6	;volatile
  1029                           
  1030                           ;Oscilador.c: 39:             break;
  1031  0148  297D               	goto	l79
  1032  0149                     l85:	
  1033                           ;Oscilador.c: 40:         case 6:
  1034                           
  1035                           
  1036                           ;Oscilador.c: 41:             OSCCONbits.IRCF0 = 0;
  1037  0149  1683               	bsf	3,5	;RP0=1, select bank1
  1038  014A  1303               	bcf	3,6	;RP1=0, select bank1
  1039  014B  120F               	bcf	15,4	;volatile
  1040                           
  1041                           ;Oscilador.c: 42:             OSCCONbits.IRCF1 = 1;
  1042  014C  168F               	bsf	15,5	;volatile
  1043                           
  1044                           ;Oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
  1045  014D  170F               	bsf	15,6	;volatile
  1046                           
  1047                           ;Oscilador.c: 44:             break;
  1048  014E  297D               	goto	l79
  1049  014F                     l86:	
  1050                           ;Oscilador.c: 45:         case 7:
  1051                           
  1052                           
  1053                           ;Oscilador.c: 46:             OSCCONbits.IRCF0 = 1;
  1054  014F  1683               	bsf	3,5	;RP0=1, select bank1
  1055  0150  1303               	bcf	3,6	;RP1=0, select bank1
  1056  0151  160F               	bsf	15,4	;volatile
  1057                           
  1058                           ;Oscilador.c: 47:             OSCCONbits.IRCF1 = 1;
  1059  0152  168F               	bsf	15,5	;volatile
  1060                           
  1061                           ;Oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
  1062  0153  170F               	bsf	15,6	;volatile
  1063                           
  1064                           ;Oscilador.c: 49:             break;
  1065  0154  297D               	goto	l79
  1066  0155                     l87:	
  1067                           ;Oscilador.c: 50:         default:
  1068                           
  1069                           
  1070                           ;Oscilador.c: 51:             OSCCONbits.IRCF0 = 0;
  1071  0155  1683               	bsf	3,5	;RP0=1, select bank1
  1072  0156  1303               	bcf	3,6	;RP1=0, select bank1
  1073  0157  120F               	bcf	15,4	;volatile
  1074                           
  1075                           ;Oscilador.c: 52:             OSCCONbits.IRCF1 = 1;
  1076  0158  168F               	bsf	15,5	;volatile
  1077                           
  1078                           ;Oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
  1079  0159  170F               	bsf	15,6	;volatile
  1080                           
  1081                           ;Oscilador.c: 54:             break;
  1082  015A  297D               	goto	l79
  1083  015B                     l1089:	
  1084  015B  0822               	movf	initOsc@frec,w
  1085  015C  00A0               	movwf	??_initOsc
  1086  015D  01A1               	clrf	??_initOsc+1
  1087                           
  1088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1089                           ; Switch size 1, requested type "simple"
  1090                           ; Number of cases is 1, Range of values is 0 to 0
  1091                           ; switch strategies available:
  1092                           ; Name         Instructions Cycles
  1093                           ; simple_byte            4     3 (average)
  1094                           ; direct_byte           11     8 (fixed)
  1095                           ; jumptable            260     6 (fixed)
  1096                           ;	Chosen strategy is simple_byte
  1097  015E  0821               	movf	??_initOsc+1,w
  1098  015F  3A00               	xorlw	0	; case 0
  1099  0160  1903               	skipnz
  1100  0161  2963               	goto	l1305
  1101  0162  2955               	goto	l87
  1102  0163                     l1305:	
  1103                           
  1104                           ; Switch size 1, requested type "simple"
  1105                           ; Number of cases is 8, Range of values is 0 to 7
  1106                           ; switch strategies available:
  1107                           ; Name         Instructions Cycles
  1108                           ; simple_byte           25    13 (average)
  1109                           ; direct_byte           32     8 (fixed)
  1110                           ; jumptable            260     6 (fixed)
  1111                           ;	Chosen strategy is simple_byte
  1112  0163  0820               	movf	??_initOsc,w
  1113  0164  3A00               	xorlw	0	; case 0
  1114  0165  1903               	skipnz
  1115  0166  2925               	goto	l78
  1116  0167  3A01               	xorlw	1	; case 1
  1117  0168  1903               	skipnz
  1118  0169  292B               	goto	l80
  1119  016A  3A03               	xorlw	3	; case 2
  1120  016B  1903               	skipnz
  1121  016C  2931               	goto	l81
  1122  016D  3A01               	xorlw	1	; case 3
  1123  016E  1903               	skipnz
  1124  016F  2937               	goto	l82
  1125  0170  3A07               	xorlw	7	; case 4
  1126  0171  1903               	skipnz
  1127  0172  293D               	goto	l83
  1128  0173  3A01               	xorlw	1	; case 5
  1129  0174  1903               	skipnz
  1130  0175  2943               	goto	l84
  1131  0176  3A03               	xorlw	3	; case 6
  1132  0177  1903               	skipnz
  1133  0178  2949               	goto	l85
  1134  0179  3A01               	xorlw	1	; case 7
  1135  017A  1903               	skipnz
  1136  017B  294F               	goto	l86
  1137  017C  2955               	goto	l87
  1138  017D                     l79:	
  1139                           
  1140                           ;Oscilador.c: 57:     OSCCONbits.SCS = 1;
  1141  017D  140F               	bsf	15,0	;volatile
  1142  017E                     l88:	
  1143  017E  0008               	return
  1144  017F                     __end_of_initOsc:	
  1145                           
  1146                           	psect	text2
  1147  0232                     __ptext2:	
  1148 ;; *************** function _init *****************
  1149 ;; Defined at:
  1150 ;;		line 59 in file "Master_Lab_4.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0, pclath, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1164 ;;      Params:         0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0
  1167 ;;      Totals:         0       0       0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    3
  1171 ;; This function calls:
  1172 ;;		_spiInit
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           
  1179                           ;psect for function _init
  1180  0232                     _init:	
  1181  0232                     l1223:	
  1182                           ;incstack = 0
  1183                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1184                           
  1185                           
  1186                           ;Master_Lab_4.c: 60:     TRISA = 0;
  1187  0232  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0233  1303               	bcf	3,6	;RP1=0, select bank1
  1189  0234  0185               	clrf	5	;volatile
  1190                           
  1191                           ;Master_Lab_4.c: 61:     TRISB = 0;
  1192  0235  0186               	clrf	6	;volatile
  1193                           
  1194                           ;Master_Lab_4.c: 62:     TRISC = 0;
  1195  0236  0187               	clrf	7	;volatile
  1196  0237                     l1225:	
  1197                           
  1198                           ;Master_Lab_4.c: 63:     TRISCbits.TRISC7 = 1;
  1199  0237  1787               	bsf	7,7	;volatile
  1200                           
  1201                           ;Master_Lab_4.c: 64:     TRISD = 0;
  1202  0238  0188               	clrf	8	;volatile
  1203                           
  1204                           ;Master_Lab_4.c: 65:     ANSEL = 0;
  1205  0239  1683               	bsf	3,5	;RP0=1, select bank3
  1206  023A  1703               	bsf	3,6	;RP1=1, select bank3
  1207  023B  0188               	clrf	8	;volatile
  1208                           
  1209                           ;Master_Lab_4.c: 66:     ANSELH = 0b00000000;
  1210  023C  0189               	clrf	9	;volatile
  1211  023D                     l1227:	
  1212                           
  1213                           ;Master_Lab_4.c: 67:     INTCON = 0b11100000;
  1214  023D  30E0               	movlw	224
  1215  023E  008B               	movwf	11	;volatile
  1216  023F                     l1229:	
  1217                           
  1218                           ;Master_Lab_4.c: 68:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_
      +                          IDLE_LOW, SPI_IDLE_2_ACTIVE);
  1219  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0241  01A0               	clrf	spiInit@sDataSample
  1222  0242  01A1               	clrf	spiInit@sClockIdle
  1223  0243  01A2               	clrf	spiInit@sTransmitEdge
  1224  0244  3020               	movlw	32
  1225  0245  120A  118A  2214  120A  118A  	fcall	_spiInit
  1226  024A                     l47:	
  1227  024A  0008               	return
  1228  024B                     __end_of_init:	
  1229                           
  1230                           	psect	text3
  1231  0214                     __ptext3:	
  1232 ;; *************** function _spiInit *****************
  1233 ;; Defined at:
  1234 ;;		line 10 in file "SPI.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  sType           1    wreg     enum E1264
  1237 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1238 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1239 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  sType           1    3[BANK0 ] enum E1264
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         0       3       0       0       0
  1252 ;;      Locals:         0       1       0       0       0
  1253 ;;      Temps:          0       0       0       0       0
  1254 ;;      Totals:         0       4       0       0       0
  1255 ;;Total ram usage:        4 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    2
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_init
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _spiInit
  1267  0214                     _spiInit:	
  1268                           
  1269                           ;incstack = 0
  1270                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1271                           ;spiInit@sType stored from wreg
  1272  0214  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0215  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0216  00A3               	movwf	spiInit@sType
  1275  0217                     l1213:	
  1276                           
  1277                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
  1278  0217  1683               	bsf	3,5	;RP0=1, select bank1
  1279  0218  1303               	bcf	3,6	;RP1=0, select bank1
  1280  0219  1287               	bcf	7,5	;volatile
  1281                           
  1282                           ;SPI.c: 13:     if(sType & 0b00000100)
  1283  021A  1283               	bcf	3,5	;RP0=0, select bank0
  1284  021B  1303               	bcf	3,6	;RP1=0, select bank0
  1285  021C  1D23               	btfss	spiInit@sType,2
  1286  021D  2A1F               	goto	u381
  1287  021E  2A20               	goto	u380
  1288  021F                     u381:	
  1289  021F  2A26               	goto	l1219
  1290  0220                     u380:	
  1291  0220                     l1215:	
  1292                           
  1293                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1294  0220  0822               	movf	spiInit@sTransmitEdge,w
  1295  0221  1683               	bsf	3,5	;RP0=1, select bank1
  1296  0222  1303               	bcf	3,6	;RP1=0, select bank1
  1297  0223  0094               	movwf	20	;volatile
  1298  0224                     l1217:	
  1299                           
  1300                           ;SPI.c: 16:         TRISC3 = 1;
  1301  0224  1587               	bsf	7,3	;volatile
  1302                           
  1303                           ;SPI.c: 17:     }
  1304  0225  2A2C               	goto	l104
  1305  0226                     l1219:	
  1306                           
  1307                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1308  0226  0820               	movf	spiInit@sDataSample,w
  1309  0227  0422               	iorwf	spiInit@sTransmitEdge,w
  1310  0228  1683               	bsf	3,5	;RP0=1, select bank1
  1311  0229  1303               	bcf	3,6	;RP1=0, select bank1
  1312  022A  0094               	movwf	20	;volatile
  1313  022B                     l1221:	
  1314                           
  1315                           ;SPI.c: 21:         TRISC3 = 0;
  1316  022B  1187               	bcf	7,3	;volatile
  1317  022C                     l104:	
  1318                           ;SPI.c: 22:     }
  1319                           
  1320                           
  1321                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
  1322  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1323  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1324  022E  0823               	movf	spiInit@sType,w
  1325  022F  0421               	iorwf	spiInit@sClockIdle,w
  1326  0230  0094               	movwf	20	;volatile
  1327  0231                     l105:	
  1328  0231  0008               	return
  1329  0232                     __end_of_spiInit:	
  1330                           
  1331                           	psect	text4
  1332  024B                     __ptext4:	
  1333 ;; *************** function _UART_Read *****************
  1334 ;; Defined at:
  1335 ;;		line 34 in file "UART.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      unsigned char 
  1342 ;; Registers used:
  1343 ;;		wreg
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1349 ;;      Params:         0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0
  1352 ;;      Totals:         0       0       0       0       0
  1353 ;;Total ram usage:        0 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    2
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _UART_Read
  1365  024B                     _UART_Read:	
  1366  024B                     l1231:	
  1367                           ;incstack = 0
  1368                           ; Regs used in _UART_Read: [wreg]
  1369                           
  1370                           
  1371                           ;UART.c: 35:     if(PIR1bits.RCIF==1){
  1372  024B  1283               	bcf	3,5	;RP0=0, select bank0
  1373  024C  1303               	bcf	3,6	;RP1=0, select bank0
  1374  024D  1E8C               	btfss	12,5	;volatile
  1375  024E  2A50               	goto	u391
  1376  024F  2A51               	goto	u390
  1377  0250                     u391:	
  1378  0250  2A52               	goto	l66
  1379  0251                     u390:	
  1380  0251                     l1233:	
  1381                           
  1382                           ;UART.c: 36:         return RCREG;
  1383  0251  081A               	movf	26,w	;volatile
  1384  0252                     l66:	
  1385  0252  0008               	return
  1386  0253                     __end_of_UART_Read:	
  1387                           
  1388                           	psect	text5
  1389  00B8                     __ptext5:	
  1390 ;; *************** function _UART_Init *****************
  1391 ;; Defined at:
  1392 ;;		line 18 in file "UART.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  baudrate        4   15[BANK0 ] const long 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;		None
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      unsigned char 
  1399 ;; Registers used:
  1400 ;;		wreg, status,2, status,0, pclath, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1406 ;;      Params:         0       4       0       0       0
  1407 ;;      Locals:         0       0       0       0       0
  1408 ;;      Temps:          0      12       0       0       0
  1409 ;;      Totals:         0      16       0       0       0
  1410 ;;Total ram usage:       16 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    3
  1413 ;; This function calls:
  1414 ;;		___aldiv
  1415 ;; This function is called by:
  1416 ;;		_main
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _UART_Init
  1422  00B8                     _UART_Init:	
  1423  00B8                     l1105:	
  1424                           ;incstack = 0
  1425                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1426                           
  1427                           
  1428                           ;UART.c: 19:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1429  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1430  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1431  00BA  082F               	movf	UART_Init@baudrate,w
  1432  00BB  00B3               	movwf	??_UART_Init
  1433  00BC  0830               	movf	UART_Init@baudrate+1,w
  1434  00BD  00B4               	movwf	??_UART_Init+1
  1435  00BE  0831               	movf	UART_Init@baudrate+2,w
  1436  00BF  00B5               	movwf	??_UART_Init+2
  1437  00C0  0832               	movf	UART_Init@baudrate+3,w
  1438  00C1  00B6               	movwf	??_UART_Init+3
  1439  00C2  3004               	movlw	4
  1440  00C3                     u345:	
  1441  00C3  1003               	clrc
  1442  00C4  0DB3               	rlf	??_UART_Init,f
  1443  00C5  0DB4               	rlf	??_UART_Init+1,f
  1444  00C6  0DB5               	rlf	??_UART_Init+2,f
  1445  00C7  0DB6               	rlf	??_UART_Init+3,f
  1446  00C8                     u340:	
  1447  00C8  3EFF               	addlw	-1
  1448  00C9  1D03               	skipz
  1449  00CA  28C3               	goto	u345
  1450  00CB  0836               	movf	??_UART_Init+3,w
  1451  00CC  00A3               	movwf	___aldiv@divisor+3
  1452  00CD  0835               	movf	??_UART_Init+2,w
  1453  00CE  00A2               	movwf	___aldiv@divisor+2
  1454  00CF  0834               	movf	??_UART_Init+1,w
  1455  00D0  00A1               	movwf	___aldiv@divisor+1
  1456  00D1  0833               	movf	??_UART_Init,w
  1457  00D2  00A0               	movwf	___aldiv@divisor
  1458  00D3  082F               	movf	UART_Init@baudrate,w
  1459  00D4  00B7               	movwf	??_UART_Init+4
  1460  00D5  0830               	movf	UART_Init@baudrate+1,w
  1461  00D6  00B8               	movwf	??_UART_Init+5
  1462  00D7  0831               	movf	UART_Init@baudrate+2,w
  1463  00D8  00B9               	movwf	??_UART_Init+6
  1464  00D9  0832               	movf	UART_Init@baudrate+3,w
  1465  00DA  00BA               	movwf	??_UART_Init+7
  1466  00DB  3004               	movlw	4
  1467  00DC                     u355:	
  1468  00DC  1003               	clrc
  1469  00DD  0DB7               	rlf	??_UART_Init+4,f
  1470  00DE  0DB8               	rlf	??_UART_Init+5,f
  1471  00DF  0DB9               	rlf	??_UART_Init+6,f
  1472  00E0  0DBA               	rlf	??_UART_Init+7,f
  1473  00E1                     u350:	
  1474  00E1  3EFF               	addlw	-1
  1475  00E2  1D03               	skipz
  1476  00E3  28DC               	goto	u355
  1477  00E4  3000               	movlw	0
  1478  00E5  00BB               	movwf	??_UART_Init+8
  1479  00E6  3012               	movlw	18
  1480  00E7  00BC               	movwf	??_UART_Init+9
  1481  00E8  307A               	movlw	122
  1482  00E9  00BD               	movwf	??_UART_Init+10
  1483  00EA  3000               	movlw	0
  1484  00EB  00BE               	movwf	??_UART_Init+11
  1485  00EC  0837               	movf	??_UART_Init+4,w
  1486  00ED  02BB               	subwf	??_UART_Init+8,f
  1487  00EE  0838               	movf	??_UART_Init+5,w
  1488  00EF  1C03               	skipc
  1489  00F0  0F38               	incfsz	??_UART_Init+5,w
  1490  00F1  28F3               	goto	u361
  1491  00F2  28F4               	goto	u362
  1492  00F3                     u361:	
  1493  00F3  02BC               	subwf	??_UART_Init+9,f
  1494  00F4                     u362:	
  1495  00F4  0839               	movf	??_UART_Init+6,w
  1496  00F5  1C03               	skipc
  1497  00F6  0F39               	incfsz	??_UART_Init+6,w
  1498  00F7  28F9               	goto	u363
  1499  00F8  28FA               	goto	u364
  1500  00F9                     u363:	
  1501  00F9  02BD               	subwf	??_UART_Init+10,f
  1502  00FA                     u364:	
  1503  00FA  083A               	movf	??_UART_Init+7,w
  1504  00FB  1C03               	skipc
  1505  00FC  0F3A               	incfsz	??_UART_Init+7,w
  1506  00FD  28FF               	goto	u365
  1507  00FE  2900               	goto	u366
  1508  00FF                     u365:	
  1509  00FF  02BE               	subwf	??_UART_Init+11,f
  1510  0100                     u366:	
  1511  0100  083E               	movf	??_UART_Init+11,w
  1512  0101  00A7               	movwf	___aldiv@dividend+3
  1513  0102  083D               	movf	??_UART_Init+10,w
  1514  0103  00A6               	movwf	___aldiv@dividend+2
  1515  0104  083C               	movf	??_UART_Init+9,w
  1516  0105  00A5               	movwf	___aldiv@dividend+1
  1517  0106  083B               	movf	??_UART_Init+8,w
  1518  0107  00A4               	movwf	___aldiv@dividend
  1519  0108  120A  118A  201B  120A  118A  	fcall	___aldiv
  1520  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1521  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1522  010F  0820               	movf	?___aldiv,w
  1523  0110  1683               	bsf	3,5	;RP0=1, select bank1
  1524  0111  1303               	bcf	3,6	;RP1=0, select bank1
  1525  0112  0099               	movwf	25	;volatile
  1526  0113                     l1107:	
  1527                           
  1528                           ;UART.c: 20:     TXSTAbits.BRGH = 1;
  1529  0113  1518               	bsf	24,2	;volatile
  1530  0114                     l1109:	
  1531                           
  1532                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  1533  0114  1218               	bcf	24,4	;volatile
  1534  0115                     l1111:	
  1535                           
  1536                           ;UART.c: 22:     RCSTAbits.SPEN = 1;
  1537  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0117  1798               	bsf	24,7	;volatile
  1540  0118                     l1113:	
  1541                           
  1542                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  1543  0118  1618               	bsf	24,4	;volatile
  1544  0119                     l1115:	
  1545                           
  1546                           ;UART.c: 24:     TXSTAbits.TXEN = 1;
  1547  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1548  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1549  011B  1698               	bsf	24,5	;volatile
  1550  011C                     l1117:	
  1551                           
  1552                           ;UART.c: 25:     TXSTAbits.TX9 = 0;
  1553  011C  1318               	bcf	24,6	;volatile
  1554  011D                     l1119:	
  1555                           
  1556                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  1557  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1558  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1559  011F  1318               	bcf	24,6	;volatile
  1560  0120                     l62:	
  1561  0120  0008               	return
  1562  0121                     __end_of_UART_Init:	
  1563                           
  1564                           	psect	text6
  1565  001B                     __ptext6:	
  1566 ;; *************** function ___aldiv *****************
  1567 ;; Defined at:
  1568 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  divisor         4    0[BANK0 ] long 
  1571 ;;  dividend        4    4[BANK0 ] long 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  quotient        4   11[BANK0 ] long 
  1574 ;;  sign            1   10[BANK0 ] unsigned char 
  1575 ;;  counter         1    9[BANK0 ] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  4    0[BANK0 ] long 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         0       8       0       0       0
  1586 ;;      Locals:         0       6       0       0       0
  1587 ;;      Temps:          0       1       0       0       0
  1588 ;;      Totals:         0      15       0       0       0
  1589 ;;Total ram usage:       15 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    2
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_UART_Init
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function ___aldiv
  1601  001B                     ___aldiv:	
  1602  001B                     l1045:	
  1603                           ;incstack = 0
  1604                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1605                           
  1606  001B  1283               	bcf	3,5	;RP0=0, select bank0
  1607  001C  1303               	bcf	3,6	;RP1=0, select bank0
  1608  001D  01AA               	clrf	___aldiv@sign
  1609  001E                     l1047:	
  1610  001E  1FA3               	btfss	___aldiv@divisor+3,7
  1611  001F  2821               	goto	u241
  1612  0020  2822               	goto	u240
  1613  0021                     u241:	
  1614  0021  282F               	goto	l354
  1615  0022                     u240:	
  1616  0022                     l1049:	
  1617  0022  09A0               	comf	___aldiv@divisor,f
  1618  0023  09A1               	comf	___aldiv@divisor+1,f
  1619  0024  09A2               	comf	___aldiv@divisor+2,f
  1620  0025  09A3               	comf	___aldiv@divisor+3,f
  1621  0026  0AA0               	incf	___aldiv@divisor,f
  1622  0027  1903               	skipnz
  1623  0028  0AA1               	incf	___aldiv@divisor+1,f
  1624  0029  1903               	skipnz
  1625  002A  0AA2               	incf	___aldiv@divisor+2,f
  1626  002B  1903               	skipnz
  1627  002C  0AA3               	incf	___aldiv@divisor+3,f
  1628  002D  01AA               	clrf	___aldiv@sign
  1629  002E  0AAA               	incf	___aldiv@sign,f
  1630  002F                     l354:	
  1631  002F  1FA7               	btfss	___aldiv@dividend+3,7
  1632  0030  2832               	goto	u251
  1633  0031  2833               	goto	u250
  1634  0032                     u251:	
  1635  0032  2842               	goto	l1055
  1636  0033                     u250:	
  1637  0033                     l1051:	
  1638  0033  09A4               	comf	___aldiv@dividend,f
  1639  0034  09A5               	comf	___aldiv@dividend+1,f
  1640  0035  09A6               	comf	___aldiv@dividend+2,f
  1641  0036  09A7               	comf	___aldiv@dividend+3,f
  1642  0037  0AA4               	incf	___aldiv@dividend,f
  1643  0038  1903               	skipnz
  1644  0039  0AA5               	incf	___aldiv@dividend+1,f
  1645  003A  1903               	skipnz
  1646  003B  0AA6               	incf	___aldiv@dividend+2,f
  1647  003C  1903               	skipnz
  1648  003D  0AA7               	incf	___aldiv@dividend+3,f
  1649  003E                     l1053:	
  1650  003E  3001               	movlw	1
  1651  003F  00A8               	movwf	??___aldiv
  1652  0040  0828               	movf	??___aldiv,w
  1653  0041  06AA               	xorwf	___aldiv@sign,f
  1654  0042                     l1055:	
  1655  0042  3000               	movlw	0
  1656  0043  00AE               	movwf	___aldiv@quotient+3
  1657  0044  3000               	movlw	0
  1658  0045  00AD               	movwf	___aldiv@quotient+2
  1659  0046  3000               	movlw	0
  1660  0047  00AC               	movwf	___aldiv@quotient+1
  1661  0048  3000               	movlw	0
  1662  0049  00AB               	movwf	___aldiv@quotient
  1663  004A                     l1057:	
  1664  004A  0823               	movf	___aldiv@divisor+3,w
  1665  004B  0422               	iorwf	___aldiv@divisor+2,w
  1666  004C  0421               	iorwf	___aldiv@divisor+1,w
  1667  004D  0420               	iorwf	___aldiv@divisor,w
  1668  004E  1903               	skipnz
  1669  004F  2851               	goto	u261
  1670  0050  2852               	goto	u260
  1671  0051                     u261:	
  1672  0051  289F               	goto	l1077
  1673  0052                     u260:	
  1674  0052                     l1059:	
  1675  0052  01A9               	clrf	___aldiv@counter
  1676  0053  0AA9               	incf	___aldiv@counter,f
  1677  0054  2862               	goto	l1063
  1678  0055                     l1061:	
  1679  0055  3001               	movlw	1
  1680  0056  00A8               	movwf	??___aldiv
  1681  0057                     u275:	
  1682  0057  1003               	clrc
  1683  0058  0DA0               	rlf	___aldiv@divisor,f
  1684  0059  0DA1               	rlf	___aldiv@divisor+1,f
  1685  005A  0DA2               	rlf	___aldiv@divisor+2,f
  1686  005B  0DA3               	rlf	___aldiv@divisor+3,f
  1687  005C  0BA8               	decfsz	??___aldiv,f
  1688  005D  2857               	goto	u275
  1689  005E  3001               	movlw	1
  1690  005F  00A8               	movwf	??___aldiv
  1691  0060  0828               	movf	??___aldiv,w
  1692  0061  07A9               	addwf	___aldiv@counter,f
  1693  0062                     l1063:	
  1694  0062  1FA3               	btfss	___aldiv@divisor+3,7
  1695  0063  2865               	goto	u281
  1696  0064  2866               	goto	u280
  1697  0065                     u281:	
  1698  0065  2855               	goto	l1061
  1699  0066                     u280:	
  1700  0066                     l1065:	
  1701  0066  3001               	movlw	1
  1702  0067  00A8               	movwf	??___aldiv
  1703  0068                     u295:	
  1704  0068  1003               	clrc
  1705  0069  0DAB               	rlf	___aldiv@quotient,f
  1706  006A  0DAC               	rlf	___aldiv@quotient+1,f
  1707  006B  0DAD               	rlf	___aldiv@quotient+2,f
  1708  006C  0DAE               	rlf	___aldiv@quotient+3,f
  1709  006D  0BA8               	decfsz	??___aldiv,f
  1710  006E  2868               	goto	u295
  1711  006F                     l1067:	
  1712  006F  0823               	movf	___aldiv@divisor+3,w
  1713  0070  0227               	subwf	___aldiv@dividend+3,w
  1714  0071  1D03               	skipz
  1715  0072  287D               	goto	u305
  1716  0073  0822               	movf	___aldiv@divisor+2,w
  1717  0074  0226               	subwf	___aldiv@dividend+2,w
  1718  0075  1D03               	skipz
  1719  0076  287D               	goto	u305
  1720  0077  0821               	movf	___aldiv@divisor+1,w
  1721  0078  0225               	subwf	___aldiv@dividend+1,w
  1722  0079  1D03               	skipz
  1723  007A  287D               	goto	u305
  1724  007B  0820               	movf	___aldiv@divisor,w
  1725  007C  0224               	subwf	___aldiv@dividend,w
  1726  007D                     u305:	
  1727  007D  1C03               	skipc
  1728  007E  2880               	goto	u301
  1729  007F  2881               	goto	u300
  1730  0080                     u301:	
  1731  0080  2890               	goto	l1073
  1732  0081                     u300:	
  1733  0081                     l1069:	
  1734  0081  0820               	movf	___aldiv@divisor,w
  1735  0082  02A4               	subwf	___aldiv@dividend,f
  1736  0083  0821               	movf	___aldiv@divisor+1,w
  1737  0084  1C03               	skipc
  1738  0085  0F21               	incfsz	___aldiv@divisor+1,w
  1739  0086  02A5               	subwf	___aldiv@dividend+1,f
  1740  0087  0822               	movf	___aldiv@divisor+2,w
  1741  0088  1C03               	skipc
  1742  0089  0F22               	incfsz	___aldiv@divisor+2,w
  1743  008A  02A6               	subwf	___aldiv@dividend+2,f
  1744  008B  0823               	movf	___aldiv@divisor+3,w
  1745  008C  1C03               	skipc
  1746  008D  0F23               	incfsz	___aldiv@divisor+3,w
  1747  008E  02A7               	subwf	___aldiv@dividend+3,f
  1748  008F                     l1071:	
  1749  008F  142B               	bsf	___aldiv@quotient,0
  1750  0090                     l1073:	
  1751  0090  3001               	movlw	1
  1752  0091                     u315:	
  1753  0091  1003               	clrc
  1754  0092  0CA3               	rrf	___aldiv@divisor+3,f
  1755  0093  0CA2               	rrf	___aldiv@divisor+2,f
  1756  0094  0CA1               	rrf	___aldiv@divisor+1,f
  1757  0095  0CA0               	rrf	___aldiv@divisor,f
  1758  0096  3EFF               	addlw	-1
  1759  0097  1D03               	skipz
  1760  0098  2891               	goto	u315
  1761  0099                     l1075:	
  1762  0099  3001               	movlw	1
  1763  009A  02A9               	subwf	___aldiv@counter,f
  1764  009B  1D03               	btfss	3,2
  1765  009C  289E               	goto	u321
  1766  009D  289F               	goto	u320
  1767  009E                     u321:	
  1768  009E  2866               	goto	l1065
  1769  009F                     u320:	
  1770  009F                     l1077:	
  1771  009F  082A               	movf	___aldiv@sign,w
  1772  00A0  1903               	btfsc	3,2
  1773  00A1  28A3               	goto	u331
  1774  00A2  28A4               	goto	u330
  1775  00A3                     u331:	
  1776  00A3  28AF               	goto	l1081
  1777  00A4                     u330:	
  1778  00A4                     l1079:	
  1779  00A4  09AB               	comf	___aldiv@quotient,f
  1780  00A5  09AC               	comf	___aldiv@quotient+1,f
  1781  00A6  09AD               	comf	___aldiv@quotient+2,f
  1782  00A7  09AE               	comf	___aldiv@quotient+3,f
  1783  00A8  0AAB               	incf	___aldiv@quotient,f
  1784  00A9  1903               	skipnz
  1785  00AA  0AAC               	incf	___aldiv@quotient+1,f
  1786  00AB  1903               	skipnz
  1787  00AC  0AAD               	incf	___aldiv@quotient+2,f
  1788  00AD  1903               	skipnz
  1789  00AE  0AAE               	incf	___aldiv@quotient+3,f
  1790  00AF                     l1081:	
  1791  00AF  082E               	movf	___aldiv@quotient+3,w
  1792  00B0  00A3               	movwf	?___aldiv+3
  1793  00B1  082D               	movf	___aldiv@quotient+2,w
  1794  00B2  00A2               	movwf	?___aldiv+2
  1795  00B3  082C               	movf	___aldiv@quotient+1,w
  1796  00B4  00A1               	movwf	?___aldiv+1
  1797  00B5  082B               	movf	___aldiv@quotient,w
  1798  00B6  00A0               	movwf	?___aldiv
  1799  00B7                     l364:	
  1800  00B7  0008               	return
  1801  00B8                     __end_of___aldiv:	
  1802                           
  1803                           	psect	text7
  1804  017F                     __ptext7:	
  1805 ;; *************** function _isr *****************
  1806 ;; Defined at:
  1807 ;;		line 50 in file "Slave_Lab_4.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;		None
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;                  1    wreg      void 
  1814 ;; Registers used:
  1815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1821 ;;      Params:         0       0       0       0       0
  1822 ;;      Locals:         0       0       0       0       0
  1823 ;;      Temps:          4       0       0       0       0
  1824 ;;      Totals:         4       0       0       0       0
  1825 ;;Total ram usage:        4 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    1
  1828 ;; This function calls:
  1829 ;;		_channel
  1830 ;; This function is called by:
  1831 ;;		Interrupt level 1
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _isr
  1837  017F                     _isr:	
  1838  017F                     i1l933:	
  1839                           
  1840                           ;Slave_Lab_4.c: 53:     if (ADIF){
  1841  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0181  1F0C               	btfss	12,6	;volatile
  1844  0182  2984               	goto	u18_21
  1845  0183  2985               	goto	u18_20
  1846  0184                     u18_21:	
  1847  0184  29A8               	goto	i1l949
  1848  0185                     u18_20:	
  1849  0185                     i1l935:	
  1850                           
  1851                           ;Slave_Lab_4.c: 54:         ADIF = 0;
  1852  0185  130C               	bcf	12,6	;volatile
  1853  0186                     i1l937:	
  1854                           
  1855                           ;Slave_Lab_4.c: 55:         if (CONT == 0){
  1856  0186  0877               	movf	_CONT,w
  1857  0187  1D03               	btfss	3,2
  1858  0188  298A               	goto	u19_21
  1859  0189  298B               	goto	u19_20
  1860  018A                     u19_21:	
  1861  018A  2997               	goto	i1l943
  1862  018B                     u19_20:	
  1863  018B                     i1l939:	
  1864                           
  1865                           ;Slave_Lab_4.c: 56:             channel(0);
  1866  018B  3000               	movlw	0
  1867  018C  120A  118A  21F3  120A  118A  	fcall	_channel
  1868  0191                     i1l941:	
  1869                           
  1870                           ;Slave_Lab_4.c: 57:             ADC_CH1_BIN = ADRESH;
  1871  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0193  081E               	movf	30,w	;volatile
  1874  0194  00F3               	movwf	??_isr
  1875  0195  0873               	movf	??_isr,w
  1876  0196  00F9               	movwf	_ADC_CH1_BIN
  1877  0197                     i1l943:	
  1878                           
  1879                           ;Slave_Lab_4.c: 60:         if (CONT == 1){
  1880  0197  0377               	decf	_CONT,w
  1881  0198  1D03               	btfss	3,2
  1882  0199  299B               	goto	u20_21
  1883  019A  299C               	goto	u20_20
  1884  019B                     u20_21:	
  1885  019B  29A8               	goto	i1l949
  1886  019C                     u20_20:	
  1887  019C                     i1l945:	
  1888                           
  1889                           ;Slave_Lab_4.c: 61:             channel(3);
  1890  019C  3003               	movlw	3
  1891  019D  120A  118A  21F3  120A  118A  	fcall	_channel
  1892  01A2                     i1l947:	
  1893                           
  1894                           ;Slave_Lab_4.c: 62:             ADC_CH2_BIN = ADRESH;
  1895  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1896  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1897  01A4  081E               	movf	30,w	;volatile
  1898  01A5  00F3               	movwf	??_isr
  1899  01A6  0873               	movf	??_isr,w
  1900  01A7  00F8               	movwf	_ADC_CH2_BIN
  1901  01A8                     i1l949:	
  1902                           
  1903                           ;Slave_Lab_4.c: 68:     if (TMR0IF){
  1904  01A8  1D0B               	btfss	11,2	;volatile
  1905  01A9  29AB               	goto	u21_21
  1906  01AA  29AC               	goto	u21_20
  1907  01AB                     u21_21:	
  1908  01AB  29BA               	goto	i1l180
  1909  01AC                     u21_20:	
  1910  01AC                     i1l951:	
  1911                           
  1912                           ;Slave_Lab_4.c: 69:         TMR0IF = 0;
  1913  01AC  110B               	bcf	11,2	;volatile
  1914  01AD                     i1l953:	
  1915                           
  1916                           ;Slave_Lab_4.c: 70:         TMR0 = 68;
  1917  01AD  3044               	movlw	68
  1918  01AE  0081               	movwf	1	;volatile
  1919  01AF                     i1l955:	
  1920                           
  1921                           ;Slave_Lab_4.c: 71:         CONT++;
  1922  01AF  3001               	movlw	1
  1923  01B0  00F3               	movwf	??_isr
  1924  01B1  0873               	movf	??_isr,w
  1925  01B2  07F7               	addwf	_CONT,f
  1926  01B3                     i1l957:	
  1927                           
  1928                           ;Slave_Lab_4.c: 73:         if (CONT > 2){
  1929  01B3  3003               	movlw	3
  1930  01B4  0277               	subwf	_CONT,w
  1931  01B5  1C03               	skipc
  1932  01B6  29B8               	goto	u22_21
  1933  01B7  29B9               	goto	u22_20
  1934  01B8                     u22_21:	
  1935  01B8  29BA               	goto	i1l180
  1936  01B9                     u22_20:	
  1937  01B9                     i1l959:	
  1938                           
  1939                           ;Slave_Lab_4.c: 74:             CONT = 0;
  1940  01B9  01F7               	clrf	_CONT
  1941  01BA                     i1l180:	
  1942  01BA  0876               	movf	??_isr+3,w
  1943  01BB  008A               	movwf	10
  1944  01BC  0875               	movf	??_isr+2,w
  1945  01BD  0084               	movwf	4
  1946  01BE  0E74               	swapf	(??_isr+1)^(0+4294967168),w
  1947  01BF  0083               	movwf	3
  1948  01C0  0EFE               	swapf	btemp,f
  1949  01C1  0E7E               	swapf	btemp,w
  1950  01C2  0009               	retfie
  1951  01C3                     __end_of_isr:	
  1952                           
  1953                           	psect	intentry
  1954  0004                     __pintentry:	
  1955                           ;incstack = 0
  1956                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1957                           
  1958  0004                     interrupt_function:	
  1959  007E                     saved_w	set	btemp
  1960  0004  00FE               	movwf	btemp
  1961  0005  0E03               	swapf	3,w
  1962  0006  00F4               	movwf	??_isr+1
  1963  0007  0804               	movf	4,w
  1964  0008  00F5               	movwf	??_isr+2
  1965  0009  080A               	movf	10,w
  1966  000A  00F6               	movwf	??_isr+3
  1967  000B  120A  118A  297F   	ljmp	_isr
  1968                           
  1969                           	psect	text8
  1970  01F3                     __ptext8:	
  1971 ;; *************** function _channel *****************
  1972 ;; Defined at:
  1973 ;;		line 27 in file "ADC.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  ch              1    wreg     unsigned char 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  ch              1    2[COMMON] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         0       0       0       0       0
  1988 ;;      Locals:         1       0       0       0       0
  1989 ;;      Temps:          2       0       0       0       0
  1990 ;;      Totals:         3       0       0       0       0
  1991 ;;Total ram usage:        3 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_isr
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function _channel
  2002  01F3                     _channel:	
  2003                           
  2004                           ;incstack = 0
  2005                           ; Regs used in _channel: [wreg-fsr0h+status,2+status,0]
  2006                           ;channel@ch stored from wreg
  2007  01F3  00F2               	movwf	channel@ch
  2008  01F4                     i1l887:	
  2009                           
  2010                           ;ADC.c: 28:     switch(ch){
  2011  01F4  2A03               	goto	i1l891
  2012  01F5                     i1l200:	
  2013                           ;ADC.c: 29:         case 0:
  2014                           
  2015                           
  2016                           ;ADC.c: 30:             ADCON0bits.CHS0 = 0;
  2017  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  2018  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  2019  01F7  111F               	bcf	31,2	;volatile
  2020                           
  2021                           ;ADC.c: 31:             ADCON0bits.CHS1 = 0;
  2022  01F8  119F               	bcf	31,3	;volatile
  2023                           
  2024                           ;ADC.c: 32:             ADCON0bits.CHS2 = 0;
  2025  01F9  121F               	bcf	31,4	;volatile
  2026                           
  2027                           ;ADC.c: 33:             ADCON0bits.CHS3 = 0;
  2028  01FA  129F               	bcf	31,5	;volatile
  2029                           
  2030                           ;ADC.c: 34:             break;
  2031  01FB  2A13               	goto	i1l203
  2032  01FC                     i1l202:	
  2033                           ;ADC.c: 35:         case 3:
  2034                           
  2035                           
  2036                           ;ADC.c: 36:             ADCON0bits.CHS0 = 1;
  2037  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2038  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2039  01FE  151F               	bsf	31,2	;volatile
  2040                           
  2041                           ;ADC.c: 37:             ADCON0bits.CHS1 = 1;
  2042  01FF  159F               	bsf	31,3	;volatile
  2043                           
  2044                           ;ADC.c: 38:             ADCON0bits.CHS2 = 0;
  2045  0200  121F               	bcf	31,4	;volatile
  2046                           
  2047                           ;ADC.c: 39:             ADCON0bits.CHS3 = 0;
  2048  0201  129F               	bcf	31,5	;volatile
  2049                           
  2050                           ;ADC.c: 40:             break;
  2051  0202  2A13               	goto	i1l203
  2052  0203                     i1l891:	
  2053  0203  0872               	movf	channel@ch,w
  2054  0204  00F0               	movwf	??_channel
  2055  0205  01F1               	clrf	??_channel+1
  2056                           
  2057                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2058                           ; Switch size 1, requested type "simple"
  2059                           ; Number of cases is 1, Range of values is 0 to 0
  2060                           ; switch strategies available:
  2061                           ; Name         Instructions Cycles
  2062                           ; simple_byte            4     3 (average)
  2063                           ; direct_byte           11     8 (fixed)
  2064                           ; jumptable            260     6 (fixed)
  2065                           ;	Chosen strategy is simple_byte
  2066  0206  0871               	movf	??_channel+1,w
  2067  0207  3A00               	xorlw	0	; case 0
  2068  0208  1903               	skipnz
  2069  0209  2A0B               	goto	i1l1307
  2070  020A  2A13               	goto	i1l203
  2071  020B                     i1l1307:	
  2072                           
  2073                           ; Switch size 1, requested type "simple"
  2074                           ; Number of cases is 2, Range of values is 0 to 3
  2075                           ; switch strategies available:
  2076                           ; Name         Instructions Cycles
  2077                           ; simple_byte            7     4 (average)
  2078                           ; direct_byte           20     8 (fixed)
  2079                           ; jumptable            260     6 (fixed)
  2080                           ;	Chosen strategy is simple_byte
  2081  020B  0870               	movf	??_channel,w
  2082  020C  3A00               	xorlw	0	; case 0
  2083  020D  1903               	skipnz
  2084  020E  29F5               	goto	i1l200
  2085  020F  3A03               	xorlw	3	; case 3
  2086  0210  1903               	skipnz
  2087  0211  29FC               	goto	i1l202
  2088  0212  2A13               	goto	i1l203
  2089  0213                     i1l203:	
  2090  0213  0008               	return
  2091  0214                     __end_of_channel:	
  2092  007E                     btemp	set	126	;btemp
  2093  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     32      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_channel

Critical Paths under _main in BANK0

    _main->_UART_Init
    _init->_spiInit
    _UART_Init->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1050
                                             31 BANK0      1     1      0
                          _UART_Init
                          _UART_Read
                               _init
                            _initOsc
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16    12      4     572
                                             15 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      15
                                              3 COMMON     4     4      0
                            _channel
 ---------------------------------------------------------------------------------
 (4) _channel                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Read
   _init
     _spiInit
   _initOsc

 _isr (ROOT)
   _channel

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      21       5       41.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 16 21:54:00 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l62 0120  
                      l47 024A                        l80 012B                        l81 0131  
                      l66 0252                        l82 0137                        l83 013D  
                      l84 0143                        l85 0149                        l86 014F  
                      l78 0125                        l87 0155                        l79 017D  
                      l88 017E                       l104 022C                       l105 0231  
                     l354 002F                       l364 00B7                       u300 0081  
                     u301 0080                       u320 009F                       u240 0022  
                     u321 009E                       u305 007D                       u241 0021  
                     u330 00A4                       u250 0033                       u331 00A3  
                     u315 0091                       u251 0032                       u260 0052  
                     u340 00C8                       u261 0051                       u350 00E1  
                     u280 0066                       u281 0065                       u361 00F3  
                     u345 00C3                       u362 00F4              __CFG_CPD$OFF 0000  
                     u275 0057                       u363 00F9                       u355 00DC  
                     u364 00FA                       u380 0220                       u365 00FF  
                     u381 021F                       u366 0100                       u390 0251  
                     u295 0068                       u391 0250                       _isr 017F  
                     fsr0 0004              __CFG_LVP$OFF 0000                      l1111 0115  
                    l1113 0118                      l1105 00B8                      l1051 0033  
                    l1115 0119                      l1107 0113                      l1061 0055  
                    l1053 003E                      l1045 001B                      l1117 011C  
                    l1109 0114                      l1221 022B                      l1213 0217  
                    l1071 008F                      l1063 0062                      l1055 0042  
                    l1047 001E                      l1119 011D                      l1231 024B  
                    l1215 0220                      l1223 0232                      l1081 00AF  
                    l1073 0090                      l1065 0066                      l1057 004A  
                    l1049 0022                      l1233 0251                      l1217 0224  
                    l1225 0237                      l1305 0163                      l1241 01CE  
                    l1075 0099                      l1067 006F                      l1059 0052  
                    l1219 0226                      l1227 023D                      l1251 01E3  
                    l1243 01DD                      l1069 0081                      l1077 009F  
                    l1229 023F                      l1085 0124                      l1253 01ED  
                    l1245 01E0                      l1237 01C3                      l1079 00A4  
                    l1247 01E1                      l1239 01C9                      l1089 015B  
                    l1249 01E2                      _ADIF 0066                      ?_isr 0070  
                    _CONT 0077                      _TMR0 0001              __CFG_WRT$OFF 0000  
                    _main 01C3                      _init 0232                      btemp 007E  
                    start 000E             __CFG_IESO$OFF 0000                     ??_isr 0073  
         __end_of___aldiv 00B8                     ?_main 0070                     ?_init 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l200 01F5  
                   i1l202 01FC                     i1l203 0213                     i1l180 01BA  
                   i1l941 0191                     i1l933 017F                     i1l951 01AC  
                   i1l943 0197                     i1l935 0185                     i1l953 01AD  
                   i1l945 019C                     i1l937 0186                     i1l891 0203  
                   i1l955 01AF                     i1l947 01A2                     i1l939 018B  
                   i1l957 01B3                     i1l949 01A8                     i1l887 01F4  
                   i1l959 01B9                     _RCREG 001A                     u20_20 019C  
                   u20_21 019B                     u21_20 01AC                     u21_21 01AB  
                   u22_20 01B9                     u22_21 01B8                     u18_20 0185  
                   u18_21 0184                     _SPBRG 0099                     u19_20 018B  
                   u19_21 018A                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TXREG 0019           __end_of_channel 0214            __CFG_FCMEN$OFF 0000  
      __size_of_UART_Init 0069        __size_of_UART_Read 0008           __end_of_initOsc 017F  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 0232  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 0011              __end_of_main 01F3              __end_of_init 024B  
                  ??_main 003F                    ??_init 0024                    _ADRESH 001E  
                  _ANSELH 0189                    i1l1307 020B                    _INTCON 000B  
             initOsc@frec 0022                    _TMR0IF 005A                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000         __end_of_UART_Init 0121         __end_of_UART_Read 0253  
               ??___aldiv 0028                 ??_channel 0070                 ??_initOsc 0020  
                  saved_w 007E                 ??_spiInit 0023   __end_of__initialization 0017  
          __pcstackCOMMON 0070                __pbssBANK0 0040                __pmaintext 01C3  
              __pintentry 0004                   _SSPSTAT 0094                   ___aldiv 001B  
                 _channel 01F3                   __ptext1 0121                   __ptext2 0232  
                 __ptext3 0214                   __ptext4 024B                   __ptext5 00B8  
                 __ptext6 001B                   __ptext7 017F                   __ptext8 01F3  
                 _initOsc 0121              __size_of_isr 0044          ___aldiv@dividend 0024  
                 _spiInit 0214      end_of_initialization 0017                 _RCSTAbits 0018  
        ___aldiv@quotient 002B                 _UART_Init 00B8                 _UART_Read 024B  
               _TRISCbits 0087               _ADC_CH1_BIN 0079               _ADC_CH2_BIN 0078  
               _TXSTAbits 0098                ?_UART_Init 002F                ?_UART_Read 0070  
     start_initialization 0011               __end_of_isr 01C3  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 0077                 ___latbits 0002             __pcstackBANK0 0020  
                ?___aldiv 0020               ??_UART_Init 0033               ??_UART_Read 0020  
                ?_channel 0070                  ?_initOsc 0070                  ?_spiInit 0020  
               channel@ch 0072           ___aldiv@divisor 0020      spiInit@sTransmitEdge 0022  
       interrupt_function 0004           ___aldiv@counter 0029        spiInit@sDataSample 0020  
                _PIR1bits 000C         UART_Init@baudrate 002F                _ADCON0bits 001F  
              _ADCON1bits 009F                  _Cont_COM 0040          __size_of___aldiv 009D  
        __size_of_channel 0021          __size_of_initOsc 005E          __size_of_spiInit 001E  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0030             __size_of_init 0019  
            spiInit@sType 0023         spiInit@sClockIdle 0021                  intlevel1 0000  
              _OSCCONbits 008F                _OPTION_REG 0081              ___aldiv@sign 002A  
