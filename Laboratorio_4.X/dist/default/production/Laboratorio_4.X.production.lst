

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 16 20:04:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  0019                     _TXREG	set	25
   363  001A                     _RCREG	set	26
   364  000C                     _PIR1bits	set	12
   365  0018                     _RCSTAbits	set	24
   366  000B                     _INTCON	set	11
   367  0008                     _PORTD	set	8
   368  0007                     _PORTC	set	7
   369  0006                     _PORTB	set	6
   370  0005                     _PORTA	set	5
   371  008F                     _OSCCONbits	set	143
   372  0098                     _TXSTAbits	set	152
   373  0099                     _SPBRG	set	153
   374  0088                     _TRISD	set	136
   375  0087                     _TRISCbits	set	135
   376  0087                     _TRISC	set	135
   377  0086                     _TRISB	set	134
   378  0085                     _TRISA	set	133
   379  0189                     _ANSELH	set	393
   380  0188                     _ANSEL	set	392
   381                           
   382                           ; #config settings
   383  0000                     
   384                           	psect	cinit
   385  07F9                     start_initialization:	
   386  07F9                     __initialization:	
   387                           
   388                           ; Clear objects allocated to BANK0
   389  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   390  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   391  07FB  01B6               	clrf	__pbssBANK0& (0+127)
   392  07FC                     end_of_initialization:	
   393                           ;End of C runtime variable initialization code
   394                           
   395  07FC                     __end_of__initialization:	
   396  07FC  0183               	clrf	3
   397  07FD  120A  118A  2E69   	ljmp	_main	;jump to C main() function
   398                           
   399                           	psect	bssBANK0
   400  0036                     __pbssBANK0:	
   401  0036                     _Cont_COM:	
   402  0036                     	ds	1
   403                           
   404                           	psect	cstackCOMMON
   405  0070                     __pcstackCOMMON:	
   406  0070                     ?_initOsc:	
   407  0070                     ??_initOsc:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_init:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ??_init:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_UART_Read:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ??_UART_Read:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_main:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?___aldiv:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ___aldiv@divisor:	
   429                           ; 4 bytes @ 0x0
   430                           
   431                           
   432                           ; 4 bytes @ 0x0
   433  0070                     	ds	2
   434  0072                     initOsc@frec:	
   435                           
   436                           ; 1 bytes @ 0x2
   437  0072                     	ds	2
   438  0074                     ___aldiv@dividend:	
   439                           
   440                           ; 4 bytes @ 0x4
   441  0074                     	ds	4
   442  0078                     ??___aldiv:	
   443                           
   444                           ; 1 bytes @ 0x8
   445  0078                     	ds	1
   446  0079                     ??_main:	
   447                           
   448                           ; 1 bytes @ 0x9
   449  0079                     	ds	1
   450                           
   451                           	psect	cstackBANK0
   452  0020                     __pcstackBANK0:	
   453  0020                     ___aldiv@counter:	
   454                           
   455                           ; 1 bytes @ 0x0
   456  0020                     	ds	1
   457  0021                     ___aldiv@sign:	
   458                           
   459                           ; 1 bytes @ 0x1
   460  0021                     	ds	1
   461  0022                     ___aldiv@quotient:	
   462                           
   463                           ; 4 bytes @ 0x2
   464  0022                     	ds	4
   465  0026                     ?_UART_Init:	
   466  0026                     UART_Init@baudrate:	
   467                           ; 1 bytes @ 0x6
   468                           
   469                           
   470                           ; 4 bytes @ 0x6
   471  0026                     	ds	4
   472  002A                     ??_UART_Init:	
   473                           
   474                           ; 1 bytes @ 0xA
   475  002A                     	ds	12
   476                           
   477                           	psect	maintext
   478  0669                     __pmaintext:	
   479 ;;
   480 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   481 ;;
   482 ;; *************** function _main *****************
   483 ;; Defined at:
   484 ;;		line 39 in file "Master_Lab_4.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : B00/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          1       0       0       0       0
   501 ;;      Totals:         1       0       0       0       0
   502 ;;Total ram usage:        1 bytes
   503 ;; Hardware stack levels required when called:    2
   504 ;; This function calls:
   505 ;;		_UART_Init
   506 ;;		_UART_Read
   507 ;;		_init
   508 ;;		_initOsc
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           
   515                           ;psect for function _main
   516  0669                     _main:	
   517  0669                     l876:	
   518                           ;incstack = 0
   519                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   520                           
   521                           
   522                           ;Master_Lab_4.c: 40:     initOsc(7);
   523  0669  3007               	movlw	7
   524  066A  120A  118A  2699  120A  118A  	fcall	_initOsc
   525  066F                     l878:	
   526                           
   527                           ;Master_Lab_4.c: 41:     init();
   528  066F  120A  118A  265B  120A  118A  	fcall	_init
   529  0674                     l880:	
   530                           
   531                           ;Master_Lab_4.c: 43:     UART_Init(9600);
   532  0674  3000               	movlw	0
   533  0675  1283               	bcf	3,5	;RP0=0, select bank0
   534  0676  1303               	bcf	3,6	;RP1=0, select bank0
   535  0677  00A9               	movwf	UART_Init@baudrate+3
   536  0678  3000               	movlw	0
   537  0679  00A8               	movwf	UART_Init@baudrate+2
   538  067A  3025               	movlw	37
   539  067B  00A7               	movwf	UART_Init@baudrate+1
   540  067C  3080               	movlw	128
   541  067D  00A6               	movwf	UART_Init@baudrate
   542  067E  120A  118A  26F5  120A  118A  	fcall	_UART_Init
   543  0683                     l882:	
   544                           
   545                           ;Master_Lab_4.c: 45:     PORTA = 0;
   546  0683  1283               	bcf	3,5	;RP0=0, select bank0
   547  0684  1303               	bcf	3,6	;RP1=0, select bank0
   548  0685  0185               	clrf	5	;volatile
   549  0686                     l884:	
   550                           
   551                           ;Master_Lab_4.c: 46:     PORTB = 0;
   552  0686  0186               	clrf	6	;volatile
   553  0687                     l886:	
   554                           
   555                           ;Master_Lab_4.c: 47:     PORTC = 0;
   556  0687  0187               	clrf	7	;volatile
   557  0688                     l888:	
   558                           
   559                           ;Master_Lab_4.c: 48:     PORTD = 0;
   560  0688  0188               	clrf	8	;volatile
   561  0689                     l890:	
   562                           
   563                           ;Master_Lab_4.c: 51:         Cont_COM = UART_Read();
   564  0689  120A  118A  2653  120A  118A  	fcall	_UART_Read
   565  068E  00F9               	movwf	??_main
   566  068F  0879               	movf	??_main,w
   567  0690  1283               	bcf	3,5	;RP0=0, select bank0
   568  0691  1303               	bcf	3,6	;RP1=0, select bank0
   569  0692  00B6               	movwf	_Cont_COM
   570  0693                     l892:	
   571                           
   572                           ;Master_Lab_4.c: 52:         PORTB = Cont_COM;
   573  0693  0836               	movf	_Cont_COM,w
   574  0694  0086               	movwf	6	;volatile
   575  0695  2E89               	goto	l890
   576  0696  120A  118A  2800   	ljmp	start
   577  0699                     __end_of_main:	
   578                           
   579                           	psect	text1
   580  0699                     __ptext1:	
   581 ;; *************** function _initOsc *****************
   582 ;; Defined at:
   583 ;;		line 8 in file "Oscilador.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  frec            1    wreg     unsigned char 
   586 ;; Auto vars:     Size  Location     Type
   587 ;;  frec            1    2[COMMON] unsigned char 
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   597 ;;      Params:         0       0       0       0       0
   598 ;;      Locals:         1       0       0       0       0
   599 ;;      Temps:          2       0       0       0       0
   600 ;;      Totals:         3       0       0       0       0
   601 ;;Total ram usage:        3 bytes
   602 ;; Hardware stack levels used:    1
   603 ;; This function calls:
   604 ;;		Nothing
   605 ;; This function is called by:
   606 ;;		_main
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           
   611                           ;psect for function _initOsc
   612  0699                     _initOsc:	
   613                           
   614                           ;incstack = 0
   615                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   616                           ;initOsc@frec stored from wreg
   617  0699  00F2               	movwf	initOsc@frec
   618  069A                     l838:	
   619                           
   620                           ;Oscilador.c: 9:     switch(frec){
   621  069A  2ED1               	goto	l842
   622  069B                     l76:	
   623                           ;Oscilador.c: 10:         case 0:
   624                           
   625                           
   626                           ;Oscilador.c: 11:             OSCCONbits.IRCF0 = 0;
   627  069B  1683               	bsf	3,5	;RP0=1, select bank1
   628  069C  1303               	bcf	3,6	;RP1=0, select bank1
   629  069D  120F               	bcf	15,4	;volatile
   630                           
   631                           ;Oscilador.c: 12:             OSCCONbits.IRCF1 = 0;
   632  069E  128F               	bcf	15,5	;volatile
   633                           
   634                           ;Oscilador.c: 13:             OSCCONbits.IRCF2 = 0;
   635  069F  130F               	bcf	15,6	;volatile
   636                           
   637                           ;Oscilador.c: 14:             break;
   638  06A0  2EF3               	goto	l77
   639  06A1                     l78:	
   640                           ;Oscilador.c: 15:         case 1:
   641                           
   642                           
   643                           ;Oscilador.c: 16:             OSCCONbits.IRCF0 = 1;
   644  06A1  1683               	bsf	3,5	;RP0=1, select bank1
   645  06A2  1303               	bcf	3,6	;RP1=0, select bank1
   646  06A3  160F               	bsf	15,4	;volatile
   647                           
   648                           ;Oscilador.c: 17:             OSCCONbits.IRCF1 = 0;
   649  06A4  128F               	bcf	15,5	;volatile
   650                           
   651                           ;Oscilador.c: 18:             OSCCONbits.IRCF2 = 0;
   652  06A5  130F               	bcf	15,6	;volatile
   653                           
   654                           ;Oscilador.c: 19:             break;
   655  06A6  2EF3               	goto	l77
   656  06A7                     l79:	
   657                           ;Oscilador.c: 20:         case 2:
   658                           
   659                           
   660                           ;Oscilador.c: 21:             OSCCONbits.IRCF0 = 0;
   661  06A7  1683               	bsf	3,5	;RP0=1, select bank1
   662  06A8  1303               	bcf	3,6	;RP1=0, select bank1
   663  06A9  120F               	bcf	15,4	;volatile
   664                           
   665                           ;Oscilador.c: 22:             OSCCONbits.IRCF1 = 1;
   666  06AA  168F               	bsf	15,5	;volatile
   667                           
   668                           ;Oscilador.c: 23:             OSCCONbits.IRCF2 = 0;
   669  06AB  130F               	bcf	15,6	;volatile
   670                           
   671                           ;Oscilador.c: 24:             break;
   672  06AC  2EF3               	goto	l77
   673  06AD                     l80:	
   674                           ;Oscilador.c: 25:         case 3:
   675                           
   676                           
   677                           ;Oscilador.c: 26:             OSCCONbits.IRCF0 = 1;
   678  06AD  1683               	bsf	3,5	;RP0=1, select bank1
   679  06AE  1303               	bcf	3,6	;RP1=0, select bank1
   680  06AF  160F               	bsf	15,4	;volatile
   681                           
   682                           ;Oscilador.c: 27:             OSCCONbits.IRCF1 = 1;
   683  06B0  168F               	bsf	15,5	;volatile
   684                           
   685                           ;Oscilador.c: 28:             OSCCONbits.IRCF2 = 0;
   686  06B1  130F               	bcf	15,6	;volatile
   687                           
   688                           ;Oscilador.c: 29:             break;
   689  06B2  2EF3               	goto	l77
   690  06B3                     l81:	
   691                           ;Oscilador.c: 30:         case 4:
   692                           
   693                           
   694                           ;Oscilador.c: 31:             OSCCONbits.IRCF0 = 0;
   695  06B3  1683               	bsf	3,5	;RP0=1, select bank1
   696  06B4  1303               	bcf	3,6	;RP1=0, select bank1
   697  06B5  120F               	bcf	15,4	;volatile
   698                           
   699                           ;Oscilador.c: 32:             OSCCONbits.IRCF1 = 0;
   700  06B6  128F               	bcf	15,5	;volatile
   701                           
   702                           ;Oscilador.c: 33:             OSCCONbits.IRCF2 = 1;
   703  06B7  170F               	bsf	15,6	;volatile
   704                           
   705                           ;Oscilador.c: 34:             break;
   706  06B8  2EF3               	goto	l77
   707  06B9                     l82:	
   708                           ;Oscilador.c: 35:         case 5:
   709                           
   710                           
   711                           ;Oscilador.c: 36:             OSCCONbits.IRCF0 = 1;
   712  06B9  1683               	bsf	3,5	;RP0=1, select bank1
   713  06BA  1303               	bcf	3,6	;RP1=0, select bank1
   714  06BB  160F               	bsf	15,4	;volatile
   715                           
   716                           ;Oscilador.c: 37:             OSCCONbits.IRCF1 = 0;
   717  06BC  128F               	bcf	15,5	;volatile
   718                           
   719                           ;Oscilador.c: 38:             OSCCONbits.IRCF2 = 1;
   720  06BD  170F               	bsf	15,6	;volatile
   721                           
   722                           ;Oscilador.c: 39:             break;
   723  06BE  2EF3               	goto	l77
   724  06BF                     l83:	
   725                           ;Oscilador.c: 40:         case 6:
   726                           
   727                           
   728                           ;Oscilador.c: 41:             OSCCONbits.IRCF0 = 0;
   729  06BF  1683               	bsf	3,5	;RP0=1, select bank1
   730  06C0  1303               	bcf	3,6	;RP1=0, select bank1
   731  06C1  120F               	bcf	15,4	;volatile
   732                           
   733                           ;Oscilador.c: 42:             OSCCONbits.IRCF1 = 1;
   734  06C2  168F               	bsf	15,5	;volatile
   735                           
   736                           ;Oscilador.c: 43:             OSCCONbits.IRCF2 = 1;
   737  06C3  170F               	bsf	15,6	;volatile
   738                           
   739                           ;Oscilador.c: 44:             break;
   740  06C4  2EF3               	goto	l77
   741  06C5                     l84:	
   742                           ;Oscilador.c: 45:         case 7:
   743                           
   744                           
   745                           ;Oscilador.c: 46:             OSCCONbits.IRCF0 = 1;
   746  06C5  1683               	bsf	3,5	;RP0=1, select bank1
   747  06C6  1303               	bcf	3,6	;RP1=0, select bank1
   748  06C7  160F               	bsf	15,4	;volatile
   749                           
   750                           ;Oscilador.c: 47:             OSCCONbits.IRCF1 = 1;
   751  06C8  168F               	bsf	15,5	;volatile
   752                           
   753                           ;Oscilador.c: 48:             OSCCONbits.IRCF2 = 1;
   754  06C9  170F               	bsf	15,6	;volatile
   755                           
   756                           ;Oscilador.c: 49:             break;
   757  06CA  2EF3               	goto	l77
   758  06CB                     l85:	
   759                           ;Oscilador.c: 50:         default:
   760                           
   761                           
   762                           ;Oscilador.c: 51:             OSCCONbits.IRCF0 = 0;
   763  06CB  1683               	bsf	3,5	;RP0=1, select bank1
   764  06CC  1303               	bcf	3,6	;RP1=0, select bank1
   765  06CD  120F               	bcf	15,4	;volatile
   766                           
   767                           ;Oscilador.c: 52:             OSCCONbits.IRCF1 = 1;
   768  06CE  168F               	bsf	15,5	;volatile
   769                           
   770                           ;Oscilador.c: 53:             OSCCONbits.IRCF2 = 1;
   771  06CF  170F               	bsf	15,6	;volatile
   772                           
   773                           ;Oscilador.c: 54:             break;
   774  06D0  2EF3               	goto	l77
   775  06D1                     l842:	
   776  06D1  0872               	movf	initOsc@frec,w
   777  06D2  00F0               	movwf	??_initOsc
   778  06D3  01F1               	clrf	??_initOsc+1
   779                           
   780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   781                           ; Switch size 1, requested type "simple"
   782                           ; Number of cases is 1, Range of values is 0 to 0
   783                           ; switch strategies available:
   784                           ; Name         Instructions Cycles
   785                           ; simple_byte            4     3 (average)
   786                           ; direct_byte           11     8 (fixed)
   787                           ; jumptable            260     6 (fixed)
   788                           ;	Chosen strategy is simple_byte
   789  06D4  0871               	movf	??_initOsc+1,w
   790  06D5  3A00               	xorlw	0	; case 0
   791  06D6  1903               	skipnz
   792  06D7  2ED9               	goto	l914
   793  06D8  2ECB               	goto	l85
   794  06D9                     l914:	
   795                           
   796                           ; Switch size 1, requested type "simple"
   797                           ; Number of cases is 8, Range of values is 0 to 7
   798                           ; switch strategies available:
   799                           ; Name         Instructions Cycles
   800                           ; simple_byte           25    13 (average)
   801                           ; direct_byte           32     8 (fixed)
   802                           ; jumptable            260     6 (fixed)
   803                           ;	Chosen strategy is simple_byte
   804  06D9  0870               	movf	??_initOsc,w
   805  06DA  3A00               	xorlw	0	; case 0
   806  06DB  1903               	skipnz
   807  06DC  2E9B               	goto	l76
   808  06DD  3A01               	xorlw	1	; case 1
   809  06DE  1903               	skipnz
   810  06DF  2EA1               	goto	l78
   811  06E0  3A03               	xorlw	3	; case 2
   812  06E1  1903               	skipnz
   813  06E2  2EA7               	goto	l79
   814  06E3  3A01               	xorlw	1	; case 3
   815  06E4  1903               	skipnz
   816  06E5  2EAD               	goto	l80
   817  06E6  3A07               	xorlw	7	; case 4
   818  06E7  1903               	skipnz
   819  06E8  2EB3               	goto	l81
   820  06E9  3A01               	xorlw	1	; case 5
   821  06EA  1903               	skipnz
   822  06EB  2EB9               	goto	l82
   823  06EC  3A03               	xorlw	3	; case 6
   824  06ED  1903               	skipnz
   825  06EE  2EBF               	goto	l83
   826  06EF  3A01               	xorlw	1	; case 7
   827  06F0  1903               	skipnz
   828  06F1  2EC5               	goto	l84
   829  06F2  2ECB               	goto	l85
   830  06F3                     l77:	
   831                           
   832                           ;Oscilador.c: 57:     OSCCONbits.SCS = 1;
   833  06F3  140F               	bsf	15,0	;volatile
   834  06F4                     l86:	
   835  06F4  0008               	return
   836  06F5                     __end_of_initOsc:	
   837                           
   838                           	psect	text2
   839  065B                     __ptext2:	
   840 ;; *************** function _init *****************
   841 ;; Defined at:
   842 ;;		line 60 in file "Master_Lab_4.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;		None
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      void 
   849 ;; Registers used:
   850 ;;		wreg, status,2
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   856 ;;      Params:         0       0       0       0       0
   857 ;;      Locals:         0       0       0       0       0
   858 ;;      Temps:          0       0       0       0       0
   859 ;;      Totals:         0       0       0       0       0
   860 ;;Total ram usage:        0 bytes
   861 ;; Hardware stack levels used:    1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _init
   871  065B                     _init:	
   872  065B                     l848:	
   873                           ;incstack = 0
   874                           ; Regs used in _init: [wreg+status,2]
   875                           
   876                           
   877                           ;Master_Lab_4.c: 61:     TRISA = 0;
   878  065B  1683               	bsf	3,5	;RP0=1, select bank1
   879  065C  1303               	bcf	3,6	;RP1=0, select bank1
   880  065D  0185               	clrf	5	;volatile
   881                           
   882                           ;Master_Lab_4.c: 62:     TRISB = 0;
   883  065E  0186               	clrf	6	;volatile
   884                           
   885                           ;Master_Lab_4.c: 63:     TRISC = 0;
   886  065F  0187               	clrf	7	;volatile
   887  0660                     l850:	
   888                           
   889                           ;Master_Lab_4.c: 64:     TRISCbits.TRISC7 = 1;
   890  0660  1787               	bsf	7,7	;volatile
   891                           
   892                           ;Master_Lab_4.c: 65:     TRISD = 0;
   893  0661  0188               	clrf	8	;volatile
   894                           
   895                           ;Master_Lab_4.c: 66:     ANSEL = 0;
   896  0662  1683               	bsf	3,5	;RP0=1, select bank3
   897  0663  1703               	bsf	3,6	;RP1=1, select bank3
   898  0664  0188               	clrf	8	;volatile
   899                           
   900                           ;Master_Lab_4.c: 67:     ANSELH = 0b00000000;
   901  0665  0189               	clrf	9	;volatile
   902  0666                     l852:	
   903                           
   904                           ;Master_Lab_4.c: 68:     INTCON = 0b11100000;
   905  0666  30E0               	movlw	224
   906  0667  008B               	movwf	11	;volatile
   907  0668                     l45:	
   908  0668  0008               	return
   909  0669                     __end_of_init:	
   910                           
   911                           	psect	text3
   912  0653                     __ptext3:	
   913 ;; *************** function _UART_Read *****************
   914 ;; Defined at:
   915 ;;		line 34 in file "UART.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      unsigned char 
   922 ;; Registers used:
   923 ;;		wreg
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0
   932 ;;      Totals:         0       0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _UART_Read
   944  0653                     _UART_Read:	
   945  0653                     l870:	
   946                           ;incstack = 0
   947                           ; Regs used in _UART_Read: [wreg]
   948                           
   949                           
   950                           ;UART.c: 35:     if(PIR1bits.RCIF==1){
   951  0653  1283               	bcf	3,5	;RP0=0, select bank0
   952  0654  1303               	bcf	3,6	;RP1=0, select bank0
   953  0655  1E8C               	btfss	12,5	;volatile
   954  0656  2E58               	goto	u291
   955  0657  2E59               	goto	u290
   956  0658                     u291:	
   957  0658  2E5A               	goto	l64
   958  0659                     u290:	
   959  0659                     l872:	
   960                           
   961                           ;UART.c: 36:         return RCREG;
   962  0659  081A               	movf	26,w	;volatile
   963  065A                     l64:	
   964  065A  0008               	return
   965  065B                     __end_of_UART_Read:	
   966                           
   967                           	psect	text4
   968  06F5                     __ptext4:	
   969 ;; *************** function _UART_Init *****************
   970 ;; Defined at:
   971 ;;		line 18 in file "UART.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  baudrate        4    6[BANK0 ] const long 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      unsigned char 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, pclath, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         0       4       0       0       0
   986 ;;      Locals:         0       0       0       0       0
   987 ;;      Temps:          0      12       0       0       0
   988 ;;      Totals:         0      16       0       0       0
   989 ;;Total ram usage:       16 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:    1
   992 ;; This function calls:
   993 ;;		___aldiv
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           
  1000                           ;psect for function _UART_Init
  1001  06F5                     _UART_Init:	
  1002  06F5                     l854:	
  1003                           ;incstack = 0
  1004                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1005                           
  1006                           
  1007                           ;UART.c: 19:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1008  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1009  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1010  06F7  0826               	movf	UART_Init@baudrate,w
  1011  06F8  00AA               	movwf	??_UART_Init
  1012  06F9  0827               	movf	UART_Init@baudrate+1,w
  1013  06FA  00AB               	movwf	??_UART_Init+1
  1014  06FB  0828               	movf	UART_Init@baudrate+2,w
  1015  06FC  00AC               	movwf	??_UART_Init+2
  1016  06FD  0829               	movf	UART_Init@baudrate+3,w
  1017  06FE  00AD               	movwf	??_UART_Init+3
  1018  06FF  3004               	movlw	4
  1019  0700                     u265:	
  1020  0700  1003               	clrc
  1021  0701  0DAA               	rlf	??_UART_Init,f
  1022  0702  0DAB               	rlf	??_UART_Init+1,f
  1023  0703  0DAC               	rlf	??_UART_Init+2,f
  1024  0704  0DAD               	rlf	??_UART_Init+3,f
  1025  0705                     u260:	
  1026  0705  3EFF               	addlw	-1
  1027  0706  1D03               	skipz
  1028  0707  2F00               	goto	u265
  1029  0708  082D               	movf	??_UART_Init+3,w
  1030  0709  00F3               	movwf	___aldiv@divisor+3
  1031  070A  082C               	movf	??_UART_Init+2,w
  1032  070B  00F2               	movwf	___aldiv@divisor+2
  1033  070C  082B               	movf	??_UART_Init+1,w
  1034  070D  00F1               	movwf	___aldiv@divisor+1
  1035  070E  082A               	movf	??_UART_Init,w
  1036  070F  00F0               	movwf	___aldiv@divisor
  1037  0710  0826               	movf	UART_Init@baudrate,w
  1038  0711  00AE               	movwf	??_UART_Init+4
  1039  0712  0827               	movf	UART_Init@baudrate+1,w
  1040  0713  00AF               	movwf	??_UART_Init+5
  1041  0714  0828               	movf	UART_Init@baudrate+2,w
  1042  0715  00B0               	movwf	??_UART_Init+6
  1043  0716  0829               	movf	UART_Init@baudrate+3,w
  1044  0717  00B1               	movwf	??_UART_Init+7
  1045  0718  3004               	movlw	4
  1046  0719                     u275:	
  1047  0719  1003               	clrc
  1048  071A  0DAE               	rlf	??_UART_Init+4,f
  1049  071B  0DAF               	rlf	??_UART_Init+5,f
  1050  071C  0DB0               	rlf	??_UART_Init+6,f
  1051  071D  0DB1               	rlf	??_UART_Init+7,f
  1052  071E                     u270:	
  1053  071E  3EFF               	addlw	-1
  1054  071F  1D03               	skipz
  1055  0720  2F19               	goto	u275
  1056  0721  3000               	movlw	0
  1057  0722  00B2               	movwf	??_UART_Init+8
  1058  0723  3012               	movlw	18
  1059  0724  00B3               	movwf	??_UART_Init+9
  1060  0725  307A               	movlw	122
  1061  0726  00B4               	movwf	??_UART_Init+10
  1062  0727  3000               	movlw	0
  1063  0728  00B5               	movwf	??_UART_Init+11
  1064  0729  082E               	movf	??_UART_Init+4,w
  1065  072A  02B2               	subwf	??_UART_Init+8,f
  1066  072B  082F               	movf	??_UART_Init+5,w
  1067  072C  1C03               	skipc
  1068  072D  0F2F               	incfsz	??_UART_Init+5,w
  1069  072E  2F30               	goto	u281
  1070  072F  2F31               	goto	u282
  1071  0730                     u281:	
  1072  0730  02B3               	subwf	??_UART_Init+9,f
  1073  0731                     u282:	
  1074  0731  0830               	movf	??_UART_Init+6,w
  1075  0732  1C03               	skipc
  1076  0733  0F30               	incfsz	??_UART_Init+6,w
  1077  0734  2F36               	goto	u283
  1078  0735  2F37               	goto	u284
  1079  0736                     u283:	
  1080  0736  02B4               	subwf	??_UART_Init+10,f
  1081  0737                     u284:	
  1082  0737  0831               	movf	??_UART_Init+7,w
  1083  0738  1C03               	skipc
  1084  0739  0F31               	incfsz	??_UART_Init+7,w
  1085  073A  2F3C               	goto	u285
  1086  073B  2F3D               	goto	u286
  1087  073C                     u285:	
  1088  073C  02B5               	subwf	??_UART_Init+11,f
  1089  073D                     u286:	
  1090  073D  0835               	movf	??_UART_Init+11,w
  1091  073E  00F7               	movwf	___aldiv@dividend+3
  1092  073F  0834               	movf	??_UART_Init+10,w
  1093  0740  00F6               	movwf	___aldiv@dividend+2
  1094  0741  0833               	movf	??_UART_Init+9,w
  1095  0742  00F5               	movwf	___aldiv@dividend+1
  1096  0743  0832               	movf	??_UART_Init+8,w
  1097  0744  00F4               	movwf	___aldiv@dividend
  1098  0745  120A  118A  275C  120A  118A  	fcall	___aldiv
  1099  074A  0870               	movf	?___aldiv,w
  1100  074B  1683               	bsf	3,5	;RP0=1, select bank1
  1101  074C  1303               	bcf	3,6	;RP1=0, select bank1
  1102  074D  0099               	movwf	25	;volatile
  1103  074E                     l856:	
  1104                           
  1105                           ;UART.c: 20:     TXSTAbits.BRGH = 1;
  1106  074E  1518               	bsf	24,2	;volatile
  1107  074F                     l858:	
  1108                           
  1109                           ;UART.c: 21:     TXSTAbits.SYNC = 0;
  1110  074F  1218               	bcf	24,4	;volatile
  1111  0750                     l860:	
  1112                           
  1113                           ;UART.c: 22:     RCSTAbits.SPEN = 1;
  1114  0750  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0751  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0752  1798               	bsf	24,7	;volatile
  1117  0753                     l862:	
  1118                           
  1119                           ;UART.c: 23:     RCSTAbits.CREN = 1;
  1120  0753  1618               	bsf	24,4	;volatile
  1121  0754                     l864:	
  1122                           
  1123                           ;UART.c: 24:     TXSTAbits.TXEN = 1;
  1124  0754  1683               	bsf	3,5	;RP0=1, select bank1
  1125  0755  1303               	bcf	3,6	;RP1=0, select bank1
  1126  0756  1698               	bsf	24,5	;volatile
  1127  0757                     l866:	
  1128                           
  1129                           ;UART.c: 25:     TXSTAbits.TX9 = 0;
  1130  0757  1318               	bcf	24,6	;volatile
  1131  0758                     l868:	
  1132                           
  1133                           ;UART.c: 26:     RCSTAbits.RX9 = 0;
  1134  0758  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0759  1303               	bcf	3,6	;RP1=0, select bank0
  1136  075A  1318               	bcf	24,6	;volatile
  1137  075B                     l60:	
  1138  075B  0008               	return
  1139  075C                     __end_of_UART_Init:	
  1140                           
  1141                           	psect	text5
  1142  075C                     __ptext5:	
  1143 ;; *************** function ___aldiv *****************
  1144 ;; Defined at:
  1145 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  divisor         4    0[COMMON] long 
  1148 ;;  dividend        4    4[COMMON] long 
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  quotient        4    2[BANK0 ] long 
  1151 ;;  sign            1    1[BANK0 ] unsigned char 
  1152 ;;  counter         1    0[BANK0 ] unsigned char 
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  4    0[COMMON] long 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2, status,0
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1162 ;;      Params:         8       0       0       0       0
  1163 ;;      Locals:         0       6       0       0       0
  1164 ;;      Temps:          1       0       0       0       0
  1165 ;;      Totals:         9       6       0       0       0
  1166 ;;Total ram usage:       15 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_UART_Init
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           
  1176                           ;psect for function ___aldiv
  1177  075C                     ___aldiv:	
  1178  075C                     l798:	
  1179                           ;incstack = 0
  1180                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1181                           
  1182  075C  1283               	bcf	3,5	;RP0=0, select bank0
  1183  075D  1303               	bcf	3,6	;RP1=0, select bank0
  1184  075E  01A1               	clrf	___aldiv@sign
  1185  075F                     l800:	
  1186  075F  1FF3               	btfss	___aldiv@divisor+3,7
  1187  0760  2F62               	goto	u161
  1188  0761  2F63               	goto	u160
  1189  0762                     u161:	
  1190  0762  2F70               	goto	l237
  1191  0763                     u160:	
  1192  0763                     l802:	
  1193  0763  09F0               	comf	___aldiv@divisor,f
  1194  0764  09F1               	comf	___aldiv@divisor+1,f
  1195  0765  09F2               	comf	___aldiv@divisor+2,f
  1196  0766  09F3               	comf	___aldiv@divisor+3,f
  1197  0767  0AF0               	incf	___aldiv@divisor,f
  1198  0768  1903               	skipnz
  1199  0769  0AF1               	incf	___aldiv@divisor+1,f
  1200  076A  1903               	skipnz
  1201  076B  0AF2               	incf	___aldiv@divisor+2,f
  1202  076C  1903               	skipnz
  1203  076D  0AF3               	incf	___aldiv@divisor+3,f
  1204  076E  01A1               	clrf	___aldiv@sign
  1205  076F  0AA1               	incf	___aldiv@sign,f
  1206  0770                     l237:	
  1207  0770  1FF7               	btfss	___aldiv@dividend+3,7
  1208  0771  2F73               	goto	u171
  1209  0772  2F74               	goto	u170
  1210  0773                     u171:	
  1211  0773  2F83               	goto	l808
  1212  0774                     u170:	
  1213  0774                     l804:	
  1214  0774  09F4               	comf	___aldiv@dividend,f
  1215  0775  09F5               	comf	___aldiv@dividend+1,f
  1216  0776  09F6               	comf	___aldiv@dividend+2,f
  1217  0777  09F7               	comf	___aldiv@dividend+3,f
  1218  0778  0AF4               	incf	___aldiv@dividend,f
  1219  0779  1903               	skipnz
  1220  077A  0AF5               	incf	___aldiv@dividend+1,f
  1221  077B  1903               	skipnz
  1222  077C  0AF6               	incf	___aldiv@dividend+2,f
  1223  077D  1903               	skipnz
  1224  077E  0AF7               	incf	___aldiv@dividend+3,f
  1225  077F                     l806:	
  1226  077F  3001               	movlw	1
  1227  0780  00F8               	movwf	??___aldiv
  1228  0781  0878               	movf	??___aldiv,w
  1229  0782  06A1               	xorwf	___aldiv@sign,f
  1230  0783                     l808:	
  1231  0783  3000               	movlw	0
  1232  0784  00A5               	movwf	___aldiv@quotient+3
  1233  0785  3000               	movlw	0
  1234  0786  00A4               	movwf	___aldiv@quotient+2
  1235  0787  3000               	movlw	0
  1236  0788  00A3               	movwf	___aldiv@quotient+1
  1237  0789  3000               	movlw	0
  1238  078A  00A2               	movwf	___aldiv@quotient
  1239  078B                     l810:	
  1240  078B  0873               	movf	___aldiv@divisor+3,w
  1241  078C  0472               	iorwf	___aldiv@divisor+2,w
  1242  078D  0471               	iorwf	___aldiv@divisor+1,w
  1243  078E  0470               	iorwf	___aldiv@divisor,w
  1244  078F  1903               	skipnz
  1245  0790  2F92               	goto	u181
  1246  0791  2F93               	goto	u180
  1247  0792                     u181:	
  1248  0792  2FE0               	goto	l830
  1249  0793                     u180:	
  1250  0793                     l812:	
  1251  0793  01A0               	clrf	___aldiv@counter
  1252  0794  0AA0               	incf	___aldiv@counter,f
  1253  0795  2FA3               	goto	l816
  1254  0796                     l814:	
  1255  0796  3001               	movlw	1
  1256  0797  00F8               	movwf	??___aldiv
  1257  0798                     u195:	
  1258  0798  1003               	clrc
  1259  0799  0DF0               	rlf	___aldiv@divisor,f
  1260  079A  0DF1               	rlf	___aldiv@divisor+1,f
  1261  079B  0DF2               	rlf	___aldiv@divisor+2,f
  1262  079C  0DF3               	rlf	___aldiv@divisor+3,f
  1263  079D  0BF8               	decfsz	??___aldiv,f
  1264  079E  2F98               	goto	u195
  1265  079F  3001               	movlw	1
  1266  07A0  00F8               	movwf	??___aldiv
  1267  07A1  0878               	movf	??___aldiv,w
  1268  07A2  07A0               	addwf	___aldiv@counter,f
  1269  07A3                     l816:	
  1270  07A3  1FF3               	btfss	___aldiv@divisor+3,7
  1271  07A4  2FA6               	goto	u201
  1272  07A5  2FA7               	goto	u200
  1273  07A6                     u201:	
  1274  07A6  2F96               	goto	l814
  1275  07A7                     u200:	
  1276  07A7                     l818:	
  1277  07A7  3001               	movlw	1
  1278  07A8  00F8               	movwf	??___aldiv
  1279  07A9                     u215:	
  1280  07A9  1003               	clrc
  1281  07AA  0DA2               	rlf	___aldiv@quotient,f
  1282  07AB  0DA3               	rlf	___aldiv@quotient+1,f
  1283  07AC  0DA4               	rlf	___aldiv@quotient+2,f
  1284  07AD  0DA5               	rlf	___aldiv@quotient+3,f
  1285  07AE  0BF8               	decfsz	??___aldiv,f
  1286  07AF  2FA9               	goto	u215
  1287  07B0                     l820:	
  1288  07B0  0873               	movf	___aldiv@divisor+3,w
  1289  07B1  0277               	subwf	___aldiv@dividend+3,w
  1290  07B2  1D03               	skipz
  1291  07B3  2FBE               	goto	u225
  1292  07B4  0872               	movf	___aldiv@divisor+2,w
  1293  07B5  0276               	subwf	___aldiv@dividend+2,w
  1294  07B6  1D03               	skipz
  1295  07B7  2FBE               	goto	u225
  1296  07B8  0871               	movf	___aldiv@divisor+1,w
  1297  07B9  0275               	subwf	___aldiv@dividend+1,w
  1298  07BA  1D03               	skipz
  1299  07BB  2FBE               	goto	u225
  1300  07BC  0870               	movf	___aldiv@divisor,w
  1301  07BD  0274               	subwf	___aldiv@dividend,w
  1302  07BE                     u225:	
  1303  07BE  1C03               	skipc
  1304  07BF  2FC1               	goto	u221
  1305  07C0  2FC2               	goto	u220
  1306  07C1                     u221:	
  1307  07C1  2FD1               	goto	l826
  1308  07C2                     u220:	
  1309  07C2                     l822:	
  1310  07C2  0870               	movf	___aldiv@divisor,w
  1311  07C3  02F4               	subwf	___aldiv@dividend,f
  1312  07C4  0871               	movf	___aldiv@divisor+1,w
  1313  07C5  1C03               	skipc
  1314  07C6  0F71               	incfsz	___aldiv@divisor+1,w
  1315  07C7  02F5               	subwf	___aldiv@dividend+1,f
  1316  07C8  0872               	movf	___aldiv@divisor+2,w
  1317  07C9  1C03               	skipc
  1318  07CA  0F72               	incfsz	___aldiv@divisor+2,w
  1319  07CB  02F6               	subwf	___aldiv@dividend+2,f
  1320  07CC  0873               	movf	___aldiv@divisor+3,w
  1321  07CD  1C03               	skipc
  1322  07CE  0F73               	incfsz	___aldiv@divisor+3,w
  1323  07CF  02F7               	subwf	___aldiv@dividend+3,f
  1324  07D0                     l824:	
  1325  07D0  1422               	bsf	___aldiv@quotient,0
  1326  07D1                     l826:	
  1327  07D1  3001               	movlw	1
  1328  07D2                     u235:	
  1329  07D2  1003               	clrc
  1330  07D3  0CF3               	rrf	___aldiv@divisor+3,f
  1331  07D4  0CF2               	rrf	___aldiv@divisor+2,f
  1332  07D5  0CF1               	rrf	___aldiv@divisor+1,f
  1333  07D6  0CF0               	rrf	___aldiv@divisor,f
  1334  07D7  3EFF               	addlw	-1
  1335  07D8  1D03               	skipz
  1336  07D9  2FD2               	goto	u235
  1337  07DA                     l828:	
  1338  07DA  3001               	movlw	1
  1339  07DB  02A0               	subwf	___aldiv@counter,f
  1340  07DC  1D03               	btfss	3,2
  1341  07DD  2FDF               	goto	u241
  1342  07DE  2FE0               	goto	u240
  1343  07DF                     u241:	
  1344  07DF  2FA7               	goto	l818
  1345  07E0                     u240:	
  1346  07E0                     l830:	
  1347  07E0  0821               	movf	___aldiv@sign,w
  1348  07E1  1903               	btfsc	3,2
  1349  07E2  2FE4               	goto	u251
  1350  07E3  2FE5               	goto	u250
  1351  07E4                     u251:	
  1352  07E4  2FF0               	goto	l834
  1353  07E5                     u250:	
  1354  07E5                     l832:	
  1355  07E5  09A2               	comf	___aldiv@quotient,f
  1356  07E6  09A3               	comf	___aldiv@quotient+1,f
  1357  07E7  09A4               	comf	___aldiv@quotient+2,f
  1358  07E8  09A5               	comf	___aldiv@quotient+3,f
  1359  07E9  0AA2               	incf	___aldiv@quotient,f
  1360  07EA  1903               	skipnz
  1361  07EB  0AA3               	incf	___aldiv@quotient+1,f
  1362  07EC  1903               	skipnz
  1363  07ED  0AA4               	incf	___aldiv@quotient+2,f
  1364  07EE  1903               	skipnz
  1365  07EF  0AA5               	incf	___aldiv@quotient+3,f
  1366  07F0                     l834:	
  1367  07F0  0825               	movf	___aldiv@quotient+3,w
  1368  07F1  00F3               	movwf	?___aldiv+3
  1369  07F2  0824               	movf	___aldiv@quotient+2,w
  1370  07F3  00F2               	movwf	?___aldiv+2
  1371  07F4  0823               	movf	___aldiv@quotient+1,w
  1372  07F5  00F1               	movwf	?___aldiv+1
  1373  07F6  0822               	movf	___aldiv@quotient,w
  1374  07F7  00F0               	movwf	?___aldiv
  1375  07F8                     l247:	
  1376  07F8  0008               	return
  1377  07F9                     __end_of___aldiv:	
  1378  007E                     btemp	set	126	;btemp
  1379  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     22      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     594
                                              9 COMMON     1     1      0
                          _UART_Init
                          _UART_Read
                               _init
                            _initOsc
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Read
   _init
   _initOsc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      17       5       28.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 16 20:04:34 2020

             __CFG_CP$OFF 0000                        l60 075B                        l45 0668  
                      l64 065A                        l80 06AD                        l81 06B3  
                      l82 06B9                        l83 06BF                        l84 06C5  
                      l76 069B                        l85 06CB                        l77 06F3  
                      l86 06F4                        l78 06A1                        l79 06A7  
                     l237 0770                       l247 07F8                       l800 075F  
                     l810 078B                       l802 0763                       l820 07B0  
                     l812 0793                       l804 0774                       l822 07C2  
                     l814 0796                       l830 07E0                       l806 077F  
                     l832 07E5                       l824 07D0                       l816 07A3  
                     l808 0783                       l834 07F0                       l826 07D1  
                     l818 07A7                       l850 0660                       l914 06D9  
                     l842 06D1                       l828 07DA                       l860 0750  
                     l852 0666                       l862 0753                       l854 06F5  
                     l870 0653                       l838 069A                       l864 0754  
                     l856 074E                       l872 0659                       l848 065B  
                     l880 0674                       l866 0757                       l858 074F  
                     l890 0689                       l882 0683                       l868 0758  
                     l892 0693                       l884 0686                       l876 0669  
                     l798 075C                       l886 0687                       l878 066F  
                     l888 0688                       u200 07A7                       u201 07A6  
                     u220 07C2                       u221 07C1                       u215 07A9  
                     u240 07E0                       u160 0763                       u241 07DF  
                     u225 07BE                       u161 0762                       u250 07E5  
                     u170 0774                       u251 07E4                       u235 07D2  
                     u171 0773                       u180 0793                       u260 0705  
                     u181 0792                       u270 071E                       u281 0730  
                     u265 0700                       u282 0731                       u290 0659  
            __CFG_CPD$OFF 0000                       u195 0798                       u283 0736  
                     u275 0719                       u291 0658                       u284 0737  
                     u285 073C                       u286 073D              __CFG_LVP$OFF 0000  
            __CFG_WRT$OFF 0000                      _main 0669                      _init 065B  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
         __end_of___aldiv 07F9                     ?_main 0070                     ?_init 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _RCREG 001A  
                   _SPBRG 0099                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TXREG 0019            __CFG_FCMEN$OFF 0000        __size_of_UART_Init 0067  
      __size_of_UART_Read 0008           __end_of_initOsc 06F5            __CFG_BOREN$OFF 0000  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07F9              __end_of_main 0699              __end_of_init 0669  
                  ??_main 0079                    ??_init 0070                    _ANSELH 0189  
                  _INTCON 000B               initOsc@frec 0072            __CFG_PWRTE$OFF 0000  
       __end_of_UART_Init 075C         __end_of_UART_Read 065B                 ??___aldiv 0078  
               ??_initOsc 0070   __end_of__initialization 07FC            __pcstackCOMMON 0070  
              __pbssBANK0 0036                __pmaintext 0669                   ___aldiv 075C  
                 __ptext1 0699                   __ptext2 065B                   __ptext3 0653  
                 __ptext4 06F5                   __ptext5 075C                   _initOsc 0699  
        ___aldiv@dividend 0074      end_of_initialization 07FC                 _RCSTAbits 0018  
        ___aldiv@quotient 0022                 _UART_Init 06F5                 _UART_Read 0653  
               _TRISCbits 0087                 _TXSTAbits 0098                ?_UART_Init 0026  
              ?_UART_Read 0070       start_initialization 07F9  __CFG_FOSC$INTRC_NOCLKOUT 0000  
               ___latbits 0002             __pcstackBANK0 0020                  ?___aldiv 0070  
             ??_UART_Init 002A               ??_UART_Read 0070                  ?_initOsc 0070  
         ___aldiv@divisor 0070           ___aldiv@counter 0020                  _PIR1bits 000C  
       UART_Init@baudrate 0026                  _Cont_COM 0036          __size_of___aldiv 009D  
        __size_of_initOsc 005C         __CFG_BOR4V$BOR40V 0000             __size_of_main 0030  
           __size_of_init 000E                _OSCCONbits 008F              ___aldiv@sign 0021  
